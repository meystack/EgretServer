/*
** Lua binding: server
** Generated automatically by tolua++-1.0.92 on Tue Oct 19 08:53:56 2021.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
extern "C" int  tolua_server_open (lua_State* tolua_S);

#include "../../StdAfx.h"
#include "LuaSocket.hpp"
#include "../interface/BuffType.h"
#include "../interface/PropertyIDDef.h"
#include "../interface/SystemParamDef.h"
#include "../interface/ActorEventDef.h"
#include "../interface/ActorExportFun.h"
#include "../interface/AchieveEvent.h"
#include "../interface/FubenExportFun.h"
#include "../interface/MapAreaAttribute.h"
#include "../interface/SystemExportFun.h"
#include "../interface/ItemExportFun.h"
#include "../interface/TipmsgID.h"
#include "../interface/CScriptDataPacket.h"
#include "../interface/TeamExportFun.h"
#include "../interface/RankingExport.h"
#include "../interface/ScoreRecorderExport.h"
#include "../interface/GuildExportFun.h"
#include "../interface/PetExportFun.h"
#include "../../networkdata/LogicServerCmd.h"
#include "../interface/CommonActivityDef.h"
#include "../interface/HeroExportFun.h"
#include "../interface/TipmsgID.h"
#include "../interface/LogDef.h"
#include "../../quest/Quest.h"

/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_DropItemInfo (lua_State* tolua_S)
{
 DropItemInfo* self = (DropItemInfo*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_DropItemList (lua_State* tolua_S)
{
 DropItemList* self = (DropItemList*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_INT_PTR (lua_State* tolua_S)
{
 INT_PTR* self = (INT_PTR*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"LuaSocket");
 tolua_usertype(tolua_S,"CBoxDropMgr");
 tolua_usertype(tolua_S,"INT_PTR");
 tolua_usertype(tolua_S,"DropItemInfo");
 tolua_usertype(tolua_S,"CQuestData");
 tolua_usertype(tolua_S,"CBoxDrop");
 tolua_usertype(tolua_S,"DropItemList");
 tolua_usertype(tolua_S,"enMiscDataType");
 tolua_usertype(tolua_S,"CScene");
 tolua_usertype(tolua_S,"CBaseScriptExportObject");
}

/* function: Actor::getEntity */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getEntity00
static int tolua_server_Actor_getEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  double handle = ((double)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getEntity(handle);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorByName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorByName00
static int tolua_server_Actor_getActorByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* szActorName = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getActorByName(szActorName);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorById */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorById00
static int tolua_server_Actor_getActorById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nActorID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getActorById(nActorID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getName00
static int tolua_server_Actor_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEnity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  Actor::getName(pEnity);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getAccount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getAccount00
static int tolua_server_Actor_getAccount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  Actor::getAccount(pEntity);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAccount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::findGuildMemberName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_findGuildMemberName00
static int tolua_server_Actor_findGuildMemberName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nActorid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   char* tolua_ret = (char*)  Actor::findGuildMemberName(pEntity,nActorid);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findGuildMemberName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildNameByRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildNameByRank00
static int tolua_server_Actor_getGuildNameByRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRank = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   char* tolua_ret = (char*)  Actor::getGuildNameByRank(pEntity,nRank);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildNameByRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildLeaderNameByRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildLeaderNameByRank00
static int tolua_server_Actor_getGuildLeaderNameByRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRank = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const char* tolua_ret = (const char*)  Actor::getGuildLeaderNameByRank(pEntity,nRank);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildLeaderNameByRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildMemNumByRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildMemNumByRank00
static int tolua_server_Actor_getGuildMemNumByRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRank = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getGuildMemNumByRank(pEntity,nRank);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildMemNumByRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildCoinByRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildCoinByRank00
static int tolua_server_Actor_getGuildCoinByRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRank = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getGuildCoinByRank(pEntity,nRank);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildCoinByRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasGuildByRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasGuildByRank00
static int tolua_server_Actor_hasGuildByRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRank = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::hasGuildByRank(pEntity,nRank);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasGuildByRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendWelcomeToNewMember */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendWelcomeToNewMember00
static int tolua_server_Actor_sendWelcomeToNewMember00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* nMsg = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::sendWelcomeToNewMember(pEntity,nMsg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendWelcomeToNewMember'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getHandle00
static int tolua_server_Actor_getHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   double tolua_ret = (double)  Actor::getHandle(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getEntityType */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getEntityType00
static int tolua_server_Actor_getEntityType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getEntityType(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntityType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getKillHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getKillHandle00
static int tolua_server_Actor_getKillHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   double tolua_ret = (double)  Actor::getKillHandle(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getKillHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasQuest */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasQuest00
static int tolua_server_Actor_hasQuest00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEnity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nQuestID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::hasQuest(pEnity,nQuestID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasQuest'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::ExOnQuestEvent */
#ifndef TOLUA_DISABLE_tolua_server_Actor_ExOnQuestEvent00
static int tolua_server_Actor_ExOnQuestEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nQuestType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,3,0));
  int nId = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Actor::ExOnQuestEvent(pEntity,nQuestType,nValue,nId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ExOnQuestEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::closeNPCDialog */
#ifndef TOLUA_DISABLE_tolua_server_Actor_closeNPCDialog00
static int tolua_server_Actor_closeNPCDialog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::closeNPCDialog(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeNPCDialog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::openDialogs */
#ifndef TOLUA_DISABLE_tolua_server_Actor_openDialogs00
static int tolua_server_Actor_openDialogs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* sParam = ((const char*)  tolua_tostring(tolua_S,3,""));
  {
   Actor::openDialogs(pEntity,nType,sParam);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'openDialogs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::closeDialogs */
#ifndef TOLUA_DISABLE_tolua_server_Actor_closeDialogs00
static int tolua_server_Actor_closeDialogs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::closeDialogs(pEntity,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeDialogs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMenPai */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMenPai00
static int tolua_server_Actor_getMenPai00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getMenPai(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMenPai'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getExpLastLogout */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getExpLastLogout00
static int tolua_server_Actor_getExpLastLogout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getExpLastLogout(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExpLastLogout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getZyContriLogout */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getZyContriLogout00
static int tolua_server_Actor_getZyContriLogout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getZyContriLogout(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZyContriLogout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setSocialMask */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setSocialMask00
static int tolua_server_Actor_setSocialMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMaskID = ((int)  tolua_tonumber(tolua_S,2,0));
  bool flag = ((bool) (tolua_toboolean(tolua_S,3,0)!=0));
  {
   bool tolua_ret = (bool)  Actor::setSocialMask(pEntity,nMaskID,flag);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSocialMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSocialMask */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSocialMask00
static int tolua_server_Actor_getSocialMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMaskID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::getSocialMask(pEntity,nMaskID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSocialMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::enterFuBen */
#ifndef TOLUA_DISABLE_tolua_server_Actor_enterFuBen00
static int tolua_server_Actor_enterFuBen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int hFb = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,3,0));
  int x = ((int)  tolua_tonumber(tolua_S,4,0));
  int y = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   bool tolua_ret = (bool)  Actor::enterFuBen(pEntity,hFb,nSceneId,x,y);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enterFuBen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::EnterActivityScene */
#ifndef TOLUA_DISABLE_tolua_server_Actor_EnterActivityScene00
static int tolua_server_Actor_EnterActivityScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  int nWeight = ((int)  tolua_tonumber(tolua_S,5,0));
  int nHeight = ((int)  tolua_tonumber(tolua_S,6,0));
  int nNpcId = ((int)  tolua_tonumber(tolua_S,7,0));
  {
   bool tolua_ret = (bool)  Actor::EnterActivityScene(pEntity,nSceneId,x,y,nWeight,nHeight,nNpcId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EnterActivityScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::enterScene */
#ifndef TOLUA_DISABLE_tolua_server_Actor_enterScene00
static int tolua_server_Actor_enterScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  int nWeight = ((int)  tolua_tonumber(tolua_S,5,0));
  int nHeight = ((int)  tolua_tonumber(tolua_S,6,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,7,0));
  int nParam = ((int)  tolua_tonumber(tolua_S,8,0));
  {
   bool tolua_ret = (bool)  Actor::enterScene(pEntity,nSceneId,x,y,nWeight,nHeight,nValue,nParam);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enterScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::learnSkill */
#ifndef TOLUA_DISABLE_tolua_server_Actor_learnSkill00
static int tolua_server_Actor_learnSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  Actor::learnSkill(pEntity,nId,nLevel);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'learnSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::startLearnSkill */
#ifndef TOLUA_DISABLE_tolua_server_Actor_startLearnSkill00
static int tolua_server_Actor_startLearnSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::startLearnSkill(pEntity,nId,nLevel);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startLearnSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSkillLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSkillLevel00
static int tolua_server_Actor_getSkillLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getSkillLevel(pEntity,nId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::delSkill */
#ifndef TOLUA_DISABLE_tolua_server_Actor_delSkill00
static int tolua_server_Actor_delSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::delSkill(pEntity,nId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::removeItem */
#ifndef TOLUA_DISABLE_tolua_server_Actor_removeItem00
static int tolua_server_Actor_removeItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isstring(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,10,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int wItemId = ((int)  tolua_tonumber(tolua_S,2,0));
  int btCount = ((int)  tolua_tonumber(tolua_S,3,0));
  int btQuality = ((int)  tolua_tonumber(tolua_S,4,-1));
  int btStrong = ((int)  tolua_tonumber(tolua_S,5,-1));
  int btBindFlag = ((int)  tolua_tonumber(tolua_S,6,-1));
  char* sComment = ((char*)  tolua_tostring(tolua_S,7,NULL));
  int nLogID = ((int)  tolua_tonumber(tolua_S,8,2));
  const int nDuraOdds = ((const int)  tolua_tonumber(tolua_S,9,-1));
  bool bIncEquipBar = ((bool) (tolua_toboolean(tolua_S,10,false)!=0));
  {
   int tolua_ret = (int)  Actor::removeItem(pEntity,wItemId,btCount,btQuality,btStrong,btBindFlag,sComment,nLogID,nDuraOdds,bIncEquipBar);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addItem */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addItem00
static int tolua_server_Actor_addItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isstring(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int wItemId = ((int)  tolua_tonumber(tolua_S,2,0));
  int btQuality = ((int)  tolua_tonumber(tolua_S,3,0));
  int btStrong = ((int)  tolua_tonumber(tolua_S,4,0));
  int btCount = ((int)  tolua_tonumber(tolua_S,5,0));
  int btBindFlag = ((int)  tolua_tonumber(tolua_S,6,0));
  int nLeftTime = ((int)  tolua_tonumber(tolua_S,7,0));
  char* sComment = ((char*)  tolua_tostring(tolua_S,8,NULL));
  int nLogID = ((int)  tolua_tonumber(tolua_S,9,1));
  int nQualityDataIndex = ((int)  tolua_tonumber(tolua_S,10,-1));
  {
   int tolua_ret = (int)  Actor::addItem(pEntity,wItemId,btQuality,btStrong,btCount,btBindFlag,nLeftTime,sComment,nLogID,nQualityDataIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getIntProperty */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getIntProperty00
static int tolua_server_Actor_getIntProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int pid = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getIntProperty(pEntity,pid);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getIntProperty2 */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getIntProperty200
static int tolua_server_Actor_getIntProperty200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int pid = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getIntProperty2(pEntity,pid);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntProperty2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getUInt64Property */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getUInt64Property00
static int tolua_server_Actor_getUInt64Property00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int pid = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   double tolua_ret = (double)  Actor::getUInt64Property(pEntity,pid);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUInt64Property'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorBattlePower */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorBattlePower00
static int tolua_server_Actor_getActorBattlePower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getActorBattlePower(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorBattlePower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::collectOperate */
#ifndef TOLUA_DISABLE_tolua_server_Actor_collectOperate00
static int tolua_server_Actor_collectOperate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::collectOperate(pEntity,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'collectOperate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setUIntProperty */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setUIntProperty00
static int tolua_server_Actor_setUIntProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPropID = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int nValue = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::setUIntProperty(pEntity,nPropID,nValue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUIntProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setUInt64Property */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setUInt64Property00
static int tolua_server_Actor_setUInt64Property00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPropID = ((int)  tolua_tonumber(tolua_S,2,0));
  double dValue = ((double)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::setUInt64Property(pEntity,nPropID,dValue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUInt64Property'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setMonsterProperty */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setMonsterProperty00
static int tolua_server_Actor_setMonsterProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPropID = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int nValue = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::setMonsterProperty(pEntity,nPropID,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMonsterProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::removeItemByPtr */
#ifndef TOLUA_DISABLE_tolua_server_Actor_removeItemByPtr00
static int tolua_server_Actor_removeItemByPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,0));
  bool bNeedFreeMemory = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  char* sComment = ((char*)  tolua_tostring(tolua_S,5,0));
  int nWayLogID = ((int)  tolua_tonumber(tolua_S,6,0));
  {
   int tolua_ret = (int)  Actor::removeItemByPtr(pEntity,pUserItem,nCount,bNeedFreeMemory,sComment,nWayLogID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeItemByPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isHpFull */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isHpFull00
static int tolua_server_Actor_isHpFull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isHpFull(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isHpFull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isMpFull */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isMpFull00
static int tolua_server_Actor_isMpFull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isMpFull(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMpFull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSceneAreaFlag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSceneAreaFlag00
static int tolua_server_Actor_getSceneAreaFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getSceneAreaFlag(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneAreaFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addBuffById */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addBuffById00
static int tolua_server_Actor_addBuffById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::addBuffById(pEntity,nBuffId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addBuffById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addBuffValueById */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addBuffValueById00
static int tolua_server_Actor_addBuffValueById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::addBuffValueById(pEntity,nBuffId,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addBuffValueById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addGuildBuff */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addGuildBuff00
static int tolua_server_Actor_addGuildBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isstring(tolua_S,7,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,1,&tolua_err) ||
     !tolua_isuserdata(tolua_S,9,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGroupID = ((int)  tolua_tonumber(tolua_S,3,0));
  double dValue = ((double)  tolua_tonumber(tolua_S,4,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,5,0));
  int nInterval = ((int)  tolua_tonumber(tolua_S,6,0));
  char* buffName = ((char*)  tolua_tostring(tolua_S,7,0));
  bool timeOverlay = ((bool) (tolua_toboolean(tolua_S,8,false)!=0));
  void* pGiver = ((void*)  tolua_touserdata(tolua_S,9,0));
  int param = ((int)  tolua_tonumber(tolua_S,10,0));
  {
   Actor::addGuildBuff(pEntity,nBuffType,nGroupID,dValue,nTimes,nInterval,buffName,timeOverlay,pGiver,param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addGuildBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::delBuff */
#ifndef TOLUA_DISABLE_tolua_server_Actor_delBuff00
static int tolua_server_Actor_delBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGroupID = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::delBuff(pEntity,nBuffType,nGroupID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::delBuffById */
#ifndef TOLUA_DISABLE_tolua_server_Actor_delBuffById00
static int tolua_server_Actor_delBuffById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::delBuffById(pEntity,nBuffId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delBuffById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::RemoveGroupBuff */
#ifndef TOLUA_DISABLE_tolua_server_Actor_RemoveGroupBuff00
static int tolua_server_Actor_RemoveGroupBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nGroupStart = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGroupEnd = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::RemoveGroupBuff(pEntity,nGroupStart,nGroupEnd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveGroupBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasBuff */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasBuff00
static int tolua_server_Actor_hasBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGroup = ((int)  tolua_tonumber(tolua_S,3,-1));
  {
   bool tolua_ret = (bool)  Actor::hasBuff(pEntity,nBuffType,nGroup);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasBuffById */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasBuffById00
static int tolua_server_Actor_hasBuffById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::hasBuffById(pEntity,nBuffId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasBuffById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeHp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeHp00
static int tolua_server_Actor_changeHp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeHp(pEntity,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeHp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeMp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeMp00
static int tolua_server_Actor_changeMp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeMp(pEntity,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeMp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getItemCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getItemCount00
static int tolua_server_Actor_getItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isuserdata(tolua_S,7,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const int wItemId = ((const int)  tolua_tonumber(tolua_S,2,0));
  const int nQuality = ((const int)  tolua_tonumber(tolua_S,3,0));
  const int nStrong = ((const int)  tolua_tonumber(tolua_S,4,0));
  const int nBind = ((const int)  tolua_tonumber(tolua_S,5,-1));
  const int nDuraOdds = ((const int)  tolua_tonumber(tolua_S,6,-1));
  void* pNoItem = ((void*)  tolua_touserdata(tolua_S,7,NULL));
  bool bIncEquipBar = ((bool) (tolua_toboolean(tolua_S,8,false)!=0));
  {
   int tolua_ret = (int)  Actor::getItemCount(pEntity,wItemId,nQuality,nStrong,nBind,nDuraOdds,pNoItem,bIncEquipBar);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getDepotItemCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getDepotItemCount00
static int tolua_server_Actor_getDepotItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int wItemId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getDepotItemCount(pEntity,wItemId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDepotItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::canAddItem */
#ifndef TOLUA_DISABLE_tolua_server_Actor_canAddItem00
static int tolua_server_Actor_canAddItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,4,0));
  int nStrong = ((int)  tolua_tonumber(tolua_S,5,0));
  bool isBinded = ((bool) (tolua_toboolean(tolua_S,6,false)!=0));
  {
   bool tolua_ret = (bool)  Actor::canAddItem(pEntity,nItemID,nCount,nQuality,nStrong,isBinded);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canAddItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendTipmsgWithId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendTipmsgWithId00
static int tolua_server_Actor_sendTipmsgWithId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTipmsgID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nTipmsgType = ((int)  tolua_tonumber(tolua_S,3,ttTipmsgWindow));
  {
   Actor::sendTipmsgWithId(pEntity,nTipmsgID,nTipmsgType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendTipmsgWithId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendTipmsgWithParams */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendTipmsgWithParams00
static int tolua_server_Actor_sendTipmsgWithParams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isstring(tolua_S,4,1,&tolua_err) ||
     !tolua_isstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isstring(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTipmsgID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nTipmsgType = ((int)  tolua_tonumber(tolua_S,3,ttTipmsgWindow));
  char* sParam1 = ((char*)  tolua_tostring(tolua_S,4,NULL));
  char* sParam2 = ((char*)  tolua_tostring(tolua_S,5,NULL));
  char* sParam3 = ((char*)  tolua_tostring(tolua_S,6,NULL));
  {
   Actor::sendTipmsgWithParams(pEntity,nTipmsgID,nTipmsgType,sParam1,sParam2,sParam3);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendTipmsgWithParams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendTipmsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendTipmsg00
static int tolua_server_Actor_sendTipmsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sTipmsg = ((const char*)  tolua_tostring(tolua_S,2,0));
  int nType = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::sendTipmsg(pEntity,sTipmsg,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendTipmsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMoneyCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMoneyCount00
static int tolua_server_Actor_getMoneyCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMoneyType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getMoneyCount(pEntity,nMoneyType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMoneyCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeMoney */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeMoney00
static int tolua_server_Actor_changeMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMoneyType = ((int)  tolua_tonumber(tolua_S,2,0));
  double nValue = ((double)  tolua_tonumber(tolua_S,3,0));
  int nLogid = ((int)  tolua_tonumber(tolua_S,4,0));
  const char* sComment = ((const char*)  tolua_tostring(tolua_S,5,0));
  {
   bool tolua_ret = (bool)  Actor::changeMoney(pEntity,nMoneyType,nValue,nLogid,sComment);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasEquiment */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasEquiment00
static int tolua_server_Actor_hasEquiment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const int wItemId = ((const int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::hasEquiment(pEntity,wItemId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasEquiment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getEquiment */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getEquiment00
static int tolua_server_Actor_getEquiment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const int wItemId = ((const int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Actor::getEquiment(pEntity,wItemId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEquiment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::DelEquiment */
#ifndef TOLUA_DISABLE_tolua_server_Actor_DelEquiment00
static int tolua_server_Actor_DelEquiment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const int wItemId = ((const int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::DelEquiment(pEntity,wItemId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DelEquiment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isInTeam */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isInTeam00
static int tolua_server_Actor_isInTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isInTeam(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::exitTeam */
#ifndef TOLUA_DISABLE_tolua_server_Actor_exitTeam00
static int tolua_server_Actor_exitTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::exitTeam(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exitTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addToTeam */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addToTeam00
static int tolua_server_Actor_addToTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::addToTeam(pEntity,nTeamId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addToTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getFubenId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getFubenId00
static int tolua_server_Actor_getFubenId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getFubenId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFubenId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSceneId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSceneId00
static int tolua_server_Actor_getSceneId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getSceneId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSceneName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSceneName00
static int tolua_server_Actor_getSceneName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   char* tolua_ret = (char*)  Actor::getSceneName(pEntity,x,y);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)x);
   tolua_pushnumber(tolua_S,(lua_Number)y);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::exitFuben */
#ifndef TOLUA_DISABLE_tolua_server_Actor_exitFuben00
static int tolua_server_Actor_exitFuben00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,-1));
  int nPosX = ((int)  tolua_tonumber(tolua_S,3,-1));
  int nPosY = ((int)  tolua_tonumber(tolua_S,4,-1));
  {
   Actor::exitFuben(pEntity,nSceneId,nPosX,nPosY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exitFuben'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::exitFubenAndBackCity */
#ifndef TOLUA_DISABLE_tolua_server_Actor_exitFubenAndBackCity00
static int tolua_server_Actor_exitFubenAndBackCity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::exitFubenAndBackCity(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exitFubenAndBackCity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSkillProperty */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSkillProperty00
static int tolua_server_Actor_getSkillProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSkillID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPropID = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  Actor::getSkillProperty(pEntity,nSkillID,nPropID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setSkillProperty */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setSkillProperty00
static int tolua_server_Actor_setSkillProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSkillID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPropID = ((int)  tolua_tonumber(tolua_S,3,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  Actor::setSkillProperty(pEntity,nSkillID,nPropID,nValue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkillProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getFubenHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getFubenHandle00
static int tolua_server_Actor_getFubenHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getFubenHandle(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFubenHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSceneHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSceneHandle00
static int tolua_server_Actor_getSceneHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getSceneHandle(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getFubenPrt */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getFubenPrt00
static int tolua_server_Actor_getFubenPrt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getFubenPrt(pEntity);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFubenPrt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getScenePtr */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getScenePtr00
static int tolua_server_Actor_getScenePtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getScenePtr(pEntity);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScenePtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::messageBox */
#ifndef TOLUA_DISABLE_tolua_server_Actor_messageBox00
static int tolua_server_Actor_messageBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isstring(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isstring(tolua_S,10,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,11,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,12,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,13,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,14,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,15,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double hNpc = ((double)  tolua_tonumber(tolua_S,2,0));
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  const char* sTitle = ((const char*)  tolua_tostring(tolua_S,4,0));
  const char* sBtn1 = ((const char*)  tolua_tostring(tolua_S,5,0));
  const char* sBtn2 = ((const char*)  tolua_tostring(tolua_S,6,0));
  const char* sBtn3 = ((const char*)  tolua_tostring(tolua_S,7,0));
  unsigned int nTimeOut = ((unsigned int)  tolua_tonumber(tolua_S,8,0));
  int msgType = ((int)  tolua_tonumber(tolua_S,9,0));
  const char* sTip = ((const char*)  tolua_tostring(tolua_S,10,NULL));
  int nIcon = ((int)  tolua_tonumber(tolua_S,11,0));
  int nTimeOutBtn = ((int)  tolua_tonumber(tolua_S,12,0));
  int msgId = ((int)  tolua_tonumber(tolua_S,13,0));
  int showId = ((int)  tolua_tonumber(tolua_S,14,mbsDefault));
  {
   int tolua_ret = (int)  Actor::messageBox(pEntity,hNpc,nActorId,sTitle,sBtn1,sBtn2,sBtn3,nTimeOut,msgType,sTip,nIcon,nTimeOutBtn,msgId,showId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'messageBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getNpc */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getNpc00
static int tolua_server_Actor_getNpc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   double tolua_ret = (double)  Actor::getNpc(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isInSameScreen */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isInSameScreen00
static int tolua_server_Actor_isInSameScreen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* other = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::isInSameScreen(pEntity,other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInSameScreen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTeamMemberCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTeamMemberCount00
static int tolua_server_Actor_getTeamMemberCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getTeamMemberCount(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamMemberCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getOnlineTeamMemberCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getOnlineTeamMemberCount00
static int tolua_server_Actor_getOnlineTeamMemberCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getOnlineTeamMemberCount(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOnlineTeamMemberCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTeammemberByIndex */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTeammemberByIndex00
static int tolua_server_Actor_getTeammemberByIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int nActorID = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   void* tolua_ret = (void*)  Actor::getTeammemberByIndex(pEntity,nIndex,nActorID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)nActorID);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeammemberByIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorPtrByName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorPtrByName00
static int tolua_server_Actor_getActorPtrByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sName = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getActorPtrByName(sName);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorPtrByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorPtrById */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorPtrById00
static int tolua_server_Actor_getActorPtrById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getActorPtrById(nActorId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorPtrById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::createMonster */
#ifndef TOLUA_DISABLE_tolua_server_Actor_createMonster00
static int tolua_server_Actor_createMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nMonsterid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int posX = ((int)  tolua_tonumber(tolua_S,3,0));
  int posY = ((int)  tolua_tonumber(tolua_S,4,0));
  unsigned int nLiveTime = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
  bool addSelfName = ((bool) (tolua_toboolean(tolua_S,6,false)!=0));
  {
   void* tolua_ret = (void*)  Actor::createMonster(pEntity,nMonsterid,posX,posY,nLiveTime,addSelfName);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setMonsterOwer */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setMonsterOwer00
static int tolua_server_Actor_setMonsterOwer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pMonster = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   Actor::setMonsterOwer(pEntity,pMonster);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMonsterOwer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMonsterOwner */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMonsterOwner00
static int tolua_server_Actor_getMonsterOwner00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getMonsterOwner(pEntity);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterOwner'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setMonsterOwnerName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setMonsterOwnerName00
static int tolua_server_Actor_setMonsterOwnerName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pMonster = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  char* sName = ((char*)  tolua_tostring(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::setMonsterOwnerName(pMonster,nIndex,sName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMonsterOwnerName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setMonsterName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setMonsterName00
static int tolua_server_Actor_setMonsterName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sName = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::setMonsterName(pEntity,sName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMonsterName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::monsterRealDropItemExp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_monsterRealDropItemExp00
static int tolua_server_Actor_monsterRealDropItemExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pMonster = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   Actor::monsterRealDropItemExp(pEntity,pMonster);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'monsterRealDropItemExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setMonsterCanMove */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setMonsterCanMove00
static int tolua_server_Actor_setMonsterCanMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bState = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setMonsterCanMove(pEntity,bState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMonsterCanMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setReliveTimeOut */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setReliveTimeOut00
static int tolua_server_Actor_setReliveTimeOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nTimeOut = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setReliveTimeOut(pEntity,nTimeOut);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setReliveTimeOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::clearReliveTimeOut */
#ifndef TOLUA_DISABLE_tolua_server_Actor_clearReliveTimeOut00
static int tolua_server_Actor_clearReliveTimeOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::clearReliveTimeOut(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearReliveTimeOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getReliveTimeOut */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getReliveTimeOut00
static int tolua_server_Actor_getReliveTimeOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getReliveTimeOut(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getReliveTimeOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::reqEnterFuben */
#ifndef TOLUA_DISABLE_tolua_server_Actor_reqEnterFuben00
static int tolua_server_Actor_reqEnterFuben00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nFubenId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::reqEnterFuben(pEntity,nFubenId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reqEnterFuben'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::reqExitFuben */
#ifndef TOLUA_DISABLE_tolua_server_Actor_reqExitFuben00
static int tolua_server_Actor_reqExitFuben00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nFubenId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::reqExitFuben(pEntity,nFubenId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reqExitFuben'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::returnCity */
#ifndef TOLUA_DISABLE_tolua_server_Actor_returnCity00
static int tolua_server_Actor_returnCity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::returnCity(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'returnCity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::relive */
#ifndef TOLUA_DISABLE_tolua_server_Actor_relive00
static int tolua_server_Actor_relive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool isReturn = ((bool) (tolua_toboolean(tolua_S,2,false)!=0));
  {
   Actor::relive(pEntity,isReturn);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'relive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getLastLogoutTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getLastLogoutTime00
static int tolua_server_Actor_getLastLogoutTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getLastLogoutTime(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLastLogoutTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getLoginTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getLoginTime00
static int tolua_server_Actor_getLoginTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getLoginTime(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLoginTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTeamId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTeamId00
static int tolua_server_Actor_getTeamId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getTeamId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendOpenBuildFormToClient */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendOpenBuildFormToClient00
static int tolua_server_Actor_sendOpenBuildFormToClient00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::sendOpenBuildFormToClient(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendOpenBuildFormToClient'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildZzTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildZzTime00
static int tolua_server_Actor_getGuildZzTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getGuildZzTime(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildZzTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildZzTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildZzTime00
static int tolua_server_Actor_setGuildZzTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildZzTime(pEntity,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildZzTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildWealTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildWealTime00
static int tolua_server_Actor_getGuildWealTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getGuildWealTime(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildWealTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildWealTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildWealTime00
static int tolua_server_Actor_setGuildWealTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildWealTime(pEntity,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildWealTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::clearGuildZjItem */
#ifndef TOLUA_DISABLE_tolua_server_Actor_clearGuildZjItem00
static int tolua_server_Actor_clearGuildZjItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::clearGuildZjItem(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearGuildZjItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getPkMode */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getPkMode00
static int tolua_server_Actor_getPkMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getPkMode(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPkMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setPkMode */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setPkMode00
static int tolua_server_Actor_setPkMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMode = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setPkMode(pEntity,nMode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPkMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isKillAllMonster */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isKillAllMonster00
static int tolua_server_Actor_isKillAllMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::isKillAllMonster(pEntity,nMonsterId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isKillAllMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getLiveMonsterCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getLiveMonsterCount00
static int tolua_server_Actor_getLiveMonsterCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getLiveMonsterCount(pEntity,nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLiveMonsterCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMyMonsterCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMyMonsterCount00
static int tolua_server_Actor_getMyMonsterCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getMyMonsterCount(pEntity,nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMyMonsterCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addExp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addExp00
static int tolua_server_Actor_addExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  int nWay = ((int)  tolua_tonumber(tolua_S,3,0));
  int nParam = ((int)  tolua_tonumber(tolua_S,4,0));
  int nType = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   Actor::addExp(pEntity,nValue,nWay,nParam,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getDyanmicVar */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getDyanmicVar00
static int tolua_server_Actor_getDyanmicVar00(lua_State* tolua_S)
{
	return Actor::getDyanmicVar(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getStaticVar */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getStaticVar00
static int tolua_server_Actor_getStaticVar00(lua_State* tolua_S)
{
	return Actor::getStaticVar(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasMapAreaAttri */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasMapAreaAttri00
static int tolua_server_Actor_hasMapAreaAttri00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAttriValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::hasMapAreaAttri(pEntity,nAttriValue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMapAreaAttri'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasMapAreaAttriValue */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasMapAreaAttriValue00
static int tolua_server_Actor_hasMapAreaAttriValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAttriValue = ((int)  tolua_tonumber(tolua_S,2,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::hasMapAreaAttriValue(pEntity,nAttriValue,nValue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMapAreaAttriValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMapAttriValue */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMapAttriValue00
static int tolua_server_Actor_getMapAttriValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAttriValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getMapAttriValue(pEntity,nAttriValue);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMapAttriValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::triggerAchieveEvent */
#ifndef TOLUA_DISABLE_tolua_server_Actor_triggerAchieveEvent00
static int tolua_server_Actor_triggerAchieveEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nEventID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,3,0));
  int nSubType = ((int)  tolua_tonumber(tolua_S,4,1));
  {
   Actor::triggerAchieveEvent(pEntity,nEventID,nValue,nSubType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'triggerAchieveEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTalkNpcName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTalkNpcName00
static int tolua_server_Actor_getTalkNpcName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  Actor::getTalkNpcName(pEntity);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTalkNpcName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::checkNpcTranLimit */
#ifndef TOLUA_DISABLE_tolua_server_Actor_checkNpcTranLimit00
static int tolua_server_Actor_checkNpcTranLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  int staticType = ((int)  tolua_tonumber(tolua_S,2,0));
  int dayLimit = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::checkNpcTranLimit(pActor,staticType,dayLimit);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkNpcTranLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addNpcTranTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addNpcTranTimes00
static int tolua_server_Actor_addNpcTranTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  int staticType = ((int)  tolua_tonumber(tolua_S,2,0));
  int num = ((int)  tolua_tonumber(tolua_S,3,1));
  {
   bool tolua_ret = (bool)  Actor::addNpcTranTimes(pActor,staticType,num);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addNpcTranTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorFriendsCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorFriendsCount00
static int tolua_server_Actor_getActorFriendsCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getActorFriendsCount(pActor);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorFriendsCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorFriend */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorFriend00
static int tolua_server_Actor_getActorFriend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  int idx = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getActorFriend(pActor,idx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorFriend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::postEntityScriptDelayMsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_postEntityScriptDelayMsg00
static int tolua_server_Actor_postEntityScriptDelayMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,9,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nDelayTime = ((int)  tolua_tonumber(tolua_S,2,0));
  bool result = ((bool) (tolua_toboolean(tolua_S,3,0)!=0));
  int param1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int param2 = ((int)  tolua_tonumber(tolua_S,5,0));
  int param3 = ((int)  tolua_tonumber(tolua_S,6,0));
  int param4 = ((int)  tolua_tonumber(tolua_S,7,0));
  int param5 = ((int)  tolua_tonumber(tolua_S,8,0));
  bool bForceCallWhenDestroy = ((bool) (tolua_toboolean(tolua_S,9,false)!=0));
  {
   int tolua_ret = (int)  Actor::postEntityScriptDelayMsg(pEntity,nDelayTime,result,param1,param2,param3,param4,param5,bForceCallWhenDestroy);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushboolean(tolua_S,(bool)result);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'postEntityScriptDelayMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::removeEntityScriptDelayMsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_removeEntityScriptDelayMsg00
static int tolua_server_Actor_removeEntityScriptDelayMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nMsgIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::removeEntityScriptDelayMsg(pEntity,nMsgIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeEntityScriptDelayMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::canUseItem */
#ifndef TOLUA_DISABLE_tolua_server_Actor_canUseItem00
static int tolua_server_Actor_canUseItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::canUseItem(pEntity,nItemId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canUseItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isAchieveFinished */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isAchieveFinished00
static int tolua_server_Actor_isAchieveFinished00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAchieveID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::isAchieveFinished(pEntity,nAchieveID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAchieveFinished'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isAchieveGiveAwards */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isAchieveGiveAwards00
static int tolua_server_Actor_isAchieveGiveAwards00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAchieveID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::isAchieveGiveAwards(pEntity,nAchieveID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAchieveGiveAwards'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildTodayDonateCoin */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildTodayDonateCoin00
static int tolua_server_Actor_getGuildTodayDonateCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildTodayDonateCoin(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildTodayDonateCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildTodayDonateCoin */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildTodayDonateCoin00
static int tolua_server_Actor_setGuildTodayDonateCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nTodayCoin = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildTodayDonateCoin(pEntity,nTodayCoin);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildTodayDonateCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildTodayDonateItem */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildTodayDonateItem00
static int tolua_server_Actor_getGuildTodayDonateItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildTodayDonateItem(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildTodayDonateItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildTodayDonateItem */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildTodayDonateItem00
static int tolua_server_Actor_setGuildTodayDonateItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nTodayItem = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildTodayDonateItem(pEntity,nTodayItem);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildTodayDonateItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildDonateData */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildDonateData00
static int tolua_server_Actor_sendGuildDonateData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::sendGuildDonateData(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildDonateData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildUpgradeItem */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildUpgradeItem00
static int tolua_server_Actor_sendGuildUpgradeItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::sendGuildUpgradeItem(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildUpgradeItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildInfo */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildInfo00
static int tolua_server_Actor_sendGuildInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::sendGuildInfo(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildTreeData */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildTreeData00
static int tolua_server_Actor_sendGuildTreeData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::sendGuildTreeData(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildTreeData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildFruitData */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildFruitData00
static int tolua_server_Actor_sendGuildFruitData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::sendGuildFruitData(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildFruitData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildTreeTodayChargeNum */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildTreeTodayChargeNum00
static int tolua_server_Actor_getGuildTreeTodayChargeNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildTreeTodayChargeNum(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildTreeTodayChargeNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildTreeTodayChargeNum */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildTreeTodayChargeNum00
static int tolua_server_Actor_setGuildTreeTodayChargeNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTodayChargeNum = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildTreeTodayChargeNum(pEntity,nTodayChargeNum);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildTreeTodayChargeNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildFruitTodayPickNum */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildFruitTodayPickNum00
static int tolua_server_Actor_getGuildFruitTodayPickNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildFruitTodayPickNum(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildFruitTodayPickNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildFruitTodayPickNum */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildFruitTodayPickNum00
static int tolua_server_Actor_setGuildFruitTodayPickNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTodayPickNum = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildFruitTodayPickNum(pEntity,nTodayPickNum);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildFruitTodayPickNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildFruitPickData */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildFruitPickData00
static int tolua_server_Actor_sendGuildFruitPickData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::sendGuildFruitPickData(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildFruitPickData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getPositionByDir */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getPositionByDir00
static int tolua_server_Actor_getPositionByDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int radio = ((int)  tolua_tonumber(tolua_S,2,0));
  int nX = ((int)  tolua_tonumber(tolua_S,3,0));
  int nY = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  Actor::getPositionByDir(pEntity,radio,nX,nY);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)nX);
   tolua_pushnumber(tolua_S,(lua_Number)nY);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPositionByDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::monsterSay */
#ifndef TOLUA_DISABLE_tolua_server_Actor_monsterSay00
static int tolua_server_Actor_monsterSay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* pMsg = ((const char*)  tolua_tostring(tolua_S,2,0));
  int nBCType = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::monsterSay(pEntity,pMsg,nBCType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'monsterSay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasMonsterNear */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasMonsterNear00
static int tolua_server_Actor_hasMonsterNear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::hasMonsterNear(pEntity,nMonsterId,nCount);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMonsterNear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::regScriptCallback */
#ifndef TOLUA_DISABLE_tolua_server_Actor_regScriptCallback00
static int tolua_server_Actor_regScriptCallback00(lua_State* tolua_S)
{
	return Actor::regScriptCallback(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::regScriptTimer */
#ifndef TOLUA_DISABLE_tolua_server_Actor_regScriptTimer00
static int tolua_server_Actor_regScriptTimer00(lua_State* tolua_S)
{
	return Actor::regScriptTimer(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::unregScriptCallbackByHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_unregScriptCallbackByHandle00
static int tolua_server_Actor_unregScriptCallbackByHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int handle = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::unregScriptCallbackByHandle(pEntity,handle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unregScriptCallbackByHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::unregScriptCallback */
#ifndef TOLUA_DISABLE_tolua_server_Actor_unregScriptCallback00
static int tolua_server_Actor_unregScriptCallback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* pFnName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::unregScriptCallback(pEntity,pFnName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unregScriptCallback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::queryServicesAddCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_queryServicesAddCard00
static int tolua_server_Actor_queryServicesAddCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* pSN = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool bQueryOrUse = ((bool) (tolua_toboolean(tolua_S,3,0)!=0));
  {
   Actor::queryServicesAddCard(pEntity,pSN,bQueryOrUse);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'queryServicesAddCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::userServicesAddCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_userServicesAddCard00
static int tolua_server_Actor_userServicesAddCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double seriesNo = ((double)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::userServicesAddCard(pEntity,seriesNo);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'userServicesAddCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isMonster */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isMonster00
static int tolua_server_Actor_isMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isMonster(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getEntityPosition */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getEntityPosition00
static int tolua_server_Actor_getEntityPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::getEntityPosition(pEntity,x,y);
   tolua_pushnumber(tolua_S,(lua_Number)x);
   tolua_pushnumber(tolua_S,(lua_Number)y);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntityPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getEntityMaxCircleAndLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getEntityMaxCircleAndLevel00
static int tolua_server_Actor_getEntityMaxCircleAndLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::getEntityMaxCircleAndLevel(pEntity,nCircle,nLevel);
   tolua_pushnumber(tolua_S,(lua_Number)nCircle);
   tolua_pushnumber(tolua_S,(lua_Number)nLevel);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntityMaxCircleAndLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setEntityTelByOwnderAttr */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setEntityTelByOwnderAttr00
static int tolua_server_Actor_setEntityTelByOwnderAttr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bSet = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setEntityTelByOwnderAttr(pEntity,bSet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEntityTelByOwnderAttr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setEntityTelByOwnerWhenNonePortal */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setEntityTelByOwnerWhenNonePortal00
static int tolua_server_Actor_setEntityTelByOwnerWhenNonePortal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bSet = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setEntityTelByOwnerWhenNonePortal(pEntity,bSet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEntityTelByOwnerWhenNonePortal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setEntityLazyFollow */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setEntityLazyFollow00
static int tolua_server_Actor_setEntityLazyFollow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bSet = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setEntityLazyFollow(pEntity,bSet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEntityLazyFollow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setEntityCanAttackMonster */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setEntityCanAttackMonster00
static int tolua_server_Actor_setEntityCanAttackMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bSet = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setEntityCanAttackMonster(pEntity,bSet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEntityCanAttackMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setDenyAttackedByActor */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setDenyAttackedByActor00
static int tolua_server_Actor_setDenyAttackedByActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bSet = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setDenyAttackedByActor(pEntity,bSet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDenyAttackedByActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setDenyBeAttack */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setDenyBeAttack00
static int tolua_server_Actor_setDenyBeAttack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bSet = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setDenyBeAttack(pEntity,bSet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDenyBeAttack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::onRelive */
#ifndef TOLUA_DISABLE_tolua_server_Actor_onRelive00
static int tolua_server_Actor_onRelive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::onRelive(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onRelive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendCountdown */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendCountdown00
static int tolua_server_Actor_sendCountdown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,2,0));
  int nFlag = ((int)  tolua_tonumber(tolua_S,3,0));
  int nType = ((int)  tolua_tonumber(tolua_S,4,1));
  {
   Actor::sendCountdown(pEntity,nTime,nFlag,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendCountdown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::giveAward */
#ifndef TOLUA_DISABLE_tolua_server_Actor_giveAward00
static int tolua_server_Actor_giveAward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isstring(tolua_S,10,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,11,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,12,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nId = ((int)  tolua_tonumber(tolua_S,3,0));
  double nValue = ((double)  tolua_tonumber(tolua_S,4,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,5,1));
  int nStrong = ((int)  tolua_tonumber(tolua_S,6,1));
  int nBindFlag = ((int)  tolua_tonumber(tolua_S,7,0));
  int auxParam = ((int)  tolua_tonumber(tolua_S,8,0));
  int nLogId = ((int)  tolua_tonumber(tolua_S,9,0));
  char* pLogStr = ((char*)  tolua_tostring(tolua_S,10,"script"));
  int nQualityDataIndex = ((int)  tolua_tonumber(tolua_S,11,-1));
  {
   bool tolua_ret = (bool)  Actor::giveAward(pEntity,nType,nId,nValue,nQuality,nStrong,nBindFlag,auxParam,nLogId,pLogStr,nQualityDataIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'giveAward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::checkConsume */
#ifndef TOLUA_DISABLE_tolua_server_Actor_checkConsume00
static int tolua_server_Actor_checkConsume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nId = ((int)  tolua_tonumber(tolua_S,3,0));
  double nValue = ((double)  tolua_tonumber(tolua_S,4,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,5,-1));
  int nStrong = ((int)  tolua_tonumber(tolua_S,6,-1));
  int nBindFlag = ((int)  tolua_tonumber(tolua_S,7,-1));
  int nParam = ((int)  tolua_tonumber(tolua_S,8,0));
  {
   bool tolua_ret = (bool)  Actor::checkConsume(pEntity,nType,nId,nValue,nQuality,nStrong,nBindFlag,nParam);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkConsume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::CheckActorSource */
#ifndef TOLUA_DISABLE_tolua_server_Actor_CheckActorSource00
static int tolua_server_Actor_CheckActorSource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,4,0));
  int nTipmsgType = ((int)  tolua_tonumber(tolua_S,5,tstUI));
  {
   bool tolua_ret = (bool)  Actor::CheckActorSource(pEntity,nType,nId,nCount,nTipmsgType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CheckActorSource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getConsume */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getConsume00
static int tolua_server_Actor_getConsume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,4,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,5,-1));
  int nStrong = ((int)  tolua_tonumber(tolua_S,6,-1));
  int nBindFlag = ((int)  tolua_tonumber(tolua_S,7,-1));
  int nParam = ((int)  tolua_tonumber(tolua_S,8,0));
  {
   unsigned long long tolua_ret = (unsigned long long)  Actor::getConsume(pEntity,nType,nId,nValue,nQuality,nStrong,nBindFlag,nParam);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getConsume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::removeConsume */
#ifndef TOLUA_DISABLE_tolua_server_Actor_removeConsume00
static int tolua_server_Actor_removeConsume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isstring(tolua_S,10,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nId = ((int)  tolua_tonumber(tolua_S,3,0));
  double nValue = ((double)  tolua_tonumber(tolua_S,4,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,5,-1));
  int nStrong = ((int)  tolua_tonumber(tolua_S,6,-1));
  int nBindFlag = ((int)  tolua_tonumber(tolua_S,7,-1));
  int nParam = ((int)  tolua_tonumber(tolua_S,8,0));
  int nLogId = ((int)  tolua_tonumber(tolua_S,9,0));
  char* pLogStr = ((char*)  tolua_tostring(tolua_S,10,"script consume"));
  {
   int tolua_ret = (int)  Actor::removeConsume(pEntity,nType,nId,nValue,nQuality,nStrong,nBindFlag,nParam,nLogId,pLogStr);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeConsume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::useSkill */
#ifndef TOLUA_DISABLE_tolua_server_Actor_useSkill00
static int tolua_server_Actor_useSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSkillID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPosX = ((int)  tolua_tonumber(tolua_S,3,0));
  int nPosY = ((int)  tolua_tonumber(tolua_S,4,0));
  bool needLearn = ((bool) (tolua_toboolean(tolua_S,5,true)!=0));
  int nSkillLevel = ((int)  tolua_tonumber(tolua_S,6,0));
  bool boCd = ((bool) (tolua_toboolean(tolua_S,7,false)!=0));
  {
   INT_PTR tolua_ret = (INT_PTR)  Actor::useSkill(pEntity,nSkillID,nPosX,nPosY,needLearn,nSkillLevel,boCd);
   {
#ifdef __cplusplus
    void* tolua_obj = new INT_PTR(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"INT_PTR");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(INT_PTR));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"INT_PTR");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'useSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getCampId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getCampId00
static int tolua_server_Actor_getCampId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getCampId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCampId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setCampId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setCampId00
static int tolua_server_Actor_setCampId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nCampId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setCampId(pEntity,nCampId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCampId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SetNpcGuildId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SetNpcGuildId00
static int tolua_server_Actor_SetNpcGuildId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::SetNpcGuildId(pEntity,nGuildId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNpcGuildId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setDieRefreshHpPro */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setDieRefreshHpPro00
static int tolua_server_Actor_setDieRefreshHpPro00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setDieRefreshHpPro(pEntity,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDieRefreshHpPro'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getNpcGuildId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getNpcGuildId00
static int tolua_server_Actor_getNpcGuildId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getNpcGuildId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcGuildId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeEntityName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeEntityName00
static int tolua_server_Actor_changeEntityName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sName = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::changeEntityName(pEntity,sName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeEntityName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildPos */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildPos00
static int tolua_server_Actor_getGuildPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildPos(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildTitleName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildTitleName00
static int tolua_server_Actor_getGuildTitleName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  Actor::getGuildTitleName(pEntity);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildTitleName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuilCityPos */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuilCityPos00
static int tolua_server_Actor_getGuilCityPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuilCityPos(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuilCityPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildCardByRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildCardByRank00
static int tolua_server_Actor_sendGuildCardByRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRank = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::sendGuildCardByRank(pEntity,nRank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildCardByRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::joinToGuild */
#ifndef TOLUA_DISABLE_tolua_server_Actor_joinToGuild00
static int tolua_server_Actor_joinToGuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nJoinGuildId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::joinToGuild(pEntity,nJoinGuildId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'joinToGuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::onStartBidGuildRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_onStartBidGuildRank00
static int tolua_server_Actor_onStartBidGuildRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::onStartBidGuildRank(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onStartBidGuildRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isSignUpGuildSiege */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isSignUpGuildSiege00
static int tolua_server_Actor_isSignUpGuildSiege00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isSignUpGuildSiege(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSignUpGuildSiege'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::MyGuildIsSbk */
#ifndef TOLUA_DISABLE_tolua_server_Actor_MyGuildIsSbk00
static int tolua_server_Actor_MyGuildIsSbk00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::MyGuildIsSbk(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MyGuildIsSbk'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildLeaderId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildLeaderId00
static int tolua_server_Actor_getGuildLeaderId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getGuildLeaderId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildLeaderId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildLevel00
static int tolua_server_Actor_getGuildLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildLevel(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuldBossFlag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuldBossFlag00
static int tolua_server_Actor_setGuldBossFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bFlag = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setGuldBossFlag(pEntity,bFlag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuldBossFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildBossFlag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildBossFlag00
static int tolua_server_Actor_getGuildBossFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::getGuildBossFlag(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildBossFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SendSzBossTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SendSzBossTimes00
static int tolua_server_Actor_SendSzBossTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::SendSzBossTimes(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendSzBossTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildDartFlag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildDartFlag00
static int tolua_server_Actor_setGuildDartFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bFlag = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setGuildDartFlag(pEntity,bFlag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildDartFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addEventRecord */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addEventRecord00
static int tolua_server_Actor_addEventRecord00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isstring(tolua_S,7,0,&tolua_err) ||
     !tolua_isstring(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* nRecord = ((char*)  tolua_tostring(tolua_S,2,0));
  int nEventId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nParam1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int nParam2 = ((int)  tolua_tonumber(tolua_S,5,0));
  int nParam3 = ((int)  tolua_tonumber(tolua_S,6,0));
  char* nParam4 = ((char*)  tolua_tostring(tolua_S,7,0));
  char* nParam5 = ((char*)  tolua_tostring(tolua_S,8,0));
  {
   Actor::addEventRecord(pEntity,nRecord,nEventId,nParam1,nParam2,nParam3,nParam4,nParam5);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addEventRecord'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildYs */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildYs00
static int tolua_server_Actor_setGuildYs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildYs(pEntity,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildYs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildGx */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildGx00
static int tolua_server_Actor_getGuildGx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildGx(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildGx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildGx */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildGx00
static int tolua_server_Actor_setGuildGx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildGx(pEntity,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildGx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::GetGuildTotalGx */
#ifndef TOLUA_DISABLE_tolua_server_Actor_GetGuildTotalGx00
static int tolua_server_Actor_GetGuildTotalGx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::GetGuildTotalGx(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetGuildTotalGx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildBossCallFlag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildBossCallFlag00
static int tolua_server_Actor_getGuildBossCallFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::getGuildBossCallFlag(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildBossCallFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setCallGuildBossFlag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setCallGuildBossFlag00
static int tolua_server_Actor_setCallGuildBossFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool value = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Actor::setCallGuildBossFlag(pEntity,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCallGuildBossFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getCallGuildBossFlag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getCallGuildBossFlag00
static int tolua_server_Actor_getCallGuildBossFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::getCallGuildBossFlag(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCallGuildBossFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildDartHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildDartHandle00
static int tolua_server_Actor_setGuildDartHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double bHandle = ((double)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildDartHandle(pEntity,bHandle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildDartHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildDartHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildDartHandle00
static int tolua_server_Actor_getGuildDartHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   double tolua_ret = (double)  Actor::getGuildDartHandle(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildDartHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildFr */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildFr00
static int tolua_server_Actor_setGuildFr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setGuildFr(pEntity,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildFr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildCoin */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildCoin00
static int tolua_server_Actor_getGuildCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildCoin(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildFr */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildFr00
static int tolua_server_Actor_getGuildFr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGuildFr(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildFr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildName00
static int tolua_server_Actor_getGuildName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  Actor::getGuildName(pEntity);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildId00
static int tolua_server_Actor_getGuildId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getGuildId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildPtr */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildPtr00
static int tolua_server_Actor_getGuildPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getGuildPtr(pEntity);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::bInGuild */
#ifndef TOLUA_DISABLE_tolua_server_Actor_bInGuild00
static int tolua_server_Actor_bInGuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::bInGuild(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bInGuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::upGuildLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_upGuildLevel00
static int tolua_server_Actor_upGuildLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::upGuildLevel(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'upGuildLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildMsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildMsg00
static int tolua_server_Actor_sendGuildMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int guildPos = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* sMsg = ((const char*)  tolua_tostring(tolua_S,3,0));
  int nType = ((int)  tolua_tonumber(tolua_S,4,ttTipmsgWindow));
  {
   Actor::sendGuildMsg(pEntity,guildPos,sMsg,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::notifyUpdateGuildInfo */
#ifndef TOLUA_DISABLE_tolua_server_Actor_notifyUpdateGuildInfo00
static int tolua_server_Actor_notifyUpdateGuildInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::notifyUpdateGuildInfo(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'notifyUpdateGuildInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGuildSkillLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGuildSkillLevel00
static int tolua_server_Actor_getGuildSkillLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getGuildSkillLevel(pEntity,skillId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildSkillLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setGuildSkillLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setGuildSkillLevel00
static int tolua_server_Actor_setGuildSkillLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
  int skillLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::setGuildSkillLevel(pEntity,skillId,skillLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildSkillLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::canUpGuildSkillLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_canUpGuildSkillLevel00
static int tolua_server_Actor_canUpGuildSkillLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int sType = ((int)  tolua_tonumber(tolua_S,2,0));
  int sCount = ((int)  tolua_tonumber(tolua_S,3,0));
  bool sConsume = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  {
   bool tolua_ret = (bool)  Actor::canUpGuildSkillLevel(pEntity,sType,sCount,sConsume);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canUpGuildSkillLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::decountUpGuildSkill */
#ifndef TOLUA_DISABLE_tolua_server_Actor_decountUpGuildSkill00
static int tolua_server_Actor_decountUpGuildSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int sType = ((int)  tolua_tonumber(tolua_S,2,0));
  int sCount = ((int)  tolua_tonumber(tolua_S,3,0));
  bool sConsume = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  {
   bool tolua_ret = (bool)  Actor::decountUpGuildSkill(pEntity,sType,sCount,sConsume);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'decountUpGuildSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::saveDbGuildSkill */
#ifndef TOLUA_DISABLE_tolua_server_Actor_saveDbGuildSkill00
static int tolua_server_Actor_saveDbGuildSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
  int skillLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::saveDbGuildSkill(pEntity,skillId,skillLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'saveDbGuildSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildSkillToAllMember */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildSkillToAllMember00
static int tolua_server_Actor_sendGuildSkillToAllMember00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int skillId = ((int)  tolua_tonumber(tolua_S,2,0));
  int skillLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::sendGuildSkillToAllMember(pEntity,skillId,skillLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildSkillToAllMember'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::refreshActorObserveList */
#ifndef TOLUA_DISABLE_tolua_server_Actor_refreshActorObserveList00
static int tolua_server_Actor_refreshActorObserveList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::refreshActorObserveList(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'refreshActorObserveList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isFirstLogin */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isFirstLogin00
static int tolua_server_Actor_isFirstLogin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isFirstLogin(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFirstLogin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendLearnSkill */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendLearnSkill00
static int tolua_server_Actor_sendLearnSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::sendLearnSkill(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendLearnSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendSceneTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendSceneTime00
static int tolua_server_Actor_sendSceneTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::sendSceneTime(pEntity,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendSceneTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::enlargeBag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_enlargeBag00
static int tolua_server_Actor_enlargeBag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nGridCount = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::enlargeBag(pEntity,nGridCount);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enlargeBag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendPrivateChatMsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendPrivateChatMsg00
static int tolua_server_Actor_sendPrivateChatMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pActor = ((void*)  tolua_touserdata(tolua_S,2,0));
  const char* sMsg = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   Actor::sendPrivateChatMsg(pEntity,pActor,sMsg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendPrivateChatMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::playScrEffect */
#ifndef TOLUA_DISABLE_tolua_server_Actor_playScrEffect00
static int tolua_server_Actor_playScrEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nEffId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSec = ((int)  tolua_tonumber(tolua_S,3,0));
  bool toWorld = ((bool) (tolua_toboolean(tolua_S,4,false)!=0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   Actor::playScrEffect(pEntity,nEffId,nSec,toWorld,nLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playScrEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::playScrEffectCode */
#ifndef TOLUA_DISABLE_tolua_server_Actor_playScrEffectCode00
static int tolua_server_Actor_playScrEffectCode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nEffId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSec = ((int)  tolua_tonumber(tolua_S,3,0));
  int x = ((int)  tolua_tonumber(tolua_S,4,0));
  int y = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   Actor::playScrEffectCode(pEntity,nEffId,nSec,x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playScrEffectCode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::delEffectCode */
#ifndef TOLUA_DISABLE_tolua_server_Actor_delEffectCode00
static int tolua_server_Actor_delEffectCode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nEffId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::delEffectCode(pEntity,nEffId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delEffectCode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::playScrSceneEffectCode */
#ifndef TOLUA_DISABLE_tolua_server_Actor_playScrSceneEffectCode00
static int tolua_server_Actor_playScrSceneEffectCode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nEffId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSec = ((int)  tolua_tonumber(tolua_S,3,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,4,0));
  int x = ((int)  tolua_tonumber(tolua_S,5,0));
  int y = ((int)  tolua_tonumber(tolua_S,6,0));
  {
   Actor::playScrSceneEffectCode(pEntity,nEffId,nSec,nSceneId,x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playScrSceneEffectCode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addState */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addState00
static int tolua_server_Actor_addState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int state = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::addState(pEntity,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::removeState */
#ifndef TOLUA_DISABLE_tolua_server_Actor_removeState00
static int tolua_server_Actor_removeState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int state = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::removeState(pEntity,state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::consumeCoin */
#ifndef TOLUA_DISABLE_tolua_server_Actor_consumeCoin00
static int tolua_server_Actor_consumeCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double nCount = ((double)  tolua_tonumber(tolua_S,2,0));
  int nlogId = ((int)  tolua_tonumber(tolua_S,3,0));
  char* comment = ((char*)  tolua_tostring(tolua_S,4,"script"));
  bool needLog = ((bool) (tolua_toboolean(tolua_S,5,true)!=0));
  bool bindFirst = ((bool) (tolua_toboolean(tolua_S,6,true)!=0));
  {
   bool tolua_ret = (bool)  Actor::consumeCoin(pEntity,nCount,nlogId,comment,needLog,bindFirst);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'consumeCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::worldBroadCastMsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_worldBroadCastMsg00
static int tolua_server_Actor_worldBroadCastMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* packet = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::worldBroadCastMsg(packet,nLevel,nCircle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'worldBroadCastMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::battleGroupBroadCastMsgCs */
#ifndef TOLUA_DISABLE_tolua_server_Actor_battleGroupBroadCastMsgCs00
static int tolua_server_Actor_battleGroupBroadCastMsgCs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* packet = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bCsFlag = ((bool) (tolua_toboolean(tolua_S,3,true)!=0));
  {
   Actor::battleGroupBroadCastMsgCs(packet,nLevel,bCsFlag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'battleGroupBroadCastMsgCs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMiscData */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMiscData00
static int tolua_server_Actor_getMiscData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"enMiscDataType",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  enMiscDataType mdType = *((enMiscDataType*)  tolua_tousertype(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getMiscData(pEntity,mdType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMiscData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setMiscData */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setMiscData00
static int tolua_server_Actor_setMiscData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int mdType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nVal = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::setMiscData(pEntity,mdType,nVal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMiscData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setNpcIdleTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setNpcIdleTime00
static int tolua_server_Actor_setNpcIdleTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setNpcIdleTime(pEntity,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNpcIdleTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setEntityVisibleFlag */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setEntityVisibleFlag00
static int tolua_server_Actor_setEntityVisibleFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool canSee = ((bool) (tolua_toboolean(tolua_S,2,true)!=0));
  {
   bool tolua_ret = (bool)  Actor::setEntityVisibleFlag(pEntity,canSee);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEntityVisibleFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getItemLeftTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getItemLeftTime00
static int tolua_server_Actor_getItemLeftTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getItemLeftTime(pEntity,pUserItem);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemLeftTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::inviteJoinTeam */
#ifndef TOLUA_DISABLE_tolua_server_Actor_inviteJoinTeam00
static int tolua_server_Actor_inviteJoinTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pActor = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   Actor::inviteJoinTeam(pEntity,pActor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inviteJoinTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setDir */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setDir00
static int tolua_server_Actor_setDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nDir = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setDir(pEntity,nDir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addEffect */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addEffect00
static int tolua_server_Actor_addEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nEffId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nEffType = ((int)  tolua_tonumber(tolua_S,3,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,4,0));
  int nDelay = ((int)  tolua_tonumber(tolua_S,5,0));
  int nTotalCount = ((int)  tolua_tonumber(tolua_S,6,0));
  int nDirCount = ((int)  tolua_tonumber(tolua_S,7,0));
  {
   Actor::addEffect(pEntity,nEffId,nEffType,nTime,nDelay,nTotalCount,nDirCount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::delAllEffect */
#ifndef TOLUA_DISABLE_tolua_server_Actor_delAllEffect00
static int tolua_server_Actor_delAllEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::delAllEffect(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delAllEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isDeath */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isDeath00
static int tolua_server_Actor_isDeath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isDeath(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDeath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::showNpcShop */
#ifndef TOLUA_DISABLE_tolua_server_Actor_showNpcShop00
static int tolua_server_Actor_showNpcShop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nTab = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::showNpcShop(pEntity,nType,nTab);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'showNpcShop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addSceneEffect */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addSceneEffect00
static int tolua_server_Actor_addSceneEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nEffId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nEffType = ((int)  tolua_tonumber(tolua_S,3,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,4,0));
  int nDelay = ((int)  tolua_tonumber(tolua_S,5,0));
  int nRelX = ((int)  tolua_tonumber(tolua_S,6,0));
  int nRelY = ((int)  tolua_tonumber(tolua_S,7,0));
  int nTotalCount = ((int)  tolua_tonumber(tolua_S,8,0));
  int nDirCount = ((int)  tolua_tonumber(tolua_S,9,0));
  {
   Actor::addSceneEffect(pEntity,nEffId,nEffType,nTime,nDelay,nRelX,nRelY,nTotalCount,nDirCount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSceneEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::broadSceneEffect */
#ifndef TOLUA_DISABLE_tolua_server_Actor_broadSceneEffect00
static int tolua_server_Actor_broadSceneEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nEffId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nEffType = ((int)  tolua_tonumber(tolua_S,3,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,4,0));
  int nDelay = ((int)  tolua_tonumber(tolua_S,5,0));
  int nRelX = ((int)  tolua_tonumber(tolua_S,6,0));
  int nRelY = ((int)  tolua_tonumber(tolua_S,7,0));
  int nTotalCount = ((int)  tolua_tonumber(tolua_S,8,0));
  int nDirCount = ((int)  tolua_tonumber(tolua_S,9,0));
  {
   Actor::broadSceneEffect(pEntity,nEffId,nEffType,nTime,nDelay,nRelX,nRelY,nTotalCount,nDirCount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadSceneEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::hasState */
#ifndef TOLUA_DISABLE_tolua_server_Actor_hasState00
static int tolua_server_Actor_hasState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int state = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::hasState(pEntity,state);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGMLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGMLevel00
static int tolua_server_Actor_getGMLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGMLevel(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGMLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorId00
static int tolua_server_Actor_getActorId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getActorId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTargetId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTargetId00
static int tolua_server_Actor_getTargetId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getTargetId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTargetId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::moveToEntity */
#ifndef TOLUA_DISABLE_tolua_server_Actor_moveToEntity00
static int tolua_server_Actor_moveToEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* targetEntity = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::moveToEntity(pEntity,targetEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'moveToEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setTopTitle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setTopTitle00
static int tolua_server_Actor_setTopTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTitleId = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bFlag = ((bool) (tolua_toboolean(tolua_S,3,true)!=0));
  {
   bool tolua_ret = (bool)  Actor::setTopTitle(pEntity,nTitleId,bFlag);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTopTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::reqTransmitTo */
#ifndef TOLUA_DISABLE_tolua_server_Actor_reqTransmitTo00
static int tolua_server_Actor_reqTransmitTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nDestServerId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::reqTransmitTo(pEntity,nDestServerId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reqTransmitTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::reqTransmitToCommonServer */
#ifndef TOLUA_DISABLE_tolua_server_Actor_reqTransmitToCommonServer00
static int tolua_server_Actor_reqTransmitToCommonServer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::reqTransmitToCommonServer(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reqTransmitToCommonServer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::reqTransmitToRawServer */
#ifndef TOLUA_DISABLE_tolua_server_Actor_reqTransmitToRawServer00
static int tolua_server_Actor_reqTransmitToRawServer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::reqTransmitToRawServer(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reqTransmitToRawServer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isInRawServer */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isInRawServer00
static int tolua_server_Actor_isInRawServer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isInRawServer(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInRawServer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorRawServerId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorRawServerId00
static int tolua_server_Actor_getActorRawServerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getActorRawServerId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorRawServerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeGuildCoin */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeGuildCoin00
static int tolua_server_Actor_changeGuildCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isstring(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLogId = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* pStr = ((const char*)  tolua_tostring(tolua_S,4,""));
  {
   Actor::changeGuildCoin(pEntity,value,nLogId,pStr);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeGuildCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setActorCircle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setActorCircle00
static int tolua_server_Actor_setActorCircle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::setActorCircle(pEntity,nCircle);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActorCircle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::viewOffLineActor */
#ifndef TOLUA_DISABLE_tolua_server_Actor_viewOffLineActor00
static int tolua_server_Actor_viewOffLineActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned nActorId = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  char* sName = ((char*)  tolua_tostring(tolua_S,3,""));
  bool loadWhenNotExist = ((bool) (tolua_toboolean(tolua_S,4,true)!=0));
  unsigned int nShowType = ((unsigned int)  tolua_tonumber(tolua_S,5,1));
  {
   Actor::viewOffLineActor(pEntity,nActorId,sName,loadWhenNotExist,nShowType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'viewOffLineActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::viewOffLineActorHero */
#ifndef TOLUA_DISABLE_tolua_server_Actor_viewOffLineActorHero00
static int tolua_server_Actor_viewOffLineActorHero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned nActorId = ((unsigned)  tolua_tonumber(tolua_S,2,0));
  unsigned nHeroId = ((unsigned)  tolua_tonumber(tolua_S,3,0));
  bool loadWhenNotExist = ((bool) (tolua_toboolean(tolua_S,4,true)!=0));
  unsigned int nShowType = ((unsigned int)  tolua_tonumber(tolua_S,5,1));
  {
   Actor::viewOffLineActorHero(pEntity,nActorId,nHeroId,loadWhenNotExist,nShowType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'viewOffLineActorHero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeEntityModel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeEntityModel00
static int tolua_server_Actor_changeEntityModel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRadius = ((int)  tolua_tonumber(tolua_S,2,0));
  int nModelId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::changeEntityModel(pEntity,nRadius,nModelId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeEntityModel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeShowName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeShowName00
static int tolua_server_Actor_changeShowName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRadius = ((int)  tolua_tonumber(tolua_S,2,0));
  char* sName = ((char*)  tolua_tostring(tolua_S,3,0));
  {
   Actor::changeShowName(pEntity,nRadius,sName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeShowName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::resetShowName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_resetShowName00
static int tolua_server_Actor_resetShowName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::resetShowName(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resetShowName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::checkActorLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_checkActorLevel00
static int tolua_server_Actor_checkActorLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,3,0));
  bool bCircleOnly = ((bool) (tolua_toboolean(tolua_S,4,false)!=0));
  {
   bool tolua_ret = (bool)  Actor::checkActorLevel(pEntity,nLevel,nCircle,bCircleOnly);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkActorLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::checkActorMaxCircleAndLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_checkActorMaxCircleAndLevel00
static int tolua_server_Actor_checkActorMaxCircleAndLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::checkActorMaxCircleAndLevel(pEntity,nLevel,nCircle);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkActorMaxCircleAndLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::updateActorName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_updateActorName00
static int tolua_server_Actor_updateActorName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::updateActorName(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateActorName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::checkOpenLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_checkOpenLevel00
static int tolua_server_Actor_checkOpenLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevelConfigId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::checkOpenLevel(pEntity,nLevelConfigId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkOpenLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getBuffRemainTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getBuffRemainTime00
static int tolua_server_Actor_getBuffRemainTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nBuffGroup = ((int)  tolua_tonumber(tolua_S,3,-1));
  {
   int tolua_ret = (int)  Actor::getBuffRemainTime(pEntity,nBuffType,nBuffGroup);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBuffRemainTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getBuffRemainTimeById */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getBuffRemainTimeById00
static int tolua_server_Actor_getBuffRemainTimeById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getBuffRemainTimeById(pEntity,nBuffId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBuffRemainTimeById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::canGiveAward */
#ifndef TOLUA_DISABLE_tolua_server_Actor_canGiveAward00
static int tolua_server_Actor_canGiveAward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTpe = ((int)  tolua_tonumber(tolua_S,2,0));
  int nId = ((int)  tolua_tonumber(tolua_S,3,0));
  double nCount = ((double)  tolua_tonumber(tolua_S,4,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,5,0));
  int nStrong = ((int)  tolua_tonumber(tolua_S,6,0));
  int nBindFlag = ((int)  tolua_tonumber(tolua_S,7,0));
  bool boNotice = ((bool) (tolua_toboolean(tolua_S,8,true)!=0));
  {
   bool tolua_ret = (bool)  Actor::canGiveAward(pEntity,nTpe,nId,nCount,nQuality,nStrong,nBindFlag,boNotice);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canGiveAward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::createTeam */
#ifndef TOLUA_DISABLE_tolua_server_Actor_createTeam00
static int tolua_server_Actor_createTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::createTeam(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::autoFindPathToNpc */
#ifndef TOLUA_DISABLE_tolua_server_Actor_autoFindPathToNpc00
static int tolua_server_Actor_autoFindPathToNpc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  char* sNpcName = ((char*)  tolua_tostring(tolua_S,3,0));
  {
   int tolua_ret = (int)  Actor::autoFindPathToNpc(pEntity,nSceneId,sNpcName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'autoFindPathToNpc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSocialRelationId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSocialRelationId00
static int tolua_server_Actor_getSocialRelationId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getSocialRelationId(pEntity,nType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSocialRelationId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSocialCurNum */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSocialCurNum00
static int tolua_server_Actor_getSocialCurNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getSocialCurNum(pEntity,nType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSocialCurNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSocialActorName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSocialActorName00
static int tolua_server_Actor_getSocialActorName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   char* tolua_ret = (char*)  Actor::getSocialActorName(pEntity,nActorId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSocialActorName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendMoveToMsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendMoveToMsg00
static int tolua_server_Actor_sendMoveToMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sSceneName = ((char*)  tolua_tostring(tolua_S,2,0));
  int nX = ((int)  tolua_tonumber(tolua_S,3,0));
  int nY = ((int)  tolua_tonumber(tolua_S,4,0));
  char* sTitle = ((char*)  tolua_tostring(tolua_S,5,0));
  char* sTips = ((char*)  tolua_tostring(tolua_S,6,0));
  {
   Actor::sendMoveToMsg(pEntity,sSceneName,nX,nY,sTitle,sTips);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendMoveToMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendChat */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendChat00
static int tolua_server_Actor_sendChat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nChannleID = ((int)  tolua_tonumber(tolua_S,2,0));
  char* pMsg = ((char*)  tolua_tostring(tolua_S,3,0));
  bool boSave = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  {
   Actor::sendChat(pEntity,nChannleID,pMsg,boSave);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendChat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeVocation */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeVocation00
static int tolua_server_Actor_changeVocation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nVocation = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeVocation(pEntity,nVocation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeVocation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeSex */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeSex00
static int tolua_server_Actor_changeSex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSex = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeSex(pEntity,nSex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeSex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setFullAnger */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setFullAnger00
static int tolua_server_Actor_setFullAnger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::setFullAnger(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFullAnger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::HasSocialRelation */
#ifndef TOLUA_DISABLE_tolua_server_Actor_HasSocialRelation00
static int tolua_server_Actor_HasSocialRelation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity1 = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pEntity2 = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nType = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::HasSocialRelation(pEntity1,pEntity2,nType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasSocialRelation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::GetNameColorData */
#ifndef TOLUA_DISABLE_tolua_server_Actor_GetNameColorData00
static int tolua_server_Actor_GetNameColorData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::GetNameColorData(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNameColorData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::canTelport */
#ifndef TOLUA_DISABLE_tolua_server_Actor_canTelport00
static int tolua_server_Actor_canTelport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  char* sSceneName = ((char*)  tolua_tostring(tolua_S,3,NULL));
  {
   bool tolua_ret = (bool)  Actor::canTelport(pEntity,nSceneId,sSceneName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canTelport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::clearEquipSharp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_clearEquipSharp00
static int tolua_server_Actor_clearEquipSharp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool boCast = ((bool) (tolua_toboolean(tolua_S,2,true)!=0));
  {
   Actor::clearEquipSharp(pEntity,boCast);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearEquipSharp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setSalary */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setSalary00
static int tolua_server_Actor_setSalary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nNowValue = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLastValue = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  Actor::setSalary(pEntity,nNowValue,nLastValue);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSalary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getSalary */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getSalary00
static int tolua_server_Actor_getSalary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nNowValue = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLastValue = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  Actor::getSalary(pEntity,nNowValue,nLastValue);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)nNowValue);
   tolua_pushnumber(tolua_S,(lua_Number)nLastValue);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSalary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isDealing */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isDealing00
static int tolua_server_Actor_isDealing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isDealing(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDealing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::queryActorName */
#ifndef TOLUA_DISABLE_tolua_server_Actor_queryActorName00
static int tolua_server_Actor_queryActorName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::queryActorName(pEntity,sName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'queryActorName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeGuildGx */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeGuildGx00
static int tolua_server_Actor_changeGuildGx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nGx = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeGuildGx(pEntity,nGx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeGuildGx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setShxDoneTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setShxDoneTimes00
static int tolua_server_Actor_setShxDoneTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setShxDoneTimes(pEntity,nTimes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShxDoneTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getShxDoneTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getShxDoneTimes00
static int tolua_server_Actor_getShxDoneTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getShxDoneTimes(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShxDoneTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getShxAddTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getShxAddTimes00
static int tolua_server_Actor_getShxAddTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getShxAddTimes(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShxAddTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeShxAddTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeShxAddTimes00
static int tolua_server_Actor_changeShxAddTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeShxAddTimes(pEntity,nTimes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeShxAddTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTodayGxValue */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTodayGxValue00
static int tolua_server_Actor_getTodayGxValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getTodayGxValue(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTodayGxValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeExploreTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeExploreTimes00
static int tolua_server_Actor_changeExploreTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeExploreTimes(pEntity,nTimes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeExploreTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getExploreTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getExploreTimes00
static int tolua_server_Actor_getExploreTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getExploreTimes(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExploreTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getExploreItemId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getExploreItemId00
static int tolua_server_Actor_getExploreItemId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getExploreItemId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExploreItemId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setExploreItemId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setExploreItemId00
static int tolua_server_Actor_setExploreItemId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setExploreItemId(pEntity,nItemId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setExploreItemId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getChallengeTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getChallengeTimes00
static int tolua_server_Actor_getChallengeTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getChallengeTimes(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChallengeTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setChallengeTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setChallengeTimes00
static int tolua_server_Actor_setChallengeTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setChallengeTimes(pEntity,nTimes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setChallengeTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setAddChallengeTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setAddChallengeTimes00
static int tolua_server_Actor_setAddChallengeTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setAddChallengeTimes(pEntity,nTimes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAddChallengeTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getAddChallengeTimes */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getAddChallengeTimes00
static int tolua_server_Actor_getAddChallengeTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getAddChallengeTimes(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAddChallengeTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeTodayGx */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeTodayGx00
static int tolua_server_Actor_changeTodayGx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeTodayGx(pEntity,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeTodayGx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTargetHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTargetHandle00
static int tolua_server_Actor_getTargetHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   double tolua_ret = (double)  Actor::getTargetHandle(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTargetHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getNpcPos */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getNpcPos00
static int tolua_server_Actor_getNpcPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nNpcId = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Actor::getNpcPos(nSceneId,nNpcId,x,y);
   tolua_pushnumber(tolua_S,(lua_Number)x);
   tolua_pushnumber(tolua_S,(lua_Number)y);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isTeamLeader */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isTeamLeader00
static int tolua_server_Actor_isTeamLeader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isTeamLeader(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTeamLeader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::backMain */
#ifndef TOLUA_DISABLE_tolua_server_Actor_backMain00
static int tolua_server_Actor_backMain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sFunName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::backMain(pEntity,sFunName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'backMain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::openBuyItemDialog */
#ifndef TOLUA_DISABLE_tolua_server_Actor_openBuyItemDialog00
static int tolua_server_Actor_openBuyItemDialog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isstring(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double hNpc = ((double)  tolua_tonumber(tolua_S,2,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,4,0));
  const char* sNotice = ((const char*)  tolua_tostring(tolua_S,5,0));
  const char* sDesc = ((const char*)  tolua_tostring(tolua_S,6,0));
  const char* sCallFunc = ((const char*)  tolua_tostring(tolua_S,7,0));
  {
   bool tolua_ret = (bool)  Actor::openBuyItemDialog(pEntity,hNpc,nItemId,nCount,sNotice,sDesc,sCallFunc);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'openBuyItemDialog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendCustomEffect */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendCustomEffect00
static int tolua_server_Actor_sendCustomEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned char nType = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
  int nParam = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::sendCustomEffect(pEntity,nType,nParam);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendCustomEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::changeActivity */
#ifndef TOLUA_DISABLE_tolua_server_Actor_changeActivity00
static int tolua_server_Actor_changeActivity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::changeActivity(pEntity,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeActivity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setAchieveUnFinished */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setAchieveUnFinished00
static int tolua_server_Actor_setAchieveUnFinished00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAchieveId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setAchieveUnFinished(pEntity,nAchieveId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAchieveUnFinished'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setAchieveInstantFinish */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setAchieveInstantFinish00
static int tolua_server_Actor_setAchieveInstantFinish00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAchieveId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setAchieveInstantFinish(pEntity,nAchieveId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAchieveInstantFinish'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::RemoveBattlePet */
#ifndef TOLUA_DISABLE_tolua_server_Actor_RemoveBattlePet00
static int tolua_server_Actor_RemoveBattlePet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::RemoveBattlePet(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveBattlePet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addNewTitle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addNewTitle00
static int tolua_server_Actor_addNewTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::addNewTitle(pEntity,nId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addNewTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::delNewTitle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_delNewTitle00
static int tolua_server_Actor_delNewTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::delNewTitle(pEntity,nId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delNewTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isHaveNewTitle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isHaveNewTitle00
static int tolua_server_Actor_isHaveNewTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::isHaveNewTitle(pEntity,nId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isHaveNewTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setCurNewTitle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setCurNewTitle00
static int tolua_server_Actor_setCurNewTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setCurNewTitle(pEntity,nId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurNewTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::BroadCastNameClrScene */
#ifndef TOLUA_DISABLE_tolua_server_Actor_BroadCastNameClrScene00
static int tolua_server_Actor_BroadCastNameClrScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::BroadCastNameClrScene(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BroadCastNameClrScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SendShortCutMsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SendShortCutMsg00
static int tolua_server_Actor_SendShortCutMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* szMsg = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::SendShortCutMsg(pEntity,szMsg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendShortCutMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setExploitRate */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setExploitRate00
static int tolua_server_Actor_setExploitRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double nVal = ((double)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setExploitRate(pEntity,nVal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setExploitRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setMonsterGrowLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setMonsterGrowLevel00
static int tolua_server_Actor_setMonsterGrowLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setMonsterGrowLevel(pEntity,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMonsterGrowLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::GetGameSetting */
#ifndef TOLUA_DISABLE_tolua_server_Actor_GetGameSetting00
static int tolua_server_Actor_GetGameSetting00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nIdx = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  Actor::GetGameSetting(pEntity,nType,nIdx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetGameSetting'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setPosition */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setPosition00
static int tolua_server_Actor_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPosx = ((int)  tolua_tonumber(tolua_S,3,0));
  int nPosy = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Actor::setPosition(pEntity,nSceneID,nPosx,nPosy);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getAppearByteType */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getAppearByteType00
static int tolua_server_Actor_getAppearByteType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getAppearByteType(pEntity,nType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAppearByteType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SetEnterFuBenMapPos */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SetEnterFuBenMapPos00
static int tolua_server_Actor_SetEnterFuBenMapPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Actor::SetEnterFuBenMapPos(pEntity,nSceneId,x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEnterFuBenMapPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendNotEnoughMoney */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendNotEnoughMoney00
static int tolua_server_Actor_sendNotEnoughMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::sendNotEnoughMoney(pEntity,nType,nCount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendNotEnoughMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendAwardNotEnough */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendAwardNotEnough00
static int tolua_server_Actor_sendAwardNotEnough00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned char nType = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
  unsigned short wItemId = ((unsigned short)  tolua_tonumber(tolua_S,3,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Actor::sendAwardNotEnough(pEntity,nType,wItemId,nCount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendAwardNotEnough'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setTitle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setTitle00
static int tolua_server_Actor_setTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sTitle = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::setTitle(pEntity,sTitle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SetRelivePoint */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SetRelivePoint00
static int tolua_server_Actor_SetRelivePoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPosX = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPosY = ((int)  tolua_tonumber(tolua_S,3,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,4,0));
  bool isFuben = ((bool) (tolua_toboolean(tolua_S,5,0)!=0));
  {
   Actor::SetRelivePoint(pEntity,nPosX,nPosY,nSceneId,isFuben);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRelivePoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendGuildChannelMsg */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendGuildChannelMsg00
static int tolua_server_Actor_sendGuildChannelMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* szMsg = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   Actor::sendGuildChannelMsg(pEntity,szMsg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildChannelMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setActivation */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setActivation00
static int tolua_server_Actor_setActivation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nModleId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setActivation(pEntity,nModleId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActivation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActivation */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActivation00
static int tolua_server_Actor_getActivation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nModleId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::getActivation(pEntity,nModleId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActivation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isNearBySceneNpc */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isNearBySceneNpc00
static int tolua_server_Actor_isNearBySceneNpc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nNpcId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::isNearBySceneNpc(pEntity,nSceneId,nNpcId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isNearBySceneNpc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::refreshFeature */
#ifndef TOLUA_DISABLE_tolua_server_Actor_refreshFeature00
static int tolua_server_Actor_refreshFeature00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::refreshFeature(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'refreshFeature'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getDeadTimeRecent */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getDeadTimeRecent00
static int tolua_server_Actor_getDeadTimeRecent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getDeadTimeRecent(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDeadTimeRecent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getLoginDays */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getLoginDays00
static int tolua_server_Actor_getLoginDays00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getLoginDays(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLoginDays'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addExpToExpBox */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addExpToExpBox00
static int tolua_server_Actor_addExpToExpBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nAddExp = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::addExpToExpBox(pEntity,nAddExp);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addExpToExpBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::AddExpReachLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_AddExpReachLevel00
static int tolua_server_Actor_AddExpReachLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nAddExp = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::AddExpReachLevel(pEntity,nAddExp);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddExpReachLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::GetLevelExp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_GetLevelExp00
static int tolua_server_Actor_GetLevelExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   double tolua_ret = (double)  Actor::GetLevelExp(pEntity,nLevel);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLevelExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addPaodianExp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addPaodianExp00
static int tolua_server_Actor_addPaodianExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int paramA = ((int)  tolua_tonumber(tolua_S,2,0));
  int paramB = ((int)  tolua_tonumber(tolua_S,3,0));
  int paramC = ((int)  tolua_tonumber(tolua_S,4,0));
  int nLog = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   Actor::addPaodianExp(pEntity,paramA,paramB,paramC,nLog);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addPaodianExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addTypePaodianExp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addTypePaodianExp00
static int tolua_server_Actor_addTypePaodianExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLogId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::addTypePaodianExp(pEntity,nType,nLogId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTypePaodianExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::updateActorEntityProp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_updateActorEntityProp00
static int tolua_server_Actor_updateActorEntityProp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::updateActorEntityProp(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateActorEntityProp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::GetMonAttackedTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_GetMonAttackedTime00
static int tolua_server_Actor_GetMonAttackedTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::GetMonAttackedTime(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMonAttackedTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setAchieveGiveAwards */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setAchieveGiveAwards00
static int tolua_server_Actor_setAchieveGiveAwards00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAchieveID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setAchieveGiveAwards(pEntity,nAchieveID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAchieveGiveAwards'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setAchieveFinished */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setAchieveFinished00
static int tolua_server_Actor_setAchieveFinished00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAchieveID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setAchieveFinished(pEntity,nAchieveID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAchieveFinished'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::swapCombatRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_swapCombatRank00
static int tolua_server_Actor_swapCombatRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nActorId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nTagetId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::swapCombatRank(pEntity,nActorId,nTagetId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'swapCombatRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::ChallegeOverOp */
#ifndef TOLUA_DISABLE_tolua_server_Actor_ChallegeOverOp00
static int tolua_server_Actor_ChallegeOverOp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nResult = ((int)  tolua_tonumber(tolua_S,2,0));
  int nActorId = ((int)  tolua_tonumber(tolua_S,3,0));
  char* nName = ((char*)  tolua_tostring(tolua_S,4,0));
  int nIsReal = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   Actor::ChallegeOverOp(pEntity,nResult,nActorId,nName,nIsReal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ChallegeOverOp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::OnNewDayCombatClear */
#ifndef TOLUA_DISABLE_tolua_server_Actor_OnNewDayCombatClear00
static int tolua_server_Actor_OnNewDayCombatClear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::OnNewDayCombatClear(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnNewDayCombatClear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMyCombatRank */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMyCombatRank00
static int tolua_server_Actor_getMyCombatRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getMyCombatRank(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMyCombatRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTotalStar */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTotalStar00
static int tolua_server_Actor_getTotalStar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getTotalStar(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalStar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMaxAttack */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMaxAttack00
static int tolua_server_Actor_getMaxAttack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getMaxAttack(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxAttack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMaxDefence */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMaxDefence00
static int tolua_server_Actor_getMaxDefence00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Actor::getMaxDefence(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxDefence'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SetForceVesterId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SetForceVesterId00
static int tolua_server_Actor_SetForceVesterId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nForceVesterId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::SetForceVesterId(pEntity,nForceVesterId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetForceVesterId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getRunningActivityId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getRunningActivityId00
static int tolua_server_Actor_getRunningActivityId00(lua_State* tolua_S)
{
	return Actor::getRunningActivityId(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::ChouJiangByGroupId */
#ifndef TOLUA_DISABLE_tolua_server_Actor_ChouJiangByGroupId00
static int tolua_server_Actor_ChouJiangByGroupId00(lua_State* tolua_S)
{
	return Actor::ChouJiangByGroupId(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isActivityRunning */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isActivityRunning00
static int tolua_server_Actor_isActivityRunning00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAtvId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::isActivityRunning(pEntity,nAtvId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isActivityRunning'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isActivityTypeRunning */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isActivityTypeRunning00
static int tolua_server_Actor_isActivityTypeRunning00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAtvType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::isActivityTypeRunning(pEntity,nAtvType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isActivityTypeRunning'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::isMaxLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_isMaxLevel00
static int tolua_server_Actor_isMaxLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::isMaxLevel(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMaxLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::sendActivityData */
#ifndef TOLUA_DISABLE_tolua_server_Actor_sendActivityData00
static int tolua_server_Actor_sendActivityData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAtvId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::sendActivityData(pEntity,nAtvId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendActivityData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::closeOneActivity */
#ifndef TOLUA_DISABLE_tolua_server_Actor_closeOneActivity00
static int tolua_server_Actor_closeOneActivity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAtvId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::closeOneActivity(pEntity,nAtvId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeOneActivity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::removePet */
#ifndef TOLUA_DISABLE_tolua_server_Actor_removePet00
static int tolua_server_Actor_removePet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::removePet(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removePet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setChatForbit */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setChatForbit00
static int tolua_server_Actor_setChatForbit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nChannalId = ((int)  tolua_tonumber(tolua_S,2,0));
  bool value = ((bool) (tolua_toboolean(tolua_S,3,0)!=0));
  {
   Actor::setChatForbit(pEntity,nChannalId,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setChatForbit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getMaster */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getMaster00
static int tolua_server_Actor_getMaster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Actor::getMaster(pEntity);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SetBeLongBoss */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SetBeLongBoss00
static int tolua_server_Actor_SetBeLongBoss00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBossId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::SetBeLongBoss(pEntity,nBossId,nSceneId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBeLongBoss'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::CancelBeLongBoss */
#ifndef TOLUA_DISABLE_tolua_server_Actor_CancelBeLongBoss00
static int tolua_server_Actor_CancelBeLongBoss00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::CancelBeLongBoss(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CancelBeLongBoss'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getActorCreateTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getActorCreateTime00
static int tolua_server_Actor_getActorCreateTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getActorCreateTime(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorCreateTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getStaticCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getStaticCount00
static int tolua_server_Actor_getStaticCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  int staticType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Actor::getStaticCount(pActor,staticType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStaticCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::addStaticCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_addStaticCount00
static int tolua_server_Actor_addStaticCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  int staticType = ((int)  tolua_tonumber(tolua_S,2,0));
  int num = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::addStaticCount(pActor,staticType,num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addStaticCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setStaticCount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setStaticCount00
static int tolua_server_Actor_setStaticCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  int staticType = ((int)  tolua_tonumber(tolua_S,2,0));
  int num = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::setStaticCount(pActor,staticType,num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStaticCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasFreePrivilege */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasFreePrivilege00
static int tolua_server_Actor_IsHasFreePrivilege00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasFreePrivilege(pActor);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasFreePrivilege'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasMonthCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasMonthCard00
static int tolua_server_Actor_IsHasMonthCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasMonthCard(pActor);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasMonthCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasMedicineCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasMedicineCard00
static int tolua_server_Actor_IsHasMedicineCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasMedicineCard(pActor);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasMedicineCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasForverCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasForverCard00
static int tolua_server_Actor_IsHasForverCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasForverCard(pActor);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasForverCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::GetMaxColorCardLevel */
#ifndef TOLUA_DISABLE_tolua_server_Actor_GetMaxColorCardLevel00
static int tolua_server_Actor_GetMaxColorCardLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::GetMaxColorCardLevel(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxColorCardLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasOrangeCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasOrangeCard00
static int tolua_server_Actor_IsHasOrangeCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasOrangeCard(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasOrangeCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasPurpleCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasPurpleCard00
static int tolua_server_Actor_IsHasPurpleCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasPurpleCard(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasPurpleCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasBlueCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasBlueCard00
static int tolua_server_Actor_IsHasBlueCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasBlueCard(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasBlueCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasGreenCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasGreenCard00
static int tolua_server_Actor_IsHasGreenCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasGreenCard(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasGreenCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::IsHasWhiteCard */
#ifndef TOLUA_DISABLE_tolua_server_Actor_IsHasWhiteCard00
static int tolua_server_Actor_IsHasWhiteCard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Actor::IsHasWhiteCard(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasWhiteCard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::CheckDistanceByHandle */
#ifndef TOLUA_DISABLE_tolua_server_Actor_CheckDistanceByHandle00
static int tolua_server_Actor_CheckDistanceByHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  double handle = ((double)  tolua_tonumber(tolua_S,2,0));
  int distance = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Actor::CheckDistanceByHandle(pActor,handle,distance);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CheckDistanceByHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SendActivityLog */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SendActivityLog00
static int tolua_server_Actor_SendActivityLog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAtvId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nAtvType = ((int)  tolua_tonumber(tolua_S,3,0));
  int nStatu = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Actor::SendActivityLog(pActor,nAtvId,nAtvType,nStatu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendActivityLog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SetNpcTeleport */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SetNpcTeleport00
static int tolua_server_Actor_SetNpcTeleport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nJoinTime = ((int)  tolua_tonumber(tolua_S,3,0));
  int nMapGroup = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Actor::SetNpcTeleport(pEntity,nSceneId,nJoinTime,nMapGroup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNpcTeleport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::checkCommonLimit */
#ifndef TOLUA_DISABLE_tolua_server_Actor_checkCommonLimit00
static int tolua_server_Actor_checkCommonLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,3,0));
  int nVip = ((int)  tolua_tonumber(tolua_S,4,0));
  int nOffice = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   bool tolua_ret = (bool)  Actor::checkCommonLimit(pEntity,nLevel,nCircle,nVip,nOffice);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkCommonLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::checkKuangbao */
#ifndef TOLUA_DISABLE_tolua_server_Actor_checkKuangbao00
static int tolua_server_Actor_checkKuangbao00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nState = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Actor::checkKuangbao(pEntity,nState);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkKuangbao'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getGhostSumLv */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getGhostSumLv00
static int tolua_server_Actor_getGhostSumLv00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getGhostSumLv(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGhostSumLv'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::SendJoinActivityLog */
#ifndef TOLUA_DISABLE_tolua_server_Actor_SendJoinActivityLog00
static int tolua_server_Actor_SendJoinActivityLog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActor = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nAtvId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Actor::SendJoinActivityLog(pActor,nAtvId,nIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendJoinActivityLog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getTotalOnlineTime */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getTotalOnlineTime00
static int tolua_server_Actor_getTotalOnlineTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getTotalOnlineTime(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalOnlineTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::KickUserAccount */
#ifndef TOLUA_DISABLE_tolua_server_Actor_KickUserAccount00
static int tolua_server_Actor_KickUserAccount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Actor::KickUserAccount(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KickUserAccount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::setRechargeStatus */
#ifndef TOLUA_DISABLE_tolua_server_Actor_setRechargeStatus00
static int tolua_server_Actor_setRechargeStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nStatus = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Actor::setRechargeStatus(pEntity,nStatus);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRechargeStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Actor::getRechargeStatus */
#ifndef TOLUA_DISABLE_tolua_server_Actor_getRechargeStatus00
static int tolua_server_Actor_getRechargeStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Actor::getRechargeStatus(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRechargeStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::createFuBen */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_createFuBen00
static int tolua_server_Fuben_createFuBen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nFbID = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Fuben::createFuBen(nFbID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createFuBen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getFbValue */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getFbValue00
static int tolua_server_Fuben_getFbValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFb = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Fuben::getFbValue(pFb,nIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFbValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::setFbValue */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_setFbValue00
static int tolua_server_Fuben_setFbValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFb = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Fuben::setFbValue(pFb,nIndex,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFbValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getTeamOnlineMemberCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getTeamOnlineMemberCount00
static int tolua_server_Fuben_getTeamOnlineMemberCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getTeamOnlineMemberCount(nTeamId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamOnlineMemberCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getTeamMemberCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getTeamMemberCount00
static int tolua_server_Fuben_getTeamMemberCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getTeamMemberCount(nTeamId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamMemberCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getTeamFubenId */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getTeamFubenId00
static int tolua_server_Fuben_getTeamFubenId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getTeamFubenId(nTeamId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamFubenId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getTeamMaxMemberCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getTeamMaxMemberCount00
static int tolua_server_Fuben_getTeamMaxMemberCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getTeamMaxMemberCount(nTeamId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamMaxMemberCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::isRefuseActor */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_isRefuseActor00
static int tolua_server_Fuben_isRefuseActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hFbHandle = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nAcotid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Fuben::isRefuseActor(hFbHandle,nAcotid);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isRefuseActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::addRefuseActor */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_addRefuseActor00
static int tolua_server_Fuben_addRefuseActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hFbHandle = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nAcotid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Fuben::addRefuseActor(hFbHandle,nAcotid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addRefuseActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getFubenIdByPtr */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getFubenIdByPtr00
static int tolua_server_Fuben_getFubenIdByPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getFubenIdByPtr(pFb);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFubenIdByPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getGuildIdByByPtr */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getGuildIdByByPtr00
static int tolua_server_Fuben_getGuildIdByByPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Fuben::getGuildIdByByPtr(pFb);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildIdByByPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getFubenPtrByHandle */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getFubenPtrByHandle00
static int tolua_server_Fuben_getFubenPtrByHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nFubenHandle = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Fuben::getFubenPtrByHandle(nFubenHandle);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFubenPtrByHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::closeFuben */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_closeFuben00
static int tolua_server_Fuben_closeFuben00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hFuben = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   Fuben::closeFuben(hFuben);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeFuben'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getFubenHandle */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getFubenHandle00
static int tolua_server_Fuben_getFubenHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFuben = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Fuben::getFubenHandle(pFuben);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFubenHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getStaticFubenHandle */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getStaticFubenHandle00
static int tolua_server_Fuben_getStaticFubenHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  Fuben::getStaticFubenHandle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStaticFubenHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::createMonster */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_createMonster00
static int tolua_server_Fuben_createMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nMonsterid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int posX = ((int)  tolua_tonumber(tolua_S,3,0));
  int posY = ((int)  tolua_tonumber(tolua_S,4,0));
  unsigned int nLiveTime = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
  unsigned int nBornLevel = ((unsigned int)  tolua_tonumber(tolua_S,6,0));
  {
   void* tolua_ret = (void*)  Fuben::createMonster(hScene,nMonsterid,posX,posY,nLiveTime,nBornLevel);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getreateMonsterPosXY */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getreateMonsterPosXY00
static int tolua_server_Fuben_getreateMonsterPosXY00(lua_State* tolua_S)
{
	return Fuben::getreateMonsterPosXY(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::setMonsterIndex */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_setMonsterIndex00
static int tolua_server_Fuben_setMonsterIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIdx = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Fuben::setMonsterIndex(pEntity,nIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMonsterIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::ResetMonsterShowName */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_ResetMonsterShowName00
static int tolua_server_Fuben_ResetMonsterShowName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Fuben::ResetMonsterShowName(pEntity,sName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetMonsterShowName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::AddMonsterBuffById */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_AddMonsterBuffById00
static int tolua_server_Fuben_AddMonsterBuffById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Fuben::AddMonsterBuffById(pEntity,nBuffId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddMonsterBuffById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::DelMonsterBuffById */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_DelMonsterBuffById00
static int tolua_server_Fuben_DelMonsterBuffById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nBuffId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Fuben::DelMonsterBuffById(pEntity,nBuffId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DelMonsterBuffById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::createMonsters */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_createMonsters00
static int tolua_server_Fuben_createMonsters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nMonsterid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int posX1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int posX2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int posY = ((int)  tolua_tonumber(tolua_S,5,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,6,0));
  unsigned int nLiveTime = ((unsigned int)  tolua_tonumber(tolua_S,7,0));
  unsigned int nBornLevel = ((unsigned int)  tolua_tonumber(tolua_S,8,0));
  {
   Fuben::createMonsters(hScene,nMonsterid,posX1,posX2,posY,nCount,nLiveTime,nBornLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createMonsters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::createMonstersInRange */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_createMonstersInRange00
static int tolua_server_Fuben_createMonstersInRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isstring(tolua_S,10,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,11,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,12,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,13,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nMonsterid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int posX1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int posY1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int posX2 = ((int)  tolua_tonumber(tolua_S,5,0));
  int posY2 = ((int)  tolua_tonumber(tolua_S,6,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,7,0));
  unsigned int nLiveTime = ((unsigned int)  tolua_tonumber(tolua_S,8,0));
  unsigned int nBornLevel = ((unsigned int)  tolua_tonumber(tolua_S,9,0));
  char* szMonsterName = ((char*)  tolua_tostring(tolua_S,10,NULL));
  unsigned int nForceVesterId = ((unsigned int)  tolua_tonumber(tolua_S,11,0));
  bool bForcePos = ((bool) (tolua_toboolean(tolua_S,12,false)!=0));
  {
   int tolua_ret = (int)  Fuben::createMonstersInRange(hScene,nMonsterid,posX1,posY1,posX2,posY2,nCount,nLiveTime,nBornLevel,szMonsterName,nForceVesterId,bForcePos);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createMonstersInRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::createOneMonsters */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_createOneMonsters00
static int tolua_server_Fuben_createOneMonsters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isstring(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nMonsterid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int posX = ((int)  tolua_tonumber(tolua_S,3,0));
  int posY = ((int)  tolua_tonumber(tolua_S,4,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,5,0));
  unsigned int nLiveTime = ((unsigned int)  tolua_tonumber(tolua_S,6,0));
  unsigned int nBornLevel = ((unsigned int)  tolua_tonumber(tolua_S,7,0));
  char* szMonsterName = ((char*)  tolua_tostring(tolua_S,8,NULL));
  int nForceVesterId = ((int)  tolua_tonumber(tolua_S,9,0));
  int nInitMonsterPercent = ((int)  tolua_tonumber(tolua_S,10,100));
  {
   void* tolua_ret = (void*)  Fuben::createOneMonsters(hScene,nMonsterid,posX,posY,nCount,nLiveTime,nBornLevel,szMonsterName,nForceVesterId,nInitMonsterPercent);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createOneMonsters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::createMonstersAndSetPathpoint */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_createMonstersAndSetPathpoint00
static int tolua_server_Fuben_createMonstersAndSetPathpoint00(lua_State* tolua_S)
{
	return Fuben::createMonstersAndSetPathpoint(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getMonsterCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getMonsterCount00
static int tolua_server_Fuben_getMonsterCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFuben = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Fuben::getMonsterCount(pFuben,nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getSceneMonsterCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getSceneMonsterCount00
static int tolua_server_Fuben_getSceneMonsterCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFuben = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nScenId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  Fuben::getSceneMonsterCount(pFuben,nScenId,nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneMonsterCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getSceneHandleByName */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getSceneHandleByName00
static int tolua_server_Fuben_getSceneHandleByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* sSceneName = ((const char*)  tolua_tostring(tolua_S,1,0));
  unsigned int hFuben = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   unsigned int tolua_ret = (unsigned int)  Fuben::getSceneHandleByName(sSceneName,hFuben);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneHandleByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getSceneHandleById */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getSceneHandleById00
static int tolua_server_Fuben_getSceneHandleById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  unsigned int hFuben = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   unsigned int tolua_ret = (unsigned int)  Fuben::getSceneHandleById(nSceneId,hFuben);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneHandleById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getMyMonsterCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getMyMonsterCount00
static int tolua_server_Fuben_getMyMonsterCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Fuben::getMyMonsterCount(hScene,nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMyMonsterCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::clearMonster */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_clearMonster00
static int tolua_server_Fuben_clearMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Fuben::clearMonster(hScene,nMonsterId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::clearMonster */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_clearMonster01
static int tolua_server_Fuben_clearMonster01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  double handle = ((double)  tolua_tonumber(tolua_S,1,0));
  bool bDelayDestroy = ((bool) (tolua_toboolean(tolua_S,2,false)!=0));
  {
   Fuben::clearMonster(handle,bDelayDestroy);
  }
 }
 return 0;
tolua_lerror:
 return tolua_server_Fuben_clearMonster00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::clearSceneEntity */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_clearSceneEntity00
static int tolua_server_Fuben_clearSceneEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Fuben::clearSceneEntity(hScene,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearSceneEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::killMonsterByActor */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_killMonsterByActor00
static int tolua_server_Fuben_killMonsterByActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pMonster = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   Fuben::killMonsterByActor(pMonster,pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'killMonsterByActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::sendMsgToScene */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_sendMsgToScene00
static int tolua_server_Fuben_sendMsgToScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  char* sMsg = ((char*)  tolua_tostring(tolua_S,2,0));
  int nType = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Fuben::sendMsgToScene(hScene,sMsg,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendMsgToScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::sendCountDown */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_sendCountDown00
static int tolua_server_Fuben_sendCountDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,2,0));
  int nFlag = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Fuben::sendCountDown(hScene,nTime,nFlag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendCountDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::sendMsgToFb */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_sendMsgToFb00
static int tolua_server_Fuben_sendMsgToFb00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned hFb = ((unsigned)  tolua_tonumber(tolua_S,1,0));
  char* sMsg = ((char*)  tolua_tostring(tolua_S,2,0));
  int nType = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Fuben::sendMsgToFb(hFb,sMsg,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendMsgToFb'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getNpcPtrByName */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getNpcPtrByName00
static int tolua_server_Fuben_getNpcPtrByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  char* szName = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Fuben::getNpcPtrByName(hScene,szName);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcPtrByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getFbActorPtr */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getFbActorPtr00
static int tolua_server_Fuben_getFbActorPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hFb = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Fuben::getFbActorPtr(hFb);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFbActorPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getMonsterPtrById */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getMonsterPtrById00
static int tolua_server_Fuben_getMonsterPtrById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Fuben::getMonsterPtrById(hScene,nMonsterId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterPtrById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getMonsterPtrByIdx */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getMonsterPtrByIdx00
static int tolua_server_Fuben_getMonsterPtrByIdx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nMonsterIdx = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   void* tolua_ret = (void*)  Fuben::getMonsterPtrByIdx(hScene,nMonsterId,nMonsterIdx);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterPtrByIdx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getMonsterBeAttackActorList */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getMonsterBeAttackActorList00
static int tolua_server_Fuben_getMonsterBeAttackActorList00(lua_State* tolua_S)
{
	return Fuben::getMonsterBeAttackActorList(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::isKillAllMonster */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_isKillAllMonster00
static int tolua_server_Fuben_isKillAllMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Fuben::isKillAllMonster(hScene,nMonsterId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isKillAllMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getLiveMonsterCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getLiveMonsterCount00
static int tolua_server_Fuben_getLiveMonsterCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Fuben::getLiveMonsterCount(hScene,nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLiveMonsterCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::setSceneTime */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_setSceneTime00
static int tolua_server_Fuben_setSceneTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Fuben::setSceneTime(hScene,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSceneTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getSceneTime */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getSceneTime00
static int tolua_server_Fuben_getSceneTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getSceneTime(hScene);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getSceneNameById */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getSceneNameById00
static int tolua_server_Fuben_getSceneNameById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  Fuben::getSceneNameById(nSceneId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNameById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::setSceneNpcCanNotSee */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_setSceneNpcCanNotSee00
static int tolua_server_Fuben_setSceneNpcCanNotSee00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  bool bSet = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   Fuben::setSceneNpcCanNotSee(nSceneId,bSet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSceneNpcCanNotSee'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::setSceneAreaAttri */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_setSceneAreaAttri00
static int tolua_server_Fuben_setSceneAreaAttri00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int nType = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* sValues = ((const char*)  tolua_tostring(tolua_S,4,0));
  const char* sFunc = ((const char*)  tolua_tostring(tolua_S,5,NULL));
  double hNpc = ((double)  tolua_tonumber(tolua_S,6,0));
  int notips = ((int)  tolua_tonumber(tolua_S,7,0));
  {
   bool tolua_ret = (bool)  Fuben::setSceneAreaAttri(hScene,nIndex,nType,sValues,sFunc,hNpc,notips);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSceneAreaAttri'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::GetAreaListIndex */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_GetAreaListIndex00
static int tolua_server_Fuben_GetAreaListIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  unsigned int fbHandle = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  {
   int tolua_ret = (int)  Fuben::GetAreaListIndex(nSceneId,x,y,fbHandle);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAreaListIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::GetNowSceneGuildList */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_GetNowSceneGuildList00
static int tolua_server_Fuben_GetNowSceneGuildList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nSceneId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::GetNowSceneGuildList(nSceneId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNowSceneGuildList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::ResetFubenSceneConfig */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_ResetFubenSceneConfig00
static int tolua_server_Fuben_ResetFubenSceneConfig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   Fuben::ResetFubenSceneConfig(nSceneId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetFubenSceneConfig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getKillBossCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getKillBossCount00
static int tolua_server_Fuben_getKillBossCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pfb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getKillBossCount(pfb);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getKillBossCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getKillBossActorName */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getKillBossActorName00
static int tolua_server_Fuben_getKillBossActorName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pfb = ((void*)  tolua_touserdata(tolua_S,1,0));
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const char* tolua_ret = (const char*)  Fuben::getKillBossActorName(pfb,index);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getKillBossActorName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getFbTime */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getFbTime00
static int tolua_server_Fuben_getFbTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pfb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getFbTime(pfb);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFbTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getActorDieCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getActorDieCount00
static int tolua_server_Fuben_getActorDieCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pfb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getActorDieCount(pfb);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorDieCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getFbMonsterTotal */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getFbMonsterTotal00
static int tolua_server_Fuben_getFbMonsterTotal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pfb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getFbMonsterTotal(pfb);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFbMonsterTotal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getKillMonsterCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getKillMonsterCount00
static int tolua_server_Fuben_getKillMonsterCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pfb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getKillMonsterCount(pfb);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getKillMonsterCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getDyanmicVar */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getDyanmicVar00
static int tolua_server_Fuben_getDyanmicVar00(lua_State* tolua_S)
{
	return Fuben::getDyanmicVar(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::clearDynamicVar */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_clearDynamicVar00
static int tolua_server_Fuben_clearDynamicVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  {
   Fuben::clearDynamicVar(L);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearDynamicVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getScenePlayerCount */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getScenePlayerCount00
static int tolua_server_Fuben_getScenePlayerCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getScenePlayerCount(nScene);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScenePlayerCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getSceenWidth */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getSceenWidth00
static int tolua_server_Fuben_getSceenWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getSceenWidth(nScene);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceenWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getScenHeight */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getScenHeight00
static int tolua_server_Fuben_getScenHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getScenHeight(nScene);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScenHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::onCanMove */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_onCanMove00
static int tolua_server_Fuben_onCanMove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Fuben::onCanMove(nScene,x,y);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onCanMove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getNpcPtrFromAllScenes */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getNpcPtrFromAllScenes00
static int tolua_server_Fuben_getNpcPtrFromAllScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* sNpcName = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Fuben::getNpcPtrFromAllScenes(sNpcName);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcPtrFromAllScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getScenePtrById */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getScenePtrById00
static int tolua_server_Fuben_getScenePtrById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   CScene* tolua_ret = (CScene*)  Fuben::getScenePtrById(nSceneId);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"CScene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScenePtrById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getScenePtrByName */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getScenePtrByName00
static int tolua_server_Fuben_getScenePtrByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pSceneName = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   CScene* tolua_ret = (CScene*)  Fuben::getScenePtrByName(pSceneName);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"CScene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScenePtrByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getNpcPtrById */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getNpcPtrById00
static int tolua_server_Fuben_getNpcPtrById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nSceneId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nNpcId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Fuben::getNpcPtrById(nSceneId,nNpcId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcPtrById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getFbNpcPtrById */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getFbNpcPtrById00
static int tolua_server_Fuben_getFbNpcPtrById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nSceneHandle = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nNpcId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Fuben::getFbNpcPtrById(nSceneHandle,nNpcId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFbNpcPtrById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::hasMapAreaAttri */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_hasMapAreaAttri00
static int tolua_server_Fuben_hasMapAreaAttri00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pScene = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPosX = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPosY = ((int)  tolua_tonumber(tolua_S,3,0));
  int nAttriValue = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  Fuben::hasMapAreaAttri(pScene,nPosX,nPosY,nAttriValue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMapAreaAttri'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::setFbTime */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_setFbTime00
static int tolua_server_Fuben_setFbTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFb = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Fuben::setFbTime(pFb,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFbTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::clearAllMonster */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_clearAllMonster00
static int tolua_server_Fuben_clearAllMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   Fuben::clearAllMonster(hScene);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearAllMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getEntityCountAtXY */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getEntityCountAtXY00
static int tolua_server_Fuben_getEntityCountAtXY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nX = ((int)  tolua_tonumber(tolua_S,2,0));
  int nY = ((int)  tolua_tonumber(tolua_S,3,0));
  int nEntityType = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   int tolua_ret = (int)  Fuben::getEntityCountAtXY(hScene,nX,nY,nEntityType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntityCountAtXY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::SendSecneShortCutMsg */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_SendSecneShortCutMsg00
static int tolua_server_Fuben_SendSecneShortCutMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  const char* szMsg = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Fuben::SendSecneShortCutMsg(hScene,szMsg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendSecneShortCutMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getSceneNeedLevel */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getSceneNeedLevel00
static int tolua_server_Fuben_getSceneNeedLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* ptrScene = ((void*)  tolua_touserdata(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,4,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   Fuben::getSceneNeedLevel(ptrScene,x,y,nLevel,nCircle);
   tolua_pushnumber(tolua_S,(lua_Number)nLevel);
   tolua_pushnumber(tolua_S,(lua_Number)nCircle);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNeedLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::setUnableMovePoint */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_setUnableMovePoint00
static int tolua_server_Fuben_setUnableMovePoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  bool boValue = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  {
   Fuben::setUnableMovePoint(hScene,x,y,boValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUnableMovePoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getSceneId */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getSceneId00
static int tolua_server_Fuben_getSceneId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Fuben::getSceneId(hScene);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::useDefaultCreateMonster */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_useDefaultCreateMonster00
static int tolua_server_Fuben_useDefaultCreateMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int fbHandle = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  bool flag = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   bool tolua_ret = (bool)  Fuben::useDefaultCreateMonster(fbHandle,flag);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'useDefaultCreateMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::isFuben */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_isFuben00
static int tolua_server_Fuben_isFuben00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Fuben::isFuben(pFb);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFuben'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::ExitAllFbActor */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_ExitAllFbActor00
static int tolua_server_Fuben_ExitAllFbActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pFb = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Fuben::ExitAllFbActor(pFb);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ExitAllFbActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getMonsterHp */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getMonsterHp00
static int tolua_server_Fuben_getMonsterHp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Fuben::getMonsterHp(hScene,nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterHp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Fuben::getMonsterMaxHp */
#ifndef TOLUA_DISABLE_tolua_server_Fuben_getMonsterMaxHp00
static int tolua_server_Fuben_getMonsterMaxHp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Fuben::getMonsterMaxHp(hScene,nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterMaxHp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: print */
#ifndef TOLUA_DISABLE_tolua_server_print00
static int tolua_server_print00(lua_State* tolua_S)
{
	return print(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getServerName */
#ifndef TOLUA_DISABLE_tolua_server_System_getServerName00
static int tolua_server_System_getServerName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   char* tolua_ret = (char*)  System::getServerName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getServerName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getPfId */
#ifndef TOLUA_DISABLE_tolua_server_System_getPfId00
static int tolua_server_System_getPfId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   char* tolua_ret = (char*)  System::getPfId();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPfId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getYYKey */
#ifndef TOLUA_DISABLE_tolua_server_System_getYYKey00
static int tolua_server_System_getYYKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   char* tolua_ret = (char*)  System::getYYKey();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getYYKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGameFlag */
#ifndef TOLUA_DISABLE_tolua_server_System_getGameFlag00
static int tolua_server_System_getGameFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   char* tolua_ret = (char*)  System::getGameFlag();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGameFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getServerId */
#ifndef TOLUA_DISABLE_tolua_server_System_getServerId00
static int tolua_server_System_getServerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getServerId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getServerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getDate */
#ifndef TOLUA_DISABLE_tolua_server_System_getDate00
static int tolua_server_System_getDate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nYear = ((int)  tolua_tonumber(tolua_S,1,0));
  int nMonth = ((int)  tolua_tonumber(tolua_S,2,0));
  int nDay = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   System::getDate(nYear,nMonth,nDay);
   tolua_pushnumber(tolua_S,(lua_Number)nYear);
   tolua_pushnumber(tolua_S,(lua_Number)nMonth);
   tolua_pushnumber(tolua_S,(lua_Number)nDay);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getTime00
static int tolua_server_System_getTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nHour = ((int)  tolua_tonumber(tolua_S,1,0));
  int nMinute = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSecond = ((int)  tolua_tonumber(tolua_S,3,0));
  int nMiliSecond = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   System::getTime(nHour,nMinute,nSecond,nMiliSecond);
   tolua_pushnumber(tolua_S,(lua_Number)nHour);
   tolua_pushnumber(tolua_S,(lua_Number)nMinute);
   tolua_pushnumber(tolua_S,(lua_Number)nSecond);
   tolua_pushnumber(tolua_S,(lua_Number)nMiliSecond);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getSceneIdByName */
#ifndef TOLUA_DISABLE_tolua_server_System_getSceneIdByName00
static int tolua_server_System_getSceneIdByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sName = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getSceneIdByName(sName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneIdByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getDayOfWeek */
#ifndef TOLUA_DISABLE_tolua_server_System_getDayOfWeek00
static int tolua_server_System_getDayOfWeek00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getDayOfWeek();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDayOfWeek'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getDayOfMonth */
#ifndef TOLUA_DISABLE_tolua_server_System_getDayOfMonth00
static int tolua_server_System_getDayOfMonth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getDayOfMonth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDayOfMonth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getMonthOfNow */
#ifndef TOLUA_DISABLE_tolua_server_System_getMonthOfNow00
static int tolua_server_System_getMonthOfNow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getMonthOfNow();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonthOfNow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getTick */
#ifndef TOLUA_DISABLE_tolua_server_System_getTick00
static int tolua_server_System_getTick00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned long long tolua_ret = (unsigned long long)  System::getTick();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTick'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getRandomNumber */
#ifndef TOLUA_DISABLE_tolua_server_System_getRandomNumber00
static int tolua_server_System_getRandomNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nModule = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::getRandomNumber(nModule);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRandomNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getCurrMiniTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getCurrMiniTime00
static int tolua_server_System_getCurrMiniTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  System::getCurrMiniTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrMiniTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isSameWeek */
#ifndef TOLUA_DISABLE_tolua_server_System_isSameWeek00
static int tolua_server_System_isSameWeek00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int t1 = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int t2 = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  System::isSameWeek(t1,t2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSameWeek'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isSameDay */
#ifndef TOLUA_DISABLE_tolua_server_System_isSameDay00
static int tolua_server_System_isSameDay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int t1 = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int t2 = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  System::isSameDay(t1,t2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSameDay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::telportSceneByName */
#ifndef TOLUA_DISABLE_tolua_server_System_telportSceneByName00
static int tolua_server_System_telportSceneByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sSceneName = ((char*)  tolua_tostring(tolua_S,2,0));
  int nPosX = ((int)  tolua_tonumber(tolua_S,3,0));
  int nPosY = ((int)  tolua_tonumber(tolua_S,4,0));
  int nType = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   bool tolua_ret = (bool)  System::telportSceneByName(pEntity,sSceneName,nPosX,nPosY,nType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'telportSceneByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::telportScene */
#ifndef TOLUA_DISABLE_tolua_server_System_telportScene00
static int tolua_server_System_telportScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPosX = ((int)  tolua_tonumber(tolua_S,3,0));
  int nPosY = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  System::telportScene(pEntity,nSceneId,nPosX,nPosY);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'telportScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::telportSceneDelay */
#ifndef TOLUA_DISABLE_tolua_server_System_telportSceneDelay00
static int tolua_server_System_telportSceneDelay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPosX = ((int)  tolua_tonumber(tolua_S,3,0));
  int nPosY = ((int)  tolua_tonumber(tolua_S,4,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   System::telportSceneDelay(pEntity,nSceneId,nPosX,nPosY,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'telportSceneDelay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::telportSceneDefaultPoint */
#ifndef TOLUA_DISABLE_tolua_server_System_telportSceneDefaultPoint00
static int tolua_server_System_telportSceneDefaultPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sSceneName = ((char*)  tolua_tostring(tolua_S,2,0));
  int nPointID = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  System::telportSceneDefaultPoint(pEntity,sSceneName,nPointID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'telportSceneDefaultPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::InitScriptNetmsgDispatcher */
#ifndef TOLUA_DISABLE_tolua_server_System_InitScriptNetmsgDispatcher00
static int tolua_server_System_InitScriptNetmsgDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::InitScriptNetmsgDispatcher();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'InitScriptNetmsgDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::regScriptNetMsg */
#ifndef TOLUA_DISABLE_tolua_server_System_regScriptNetMsg00
static int tolua_server_System_regScriptNetMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int sysId = ((int)  tolua_tonumber(tolua_S,1,0));
  int cmdId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::regScriptNetMsg(sysId,cmdId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'regScriptNetMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::InitScriptActorEventDispatcher */
#ifndef TOLUA_DISABLE_tolua_server_System_InitScriptActorEventDispatcher00
static int tolua_server_System_InitScriptActorEventDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::InitScriptActorEventDispatcher();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'InitScriptActorEventDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::regScriptEvent */
#ifndef TOLUA_DISABLE_tolua_server_System_regScriptEvent00
static int tolua_server_System_regScriptEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nType = ((int)  tolua_tonumber(tolua_S,1,0));
  int evId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::regScriptEvent(nType,evId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'regScriptEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::trace */
#ifndef TOLUA_DISABLE_tolua_server_System_trace00
static int tolua_server_System_trace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* str = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   System::trace(str);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'trace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::deepCreateDirectory */
#ifndef TOLUA_DISABLE_tolua_server_System_deepCreateDirectory00
static int tolua_server_System_deepCreateDirectory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sDirName = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  System::deepCreateDirectory(sDirName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deepCreateDirectory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::fileExists */
#ifndef TOLUA_DISABLE_tolua_server_System_fileExists00
static int tolua_server_System_fileExists00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sFilePath = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  System::fileExists(sFilePath);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fileExists'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getActorPtr */
#ifndef TOLUA_DISABLE_tolua_server_System_getActorPtr00
static int tolua_server_System_getActorPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sName = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  System::getActorPtr(sName);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActorPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::broadcastTipmsg */
#ifndef TOLUA_DISABLE_tolua_server_System_broadcastTipmsg00
static int tolua_server_System_broadcastTipmsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sTipmsg = ((char*)  tolua_tostring(tolua_S,1,0));
  int nTipmsgType = ((int)  tolua_tonumber(tolua_S,2,ttTipmsgWindow));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   System::broadcastTipmsg(sTipmsg,nTipmsgType,nLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadcastTipmsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::broadcastTipmsgCs */
#ifndef TOLUA_DISABLE_tolua_server_System_broadcastTipmsgCs00
static int tolua_server_System_broadcastTipmsgCs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sTipmsg = ((char*)  tolua_tostring(tolua_S,1,0));
  int nTipmsgType = ((int)  tolua_tonumber(tolua_S,2,ttTipmsgWindow));
  bool bCsFlag = ((bool) (tolua_toboolean(tolua_S,3,true)!=0));
  {
   System::broadcastTipmsgCs(sTipmsg,nTipmsgType,bCsFlag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadcastTipmsgCs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::broadcastTipmsgLimitLev */
#ifndef TOLUA_DISABLE_tolua_server_System_broadcastTipmsgLimitLev00
static int tolua_server_System_broadcastTipmsgLimitLev00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sTipmsg = ((char*)  tolua_tostring(tolua_S,1,0));
  int nTipmsgType = ((int)  tolua_tonumber(tolua_S,2,ttTipmsgWindow));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   System::broadcastTipmsgLimitLev(sTipmsg,nTipmsgType,nLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadcastTipmsgLimitLev'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::broadcastTipmsgWithID */
#ifndef TOLUA_DISABLE_tolua_server_System_broadcastTipmsgWithID00
static int tolua_server_System_broadcastTipmsgWithID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nTipmsgID = ((int)  tolua_tonumber(tolua_S,1,0));
  int nTipmsgType = ((int)  tolua_tonumber(tolua_S,2,ttTipmsgWindow));
  {
   System::broadcastTipmsgWithID(nTipmsgID,nTipmsgType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadcastTipmsgWithID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::broadTipmsgWithParams */
#ifndef TOLUA_DISABLE_tolua_server_System_broadTipmsgWithParams00
static int tolua_server_System_broadTipmsgWithParams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isstring(tolua_S,3,1,&tolua_err) ||
     !tolua_isstring(tolua_S,4,1,&tolua_err) ||
     !tolua_isstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nTipmsgID = ((int)  tolua_tonumber(tolua_S,1,0));
  int nTipmsgType = ((int)  tolua_tonumber(tolua_S,2,ttTipmsgWindow));
  char* sParam1 = ((char*)  tolua_tostring(tolua_S,3,NULL));
  char* sParam2 = ((char*)  tolua_tostring(tolua_S,4,NULL));
  char* sParam3 = ((char*)  tolua_tostring(tolua_S,5,NULL));
  {
   System::broadTipmsgWithParams(nTipmsgID,nTipmsgType,sParam1,sParam2,sParam3);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadTipmsgWithParams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getEntityByPtr */
#ifndef TOLUA_DISABLE_tolua_server_System_getEntityByPtr00
static int tolua_server_System_getEntityByPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getEntityByPtr(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntityByPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getEntityTypeByHandle */
#ifndef TOLUA_DISABLE_tolua_server_System_getEntityTypeByHandle00
static int tolua_server_System_getEntityTypeByHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned long long entityHandle = ((unsigned long long)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getEntityTypeByHandle(entityHandle);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntityTypeByHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getEntityPtrByActorID */
#ifndef TOLUA_DISABLE_tolua_server_System_getEntityPtrByActorID00
static int tolua_server_System_getEntityPtrByActorID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nActorID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  System::getEntityPtrByActorID(nActorID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntityPtrByActorID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::registerTimeCall */
#ifndef TOLUA_DISABLE_tolua_server_System_registerTimeCall00
static int tolua_server_System_registerTimeCall00(lua_State* tolua_S)
{
	return System::registerTimeCall(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getTimeCall */
#ifndef TOLUA_DISABLE_tolua_server_System_getTimeCall00
static int tolua_server_System_getTimeCall00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pNPC = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sFnName = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  System::getTimeCall(pNPC,sFnName);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTimeCall'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::unregisterTimeCall */
#ifndef TOLUA_DISABLE_tolua_server_System_unregisterTimeCall00
static int tolua_server_System_unregisterTimeCall00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* hCall = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  System::unregisterTimeCall(hCall);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unregisterTimeCall'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::rawCallExport */
#ifndef TOLUA_DISABLE_tolua_server_System_rawCallExport00
static int tolua_server_System_rawCallExport00(lua_State* tolua_S)
{
	return System::rawCallExport(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isInTimeRange */
#ifndef TOLUA_DISABLE_tolua_server_System_isInTimeRange00
static int tolua_server_System_isInTimeRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nStartHour = ((int)  tolua_tonumber(tolua_S,1,0));
  int nStartMin = ((int)  tolua_tonumber(tolua_S,2,0));
  int nStartSec = ((int)  tolua_tonumber(tolua_S,3,0));
  int nEndHour = ((int)  tolua_tonumber(tolua_S,4,0));
  int nEndMin = ((int)  tolua_tonumber(tolua_S,5,0));
  int nEndSec = ((int)  tolua_tonumber(tolua_S,6,0));
  {
   bool tolua_ret = (bool)  System::isInTimeRange(nStartHour,nStartMin,nStartSec,nEndHour,nEndMin,nEndSec);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInTimeRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getTimeRange */
#ifndef TOLUA_DISABLE_tolua_server_System_getTimeRange00
static int tolua_server_System_getTimeRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nStartHour = ((int)  tolua_tonumber(tolua_S,1,0));
  int nStartMin = ((int)  tolua_tonumber(tolua_S,2,0));
  int nStartSec = ((int)  tolua_tonumber(tolua_S,3,0));
  int nEndHour = ((int)  tolua_tonumber(tolua_S,4,0));
  int nEndMin = ((int)  tolua_tonumber(tolua_S,5,0));
  int nEndSec = ((int)  tolua_tonumber(tolua_S,6,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::getTimeRange(nStartHour,nStartMin,nStartSec,nEndHour,nEndMin,nEndSec);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTimeRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isInDateRange */
#ifndef TOLUA_DISABLE_tolua_server_System_isInDateRange00
static int tolua_server_System_isInDateRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,11,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,12,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,13,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nStartYear = ((int)  tolua_tonumber(tolua_S,1,0));
  int nStartMonth = ((int)  tolua_tonumber(tolua_S,2,0));
  int nStartDay = ((int)  tolua_tonumber(tolua_S,3,0));
  int nStartHour = ((int)  tolua_tonumber(tolua_S,4,0));
  int nStartMin = ((int)  tolua_tonumber(tolua_S,5,0));
  int nStartSec = ((int)  tolua_tonumber(tolua_S,6,0));
  int nEndYear = ((int)  tolua_tonumber(tolua_S,7,0));
  int nEndMonth = ((int)  tolua_tonumber(tolua_S,8,0));
  int nEndDay = ((int)  tolua_tonumber(tolua_S,9,0));
  int nEndHour = ((int)  tolua_tonumber(tolua_S,10,0));
  int nEndMin = ((int)  tolua_tonumber(tolua_S,11,0));
  int nEndSec = ((int)  tolua_tonumber(tolua_S,12,0));
  {
   bool tolua_ret = (bool)  System::isInDateRange(nStartYear,nStartMonth,nStartDay,nStartHour,nStartMin,nStartSec,nEndYear,nEndMonth,nEndDay,nEndHour,nEndMin,nEndSec);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInDateRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isInOffsetTimeRange */
#ifndef TOLUA_DISABLE_tolua_server_System_isInOffsetTimeRange00
static int tolua_server_System_isInOffsetTimeRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* sStartTime = ((const char*)  tolua_tostring(tolua_S,1,0));
  unsigned int nOffset = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int nError = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  System::isInOffsetTimeRange(sStartTime,nOffset,nError);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInOffsetTimeRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getRandDateTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getRandDateTime00
static int tolua_server_System_getRandDateTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* sStarTime = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* sEndTime = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   char* tolua_ret = (char*)  System::getRandDateTime(sStarTime,sEndTime);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRandDateTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::encodeNumTime */
#ifndef TOLUA_DISABLE_tolua_server_System_encodeNumTime00
static int tolua_server_System_encodeNumTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nYear = ((int)  tolua_tonumber(tolua_S,1,0));
  int nMonth = ((int)  tolua_tonumber(tolua_S,2,0));
  int nDay = ((int)  tolua_tonumber(tolua_S,3,0));
  int nHour = ((int)  tolua_tonumber(tolua_S,4,0));
  int nMin = ((int)  tolua_tonumber(tolua_S,5,0));
  int nSec = ((int)  tolua_tonumber(tolua_S,6,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::encodeNumTime(nYear,nMonth,nDay,nHour,nMin,nSec);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'encodeNumTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::encodeTime */
#ifndef TOLUA_DISABLE_tolua_server_System_encodeTime00
static int tolua_server_System_encodeTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sTime = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::encodeTime(sTime);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'encodeTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::decodeTime */
#ifndef TOLUA_DISABLE_tolua_server_System_decodeTime00
static int tolua_server_System_decodeTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nMiniTime = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nYear = ((int)  tolua_tonumber(tolua_S,2,0));
  int nMonth = ((int)  tolua_tonumber(tolua_S,3,0));
  int nDay = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   System::decodeTime(nMiniTime,nYear,nMonth,nDay);
   tolua_pushnumber(tolua_S,(lua_Number)nYear);
   tolua_pushnumber(tolua_S,(lua_Number)nMonth);
   tolua_pushnumber(tolua_S,(lua_Number)nDay);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'decodeTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getToday */
#ifndef TOLUA_DISABLE_tolua_server_System_getToday00
static int tolua_server_System_getToday00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  System::getToday();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getToday'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getOpenServerToday */
#ifndef TOLUA_DISABLE_tolua_server_System_getOpenServerToday00
static int tolua_server_System_getOpenServerToday00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  System::getOpenServerToday();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpenServerToday'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getOpenServerRelToday */
#ifndef TOLUA_DISABLE_tolua_server_System_getOpenServerRelToday00
static int tolua_server_System_getOpenServerRelToday00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  System::getOpenServerRelToday();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpenServerRelToday'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGlobalNpc */
#ifndef TOLUA_DISABLE_tolua_server_System_getGlobalNpc00
static int tolua_server_System_getGlobalNpc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   void* tolua_ret = (void*)  System::getGlobalNpc();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGlobalNpc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getItemNpc */
#ifndef TOLUA_DISABLE_tolua_server_System_getItemNpc00
static int tolua_server_System_getItemNpc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   void* tolua_ret = (void*)  System::getItemNpc();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemNpc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildName */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildName00
static int tolua_server_System_getGuildName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuidID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  System::getGuildName(nGuidID);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::changeGuildCoin */
#ifndef TOLUA_DISABLE_tolua_server_System_changeGuildCoin00
static int tolua_server_System_changeGuildCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isstring(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuidID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLogId = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* pStr = ((const char*)  tolua_tostring(tolua_S,4,""));
  {
   System::changeGuildCoin(nGuidID,nValue,nLogId,pStr);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeGuildCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildLeader */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildLeader00
static int tolua_server_System_getGuildLeader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  System::getGuildLeader(nGuildID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildLeader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildLeaderId */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildLeaderId00
static int tolua_server_System_getGuildLeaderId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::getGuildLeaderId(nGuildID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildLeaderId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getTomorrow */
#ifndef TOLUA_DISABLE_tolua_server_System_getTomorrow00
static int tolua_server_System_getTomorrow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  System::getTomorrow();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTomorrow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::registerMonsterDeath */
#ifndef TOLUA_DISABLE_tolua_server_System_registerMonsterDeath00
static int tolua_server_System_registerMonsterDeath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nMonsterID = ((int)  tolua_tonumber(tolua_S,1,0));
  bool flag = ((bool) (tolua_toboolean(tolua_S,2,true)!=0));
  {
   System::registerMonsterDeath(nMonsterID,flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerMonsterDeath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::registerMonsterMob */
#ifndef TOLUA_DISABLE_tolua_server_System_registerMonsterMob00
static int tolua_server_System_registerMonsterMob00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nMonsterID = ((int)  tolua_tonumber(tolua_S,1,0));
  bool flag = ((bool) (tolua_toboolean(tolua_S,2,true)!=0));
  {
   System::registerMonsterMob(nMonsterID,flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerMonsterMob'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::registerMonsterLiveTimeOut */
#ifndef TOLUA_DISABLE_tolua_server_System_registerMonsterLiveTimeOut00
static int tolua_server_System_registerMonsterLiveTimeOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nMonsterID = ((int)  tolua_tonumber(tolua_S,1,0));
  bool flag = ((bool) (tolua_toboolean(tolua_S,2,true)!=0));
  {
   System::registerMonsterLiveTimeOut(nMonsterID,flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerMonsterLiveTimeOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setObjectVar */
#ifndef TOLUA_DISABLE_tolua_server_System_setObjectVar00
static int tolua_server_System_setObjectVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CBaseScriptExportObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszKey = ((const char*)  tolua_tostring(tolua_S,1,0));
  CBaseScriptExportObject* object = ((CBaseScriptExportObject*)  tolua_tousertype(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  System::setObjectVar(pszKey,object);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObjectVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getObjectVar */
#ifndef TOLUA_DISABLE_tolua_server_System_getObjectVar00
static int tolua_server_System_getObjectVar00(lua_State* tolua_S)
{
	return System::getObjectVar(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::removeObjectVar */
#ifndef TOLUA_DISABLE_tolua_server_System_removeObjectVar00
static int tolua_server_System_removeObjectVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszKey = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  System::removeObjectVar(pszKey);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setObjectVarPtr */
#ifndef TOLUA_DISABLE_tolua_server_System_setObjectVarPtr00
static int tolua_server_System_setObjectVarPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* sKey = ((const char*)  tolua_tostring(tolua_S,1,0));
  void* ptr = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  System::setObjectVarPtr(sKey,ptr);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObjectVarPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getObjectVarPtr */
#ifndef TOLUA_DISABLE_tolua_server_System_getObjectVarPtr00
static int tolua_server_System_getObjectVarPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* sKey = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  System::getObjectVarPtr(sKey);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectVarPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getDyanmicVar */
#ifndef TOLUA_DISABLE_tolua_server_System_getDyanmicVar00
static int tolua_server_System_getDyanmicVar00(lua_State* tolua_S)
{
	return System::getDyanmicVar(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getStaticVar */
#ifndef TOLUA_DISABLE_tolua_server_System_getStaticVar00
static int tolua_server_System_getStaticVar00(lua_State* tolua_S)
{
	return System::getStaticVar(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::GetActorIdByCsRank */
#ifndef TOLUA_DISABLE_tolua_server_System_GetActorIdByCsRank00
static int tolua_server_System_GetActorIdByCsRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"INT_PTR",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  INT_PTR nRankIndex = *((INT_PTR*)  tolua_tousertype(tolua_S,1,0));
  int nRank = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::GetActorIdByCsRank(nRankIndex,nRank);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActorIdByCsRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::maintainGuildWeekly */
#ifndef TOLUA_DISABLE_tolua_server_System_maintainGuildWeekly00
static int tolua_server_System_maintainGuildWeekly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::maintainGuildWeekly();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'maintainGuildWeekly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::CallmaintainTopTitle */
#ifndef TOLUA_DISABLE_tolua_server_System_CallmaintainTopTitle00
static int tolua_server_System_CallmaintainTopTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::CallmaintainTopTitle();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CallmaintainTopTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getSystemDef */
#ifndef TOLUA_DISABLE_tolua_server_System_getSystemDef00
static int tolua_server_System_getSystemDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* pDefName = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  System::getSystemDef(pDefName);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSystemDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getServerOpenTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getServerOpenTime00
static int tolua_server_System_getServerOpenTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  System::getServerOpenTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getServerOpenTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getServerCombineTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getServerCombineTime00
static int tolua_server_System_getServerCombineTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  System::getServerCombineTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getServerCombineTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getDaysSinceCombineServer */
#ifndef TOLUA_DISABLE_tolua_server_System_getDaysSinceCombineServer00
static int tolua_server_System_getDaysSinceCombineServer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getDaysSinceCombineServer();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDaysSinceCombineServer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::playScrEffect */
#ifndef TOLUA_DISABLE_tolua_server_System_playScrEffect00
static int tolua_server_System_playScrEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nEffId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nSec = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::playScrEffect(nEffId,nSec);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playScrEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::playScrEffectCode */
#ifndef TOLUA_DISABLE_tolua_server_System_playScrEffectCode00
static int tolua_server_System_playScrEffectCode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nEffId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nSec = ((int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   System::playScrEffectCode(nEffId,nSec,x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playScrEffectCode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::playSceneScrEffectCode */
#ifndef TOLUA_DISABLE_tolua_server_System_playSceneScrEffectCode00
static int tolua_server_System_playSceneScrEffectCode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nEffId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nSec = ((int)  tolua_tonumber(tolua_S,2,0));
  int nScendId = ((int)  tolua_tonumber(tolua_S,3,0));
  int x = ((int)  tolua_tonumber(tolua_S,4,0));
  int y = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   System::playSceneScrEffectCode(nEffId,nSec,nScendId,x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'playSceneScrEffectCode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendOfflineMsg */
#ifndef TOLUA_DISABLE_tolua_server_System_sendOfflineMsg00
static int tolua_server_System_sendOfflineMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nActorid = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  char* sMsg = ((char*)  tolua_tostring(tolua_S,2,0));
  int nSrc = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   System::sendOfflineMsg(nActorid,sMsg,nSrc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendOfflineMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setIntBit */
#ifndef TOLUA_DISABLE_tolua_server_System_setIntBit00
static int tolua_server_System_setIntBit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nValue = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nBitPos = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  bool bBit = ((bool) (tolua_toboolean(tolua_S,3,0)!=0));
  {
   int tolua_ret = (int)  System::setIntBit(nValue,nBitPos,bBit);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIntBit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getIntBit */
#ifndef TOLUA_DISABLE_tolua_server_System_getIntBit00
static int tolua_server_System_getIntBit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nValue = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nBitPos = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  System::getIntBit(nValue,nBitPos);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntBit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getValueMAKELONG */
#ifndef TOLUA_DISABLE_tolua_server_System_getValueMAKELONG00
static int tolua_server_System_getValueMAKELONG00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int param1 = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int param2 = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int param3 = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  System::getValueMAKELONG(param1,param2,param3);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getValueMAKELONG'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::refreshStore */
#ifndef TOLUA_DISABLE_tolua_server_System_refreshStore00
static int tolua_server_System_refreshStore00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nLabel = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   System::refreshStore(nLabel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'refreshStore'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getDaysSinceOpenServer */
#ifndef TOLUA_DISABLE_tolua_server_System_getDaysSinceOpenServer00
static int tolua_server_System_getDaysSinceOpenServer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getDaysSinceOpenServer();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDaysSinceOpenServer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::SetShutup */
#ifndef TOLUA_DISABLE_tolua_server_System_SetShutup00
static int tolua_server_System_SetShutup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bForbid = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  int nDuration = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   System::SetShutup(pEntity,bForbid,nDuration);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetShutup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::findGuildIdByHandle */
#ifndef TOLUA_DISABLE_tolua_server_System_findGuildIdByHandle00
static int tolua_server_System_findGuildIdByHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nHandle = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::findGuildIdByHandle(nHandle);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findGuildIdByHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendGuildMsg */
#ifndef TOLUA_DISABLE_tolua_server_System_sendGuildMsg00
static int tolua_server_System_sendGuildMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int guildPos = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* sMsg = ((const char*)  tolua_tostring(tolua_S,3,0));
  int nType = ((int)  tolua_tonumber(tolua_S,4,ttTipmsgWindow));
  {
   System::sendGuildMsg(nGuildId,guildPos,sMsg,nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::changeGuildFr */
#ifndef TOLUA_DISABLE_tolua_server_System_changeGuildFr00
static int tolua_server_System_changeGuildFr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::changeGuildFr(nGuildId,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeGuildFr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getSkillNameById */
#ifndef TOLUA_DISABLE_tolua_server_System_getSkillNameById00
static int tolua_server_System_getSkillNameById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSkillId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  System::getSkillNameById(nSkillId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillNameById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getLocalServerId */
#ifndef TOLUA_DISABLE_tolua_server_System_getLocalServerId00
static int tolua_server_System_getLocalServerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getLocalServerId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLocalServerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getCommonServerId */
#ifndef TOLUA_DISABLE_tolua_server_System_getCommonServerId00
static int tolua_server_System_getCommonServerId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getCommonServerId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCommonServerId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setTeleportVisible */
#ifndef TOLUA_DISABLE_tolua_server_System_setTeleportVisible00
static int tolua_server_System_setTeleportVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isboolean(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool bVisible = ((bool) (tolua_toboolean(tolua_S,1,0)!=0));
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int y = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   System::setTeleportVisible(bVisible,hScene,x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTeleportVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isTeleportVisible */
#ifndef TOLUA_DISABLE_tolua_server_System_isTeleportVisible00
static int tolua_server_System_isTeleportVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  System::isTeleportVisible(hScene,x,y);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTeleportVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::telportRandPos */
#ifndef TOLUA_DISABLE_tolua_server_System_telportRandPos00
static int tolua_server_System_telportRandPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  System::telportRandPos(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'telportRandPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::telportLastSceneRandPos */
#ifndef TOLUA_DISABLE_tolua_server_System_telportLastSceneRandPos00
static int tolua_server_System_telportLastSceneRandPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  System::telportLastSceneRandPos(pEntity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'telportLastSceneRandPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::rfeshConsumeRank */
#ifndef TOLUA_DISABLE_tolua_server_System_rfeshConsumeRank00
static int tolua_server_System_rfeshConsumeRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::rfeshConsumeRank();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rfeshConsumeRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::updateVocNpcStatue */
#ifndef TOLUA_DISABLE_tolua_server_System_updateVocNpcStatue00
static int tolua_server_System_updateVocNpcStatue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nType = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   System::updateVocNpcStatue(nType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateVocNpcStatue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::saveCsRank */
#ifndef TOLUA_DISABLE_tolua_server_System_saveCsRank00
static int tolua_server_System_saveCsRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::saveCsRank();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'saveCsRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::loadCsRank */
#ifndef TOLUA_DISABLE_tolua_server_System_loadCsRank00
static int tolua_server_System_loadCsRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::loadCsRank();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadCsRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getServerIdByCsRank */
#ifndef TOLUA_DISABLE_tolua_server_System_getServerIdByCsRank00
static int tolua_server_System_getServerIdByCsRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getServerIdByCsRank(nActorId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getServerIdByCsRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::loadUserOfflineDataCs */
#ifndef TOLUA_DISABLE_tolua_server_System_loadUserOfflineDataCs00
static int tolua_server_System_loadUserOfflineDataCs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nServerId = ((int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   System::loadUserOfflineDataCs(nServerId,nActorId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadUserOfflineDataCs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setGuildExipredTime */
#ifndef TOLUA_DISABLE_tolua_server_System_setGuildExipredTime00
static int tolua_server_System_setGuildExipredTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setGuildExipredTime(nGuildId,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildExipredTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildDartHandle */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildDartHandle00
static int tolua_server_System_getGuildDartHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   double tolua_ret = (double)  System::getGuildDartHandle(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildDartHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setGuildDartHandle */
#ifndef TOLUA_DISABLE_tolua_server_System_setGuildDartHandle00
static int tolua_server_System_setGuildDartHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setGuildDartHandle(nGuildId,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildDartHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getMonsterNameById */
#ifndef TOLUA_DISABLE_tolua_server_System_getMonsterNameById00
static int tolua_server_System_getMonsterNameById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  System::getMonsterNameById(nMonsterId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterNameById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getMonsterTimeById */
#ifndef TOLUA_DISABLE_tolua_server_System_getMonsterTimeById00
static int tolua_server_System_getMonsterTimeById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bDie = ((bool) (tolua_toboolean(tolua_S,3,false)!=0));
  {
   int tolua_ret = (int)  System::getMonsterTimeById(nSceneId,nMonsterId,bDie);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterTimeById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getMonsterLevel */
#ifndef TOLUA_DISABLE_tolua_server_System_getMonsterLevel00
static int tolua_server_System_getMonsterLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getMonsterLevel(nMonsterId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getToxicFreshTimes */
#ifndef TOLUA_DISABLE_tolua_server_System_getToxicFreshTimes00
static int tolua_server_System_getToxicFreshTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getToxicFreshTimes(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getToxicFreshTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setToxicFreshTimes */
#ifndef TOLUA_DISABLE_tolua_server_System_setToxicFreshTimes00
static int tolua_server_System_setToxicFreshTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setToxicFreshTimes(nGuildId,nTimes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setToxicFreshTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setkillToxicNum */
#ifndef TOLUA_DISABLE_tolua_server_System_setkillToxicNum00
static int tolua_server_System_setkillToxicNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setkillToxicNum(nGuildId,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setkillToxicNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getkillToxicNum */
#ifndef TOLUA_DISABLE_tolua_server_System_getkillToxicNum00
static int tolua_server_System_getkillToxicNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getkillToxicNum(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getkillToxicNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::onSbkMasterOpenBuff */
#ifndef TOLUA_DISABLE_tolua_server_System_onSbkMasterOpenBuff00
static int tolua_server_System_onSbkMasterOpenBuff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isstring(tolua_S,7,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,1,&tolua_err) ||
     !tolua_isuserdata(tolua_S,9,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nBuffType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGroupID = ((int)  tolua_tonumber(tolua_S,3,0));
  double dValue = ((double)  tolua_tonumber(tolua_S,4,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,5,0));
  int nInterval = ((int)  tolua_tonumber(tolua_S,6,0));
  char* buffName = ((char*)  tolua_tostring(tolua_S,7,0));
  bool timeOverlay = ((bool) (tolua_toboolean(tolua_S,8,false)!=0));
  void* pGiver = ((void*)  tolua_touserdata(tolua_S,9,0));
  int param = ((int)  tolua_tonumber(tolua_S,10,0));
  {
   System::onSbkMasterOpenBuff(nGuildId,nBuffType,nGroupID,dValue,nTimes,nInterval,buffName,timeOverlay,pGiver,param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onSbkMasterOpenBuff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::filterWords */
#ifndef TOLUA_DISABLE_tolua_server_System_filterWords00
static int tolua_server_System_filterWords00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sMsg = ((char*)  tolua_tostring(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::filterWords(sMsg);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'filterWords'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendPataMasterMsg */
#ifndef TOLUA_DISABLE_tolua_server_System_sendPataMasterMsg00
static int tolua_server_System_sendPataMasterMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* actorname = ((char*)  tolua_tostring(tolua_S,1,0));
  char* sMsg = ((char*)  tolua_tostring(tolua_S,2,0));
  char* title = ((char*)  tolua_tostring(tolua_S,3,0));
  int bType = ((int)  tolua_tonumber(tolua_S,4,0));
  int nFubenId = ((int)  tolua_tonumber(tolua_S,5,0));
  int nDeadLine = ((int)  tolua_tonumber(tolua_S,6,0));
  {
   bool tolua_ret = (bool)  System::sendPataMasterMsg(actorname,sMsg,title,bType,nFubenId,nDeadLine);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendPataMasterMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::addItemMsgById */
#ifndef TOLUA_DISABLE_tolua_server_System_addItemMsgById00
static int tolua_server_System_addItemMsgById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isstring(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isstring(tolua_S,9,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,10,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,11,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,12,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,13,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nSrcActorId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,4,0));
  int bBind = ((int)  tolua_tonumber(tolua_S,5,0));
  char* sTitle = ((char*)  tolua_tostring(tolua_S,6,0));
  char* sBtn = ((char*)  tolua_tostring(tolua_S,7,0));
  int nWay = ((int)  tolua_tonumber(tolua_S,8,0));
  char* sComment = ((char*)  tolua_tostring(tolua_S,9,""));
  bool needLog = ((bool) (tolua_toboolean(tolua_S,10,true)!=0));
  int nMsgType = ((int)  tolua_tonumber(tolua_S,11,0));
  int nParam = ((int)  tolua_tonumber(tolua_S,12,0));
  {
   bool tolua_ret = (bool)  System::addItemMsgById(nActorId,nSrcActorId,nItemId,nCount,bBind,sTitle,sBtn,nWay,sComment,needLog,nMsgType,nParam);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItemMsgById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::addItemMsgByName */
#ifndef TOLUA_DISABLE_tolua_server_System_addItemMsgByName00
static int tolua_server_System_addItemMsgByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isstring(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* sActorName = ((char*)  tolua_tostring(tolua_S,1,0));
  int nSrcActorId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,4,0));
  int bBind = ((int)  tolua_tonumber(tolua_S,5,0));
  char* sTitle = ((char*)  tolua_tostring(tolua_S,6,0));
  char* sBtn = ((char*)  tolua_tostring(tolua_S,7,0));
  int nWay = ((int)  tolua_tonumber(tolua_S,8,0));
  {
   bool tolua_ret = (bool)  System::addItemMsgByName(sActorName,nSrcActorId,nItemId,nCount,bBind,sTitle,sBtn,nWay);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItemMsgByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getMonsterGrowInfo */
#ifndef TOLUA_DISABLE_tolua_server_System_getMonsterGrowInfo00
static int tolua_server_System_getMonsterGrowInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nMonsterId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nGrowLv = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCurExp = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  System::getMonsterGrowInfo(nMonsterId,nGrowLv,nCurExp);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)nGrowLv);
   tolua_pushnumber(tolua_S,(lua_Number)nCurExp);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMonsterGrowInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendItemOutPutToLog */
#ifndef TOLUA_DISABLE_tolua_server_System_sendItemOutPutToLog00
static int tolua_server_System_sendItemOutPutToLog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::sendItemOutPutToLog();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendItemOutPutToLog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getMerchandisePrice */
#ifndef TOLUA_DISABLE_tolua_server_System_getMerchandisePrice00
static int tolua_server_System_getMerchandisePrice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGoodsId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int btDealGoldType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPrice = ((int)  tolua_tonumber(tolua_S,3,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,4,0));
  int nStrong = ((int)  tolua_tonumber(tolua_S,5,0));
  int nBind = ((int)  tolua_tonumber(tolua_S,6,0));
  {
   int tolua_ret = (int)  System::getMerchandisePrice(nGoodsId,btDealGoldType,nPrice,nQuality,nStrong,nBind);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)btDealGoldType);
   tolua_pushnumber(tolua_S,(lua_Number)nPrice);
   tolua_pushnumber(tolua_S,(lua_Number)nQuality);
   tolua_pushnumber(tolua_S,(lua_Number)nStrong);
   tolua_pushnumber(tolua_S,(lua_Number)nBind);
  }
 }
 return 6;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMerchandisePrice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isStartCommonServer */
#ifndef TOLUA_DISABLE_tolua_server_System_isStartCommonServer00
static int tolua_server_System_isStartCommonServer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   bool tolua_ret = (bool)  System::isStartCommonServer();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isStartCommonServer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isCommonServer */
#ifndef TOLUA_DISABLE_tolua_server_System_isCommonServer00
static int tolua_server_System_isCommonServer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   bool tolua_ret = (bool)  System::isCommonServer();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCommonServer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getPlayerMaxLevel */
#ifndef TOLUA_DISABLE_tolua_server_System_getPlayerMaxLevel00
static int tolua_server_System_getPlayerMaxLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nCircle = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::getPlayerMaxLevel(nCircle);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerMaxLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::saveFiles */
#ifndef TOLUA_DISABLE_tolua_server_System_saveFiles00
static int tolua_server_System_saveFiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::saveFiles();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'saveFiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getRealtimeMiniTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getRealtimeMiniTime00
static int tolua_server_System_getRealtimeMiniTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  System::getRealtimeMiniTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRealtimeMiniTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendCommonMsgByName */
#ifndef TOLUA_DISABLE_tolua_server_System_sendCommonMsgByName00
static int tolua_server_System_sendCommonMsgByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,1,&tolua_err) ||
     !tolua_isstring(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nMsgId = ((int)  tolua_tonumber(tolua_S,1,0));
  char* sName = ((char*)  tolua_tostring(tolua_S,2,0));
  char* sMsg = ((char*)  tolua_tostring(tolua_S,3,0));
  int nSrcActorId = ((int)  tolua_tonumber(tolua_S,4,0));
  char* sParam1 = ((char*)  tolua_tostring(tolua_S,5,NULL));
  char* sParam2 = ((char*)  tolua_tostring(tolua_S,6,NULL));
  int nParam = ((int)  tolua_tonumber(tolua_S,7,0));
  int nParam2 = ((int)  tolua_tonumber(tolua_S,8,0));
  {
   bool tolua_ret = (bool)  System::sendCommonMsgByName(nMsgId,sName,sMsg,nSrcActorId,sParam1,sParam2,nParam,nParam2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendCommonMsgByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getchangeNameFlag */
#ifndef TOLUA_DISABLE_tolua_server_System_getchangeNameFlag00
static int tolua_server_System_getchangeNameFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   bool tolua_ret = (bool)  System::getchangeNameFlag();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getchangeNameFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendGuildListToDestServer */
#ifndef TOLUA_DISABLE_tolua_server_System_sendGuildListToDestServer00
static int tolua_server_System_sendGuildListToDestServer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::sendGuildListToDestServer();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildListToDestServer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildChallengeTimes */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildChallengeTimes00
static int tolua_server_System_getGuildChallengeTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getGuildChallengeTimes(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildChallengeTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setGuildChallengeTimes */
#ifndef TOLUA_DISABLE_tolua_server_System_setGuildChallengeTimes00
static int tolua_server_System_setGuildChallengeTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTimes = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setGuildChallengeTimes(nGuildId,nTimes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildChallengeTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setGuildNextChallengeTime */
#ifndef TOLUA_DISABLE_tolua_server_System_setGuildNextChallengeTime00
static int tolua_server_System_setGuildNextChallengeTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setGuildNextChallengeTime(nGuildId,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildNextChallengeTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildNextChallengeTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildNextChallengeTime00
static int tolua_server_System_getGuildNextChallengeTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getGuildNextChallengeTime(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildNextChallengeTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setGuildBossLevel */
#ifndef TOLUA_DISABLE_tolua_server_System_setGuildBossLevel00
static int tolua_server_System_setGuildBossLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setGuildBossLevel(nGuildId,nLevel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildBossLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildBossLevel */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildBossLevel00
static int tolua_server_System_getGuildBossLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getGuildBossLevel(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildBossLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setBossChanllengeHandle */
#ifndef TOLUA_DISABLE_tolua_server_System_setBossChanllengeHandle00
static int tolua_server_System_setBossChanllengeHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int bHandle = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setBossChanllengeHandle(nGuildId,bHandle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBossChanllengeHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::geBossChanllengeHandle */
#ifndef TOLUA_DISABLE_tolua_server_System_geBossChanllengeHandle00
static int tolua_server_System_geBossChanllengeHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::geBossChanllengeHandle(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'geBossChanllengeHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildbuildingLev */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildbuildingLev00
static int tolua_server_System_getGuildbuildingLev00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  System::getGuildbuildingLev(nGuildId,nType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildbuildingLev'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::changeGuildBuildingLev */
#ifndef TOLUA_DISABLE_tolua_server_System_changeGuildBuildingLev00
static int tolua_server_System_changeGuildBuildingLev00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   System::changeGuildBuildingLev(nGuildId,nType,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeGuildBuildingLev'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getGuildBuildingCdTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getGuildBuildingCdTime00
static int tolua_server_System_getGuildBuildingCdTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getGuildBuildingCdTime(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildBuildingCdTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setGuildBuildingCdTime */
#ifndef TOLUA_DISABLE_tolua_server_System_setGuildBuildingCdTime00
static int tolua_server_System_setGuildBuildingCdTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setGuildBuildingCdTime(nGuildId,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildBuildingCdTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendGuildChanllengeResult */
#ifndef TOLUA_DISABLE_tolua_server_System_sendGuildChanllengeResult00
static int tolua_server_System_sendGuildChanllengeResult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nType = ((int)  tolua_tonumber(tolua_S,3,0));
  int nResult = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   System::sendGuildChanllengeResult(nGuildId,nActorId,nType,nResult);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildChanllengeResult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendGuildSBKRank */
#ifndef TOLUA_DISABLE_tolua_server_System_sendGuildSBKRank00
static int tolua_server_System_sendGuildSBKRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nRankId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::sendGuildSBKRank(nGuildId,nRankId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildSBKRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendSBKGuild */
#ifndef TOLUA_DISABLE_tolua_server_System_sendSBKGuild00
static int tolua_server_System_sendSBKGuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::sendSBKGuild();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendSBKGuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getNpcName */
#ifndef TOLUA_DISABLE_tolua_server_System_getNpcName00
static int tolua_server_System_getNpcName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nNpcId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  System::getNpcName(nNpcId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNpcName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setNpcTitle */
#ifndef TOLUA_DISABLE_tolua_server_System_setNpcTitle00
static int tolua_server_System_setNpcTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int hScene = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nNpcId = ((int)  tolua_tonumber(tolua_S,2,0));
  char* sTitle = ((char*)  tolua_tostring(tolua_S,3,0));
  {
   System::setNpcTitle(hScene,nNpcId,sTitle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNpcTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getEntityHandle */
#ifndef TOLUA_DISABLE_tolua_server_System_getEntityHandle00
static int tolua_server_System_getEntityHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned long long tolua_ret = (unsigned long long)  System::getEntityHandle(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntityHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setFireValRate */
#ifndef TOLUA_DISABLE_tolua_server_System_setFireValRate00
static int tolua_server_System_setFireValRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float fVal = ((float)  tolua_tonumber(tolua_S,1,0));
  {
   System::setFireValRate(fVal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFireValRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::delServerMail */
#ifndef TOLUA_DISABLE_tolua_server_System_delServerMail00
static int tolua_server_System_delServerMail00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nServerMailId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   System::delServerMail(nServerMailId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delServerMail'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendSysMail */
#ifndef TOLUA_DISABLE_tolua_server_System_sendSysMail00
static int tolua_server_System_sendSysMail00(lua_State* tolua_S)
{
	return System::sendSysMail(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendSysDropMail */
#ifndef TOLUA_DISABLE_tolua_server_System_sendSysDropMail00
static int tolua_server_System_sendSysDropMail00(lua_State* tolua_S)
{
	return System::sendSysDropMail(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getMailAttachValue */
#ifndef TOLUA_DISABLE_tolua_server_System_getMailAttachValue00
static int tolua_server_System_getMailAttachValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  int nTableIndex = ((int)  tolua_tonumber(tolua_S,1,0));
  const char* sKey = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   int tolua_ret = (int)  System::getMailAttachValue(L,nTableIndex,sKey);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMailAttachValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getBossLastKillTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getBossLastKillTime00
static int tolua_server_System_getBossLastKillTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nBossId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::getBossLastKillTime(nBossId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBossLastKillTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isActivityRunning */
#ifndef TOLUA_DISABLE_tolua_server_System_isActivityRunning00
static int tolua_server_System_isActivityRunning00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nAtvId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  System::isActivityRunning(nAtvId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isActivityRunning'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::closeActivityRunning */
#ifndef TOLUA_DISABLE_tolua_server_System_closeActivityRunning00
static int tolua_server_System_closeActivityRunning00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nAtvId = ((int)  tolua_tonumber(tolua_S,1,0));
  bool nNextTime = ((bool) (tolua_toboolean(tolua_S,2,false)!=0));
  {
   System::closeActivityRunning(nAtvId,nNextTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeActivityRunning'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::isReachSecondBeforeActivityEnd */
#ifndef TOLUA_DISABLE_tolua_server_System_isReachSecondBeforeActivityEnd00
static int tolua_server_System_isReachSecondBeforeActivityEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int activity_id = ((int)  tolua_tonumber(tolua_S,1,0));
  int second_before_end = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  System::isReachSecondBeforeActivityEnd(activity_id,second_before_end);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isReachSecondBeforeActivityEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getActivityEndMiniSecond */
#ifndef TOLUA_DISABLE_tolua_server_System_getActivityEndMiniSecond00
static int tolua_server_System_getActivityEndMiniSecond00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int activity_id = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  System::getActivityEndMiniSecond(activity_id);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActivityEndMiniSecond'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendAllActorOneActivityData */
#ifndef TOLUA_DISABLE_tolua_server_System_sendAllActorOneActivityData00
static int tolua_server_System_sendAllActorOneActivityData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nAtvId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   System::sendAllActorOneActivityData(nAtvId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendAllActorOneActivityData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getPActivityOpenDay */
#ifndef TOLUA_DISABLE_tolua_server_System_getPActivityOpenDay00
static int tolua_server_System_getPActivityOpenDay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nAtvId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getPActivityOpenDay(nAtvId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPActivityOpenDay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::CheckGPActivityStartEnd */
#ifndef TOLUA_DISABLE_tolua_server_System_CheckGPActivityStartEnd00
static int tolua_server_System_CheckGPActivityStartEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int atvId = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int ScriptEndTime = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   System::CheckGPActivityStartEnd(pEntity,atvId,ScriptEndTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CheckGPActivityStartEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::SendChatMsg */
#ifndef TOLUA_DISABLE_tolua_server_System_SendChatMsg00
static int tolua_server_System_SendChatMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  char* msg = ((char*)  tolua_tostring(tolua_S,1,0));
  int nChatchannelId = ((int)  tolua_tonumber(tolua_S,2,0));
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,3,NULL));
  int nitemId = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   System::SendChatMsg(msg,nChatchannelId,pEntity,nitemId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendChatMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getRunningActivityId */
#ifndef TOLUA_DISABLE_tolua_server_System_getRunningActivityId00
static int tolua_server_System_getRunningActivityId00(lua_State* tolua_S)
{
	return System::getRunningActivityId(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getRunningActivityStartTime */
#ifndef TOLUA_DISABLE_tolua_server_System_getRunningActivityStartTime00
static int tolua_server_System_getRunningActivityStartTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nAtvId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getRunningActivityStartTime(nAtvId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRunningActivityStartTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getRunningActivityStartTimeRelToday */
#ifndef TOLUA_DISABLE_tolua_server_System_getRunningActivityStartTimeRelToday00
static int tolua_server_System_getRunningActivityStartTimeRelToday00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nAtvId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  System::getRunningActivityStartTimeRelToday(nAtvId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRunningActivityStartTimeRelToday'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::addAsyncWorker */
#ifndef TOLUA_DISABLE_tolua_server_System_addAsyncWorker00
static int tolua_server_System_addAsyncWorker00(lua_State* tolua_S)
{
	return System::addAsyncWorker(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::CrossBattlefieldSignup */
#ifndef TOLUA_DISABLE_tolua_server_System_CrossBattlefieldSignup00
static int tolua_server_System_CrossBattlefieldSignup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* sysarg = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bAdd = ((bool) (tolua_toboolean(tolua_S,2,0)!=0));
  {
   System::CrossBattlefieldSignup(sysarg,bAdd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CrossBattlefieldSignup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::GetCurrentCrossBattlefieldPlayerNum */
#ifndef TOLUA_DISABLE_tolua_server_System_GetCurrentCrossBattlefieldPlayerNum00
static int tolua_server_System_GetCurrentCrossBattlefieldPlayerNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::GetCurrentCrossBattlefieldPlayerNum();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurrentCrossBattlefieldPlayerNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::HadCrossBattlefieldSignup */
#ifndef TOLUA_DISABLE_tolua_server_System_HadCrossBattlefieldSignup00
static int tolua_server_System_HadCrossBattlefieldSignup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* sysarg = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  System::HadCrossBattlefieldSignup(sysarg);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HadCrossBattlefieldSignup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::initCrossBattlefieldData */
#ifndef TOLUA_DISABLE_tolua_server_System_initCrossBattlefieldData00
static int tolua_server_System_initCrossBattlefieldData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nTriggerNewActivity = ((int)  tolua_tonumber(tolua_S,1,0));
  int nNewActivityPlayers = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::initCrossBattlefieldData(nTriggerNewActivity,nNewActivityPlayers);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initCrossBattlefieldData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setSysRateExp */
#ifndef TOLUA_DISABLE_tolua_server_System_setSysRateExp00
static int tolua_server_System_setSysRateExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nRate = ((int)  tolua_tonumber(tolua_S,1,0));
  int nTime = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   System::setSysRateExp(nRate,nTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSysRateExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getSceneCenterPos */
#ifndef TOLUA_DISABLE_tolua_server_System_getSceneCenterPos00
static int tolua_server_System_getSceneCenterPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nPosX = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPosY = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  System::getSceneCenterPos(nSceneId,nPosX,nPosY);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)nPosX);
   tolua_pushnumber(tolua_S,(lua_Number)nPosY);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneCenterPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::createDropItems */
#ifndef TOLUA_DISABLE_tolua_server_System_createDropItems00
static int tolua_server_System_createDropItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nWardType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,4,0));
  int nBind = ((int)  tolua_tonumber(tolua_S,5,1));
  {
   bool tolua_ret = (bool)  System::createDropItems(pEntity,nWardType,nItemId,nCount,nBind);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createDropItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::createDropMoney */
#ifndef TOLUA_DISABLE_tolua_server_System_createDropMoney00
static int tolua_server_System_createDropMoney00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nWardType = ((int)  tolua_tonumber(tolua_S,2,0));
  int nMoneyType = ((int)  tolua_tonumber(tolua_S,3,0));
  int nDropCount = ((int)  tolua_tonumber(tolua_S,4,0));
  int nBind = ((int)  tolua_tonumber(tolua_S,5,1));
  {
   bool tolua_ret = (bool)  System::createDropMoney(pEntity,nWardType,nMoneyType,nDropCount,nBind);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createDropMoney'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendWorldLevel */
#ifndef TOLUA_DISABLE_tolua_server_System_sendWorldLevel00
static int tolua_server_System_sendWorldLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   System::sendWorldLevel(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendWorldLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getWorldLevel */
#ifndef TOLUA_DISABLE_tolua_server_System_getWorldLevel00
static int tolua_server_System_getWorldLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getWorldLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWorldLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::setQuickBuffId */
#ifndef TOLUA_DISABLE_tolua_server_System_setQuickBuffId00
static int tolua_server_System_setQuickBuffId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nBuffId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   System::setQuickBuffId(nBuffId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setQuickBuffId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::NewRedPacketId */
#ifndef TOLUA_DISABLE_tolua_server_System_NewRedPacketId00
static int tolua_server_System_NewRedPacketId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::NewRedPacketId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'NewRedPacketId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::miniDateTime2String */
#ifndef TOLUA_DISABLE_tolua_server_System_miniDateTime2String00
static int tolua_server_System_miniDateTime2String00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int tv = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  System::miniDateTime2String(tv);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'miniDateTime2String'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::SendConsumeLog */
#ifndef TOLUA_DISABLE_tolua_server_System_SendConsumeLog00
static int tolua_server_System_SendConsumeLog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::SendConsumeLog();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendConsumeLog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::RefeshWorldLevel */
#ifndef TOLUA_DISABLE_tolua_server_System_RefeshWorldLevel00
static int tolua_server_System_RefeshWorldLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::RefeshWorldLevel();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RefeshWorldLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::reloadItem */
#ifndef TOLUA_DISABLE_tolua_server_System_reloadItem00
static int tolua_server_System_reloadItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::reloadItem();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::reloadLang */
#ifndef TOLUA_DISABLE_tolua_server_System_reloadLang00
static int tolua_server_System_reloadLang00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::reloadLang();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadLang'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::reloadMonster */
#ifndef TOLUA_DISABLE_tolua_server_System_reloadMonster00
static int tolua_server_System_reloadMonster00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::reloadMonster();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadMonster'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::reloadVSPDef */
#ifndef TOLUA_DISABLE_tolua_server_System_reloadVSPDef00
static int tolua_server_System_reloadVSPDef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::reloadVSPDef();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadVSPDef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::reloadFw */
#ifndef TOLUA_DISABLE_tolua_server_System_reloadFw00
static int tolua_server_System_reloadFw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::reloadFw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadFw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::reloadConfig */
#ifndef TOLUA_DISABLE_tolua_server_System_reloadConfig00
static int tolua_server_System_reloadConfig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   System::reloadConfig(nId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadConfig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getSpid */
#ifndef TOLUA_DISABLE_tolua_server_System_getSpid00
static int tolua_server_System_getSpid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  System::getSpid();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::getStrSpid */
#ifndef TOLUA_DISABLE_tolua_server_System_getStrSpid00
static int tolua_server_System_getStrSpid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   const char* tolua_ret = (const char*)  System::getStrSpid();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStrSpid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::MD5 */
#ifndef TOLUA_DISABLE_tolua_server_System_MD500
static int tolua_server_System_MD500(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  lua_State* L =  tolua_S;
  {
   const char* tolua_ret = (const char*)  System::MD5(L);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MD5'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::sendCrossServerMail */
#ifndef TOLUA_DISABLE_tolua_server_System_sendCrossServerMail00
static int tolua_server_System_sendCrossServerMail00(lua_State* tolua_S)
{
	return System::sendCrossServerMail(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: System::KickAllCrossServerActor */
#ifndef TOLUA_DISABLE_tolua_server_System_KickAllCrossServerActor00
static int tolua_server_System_KickAllCrossServerActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   System::KickAllCrossServerActor();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KickAllCrossServerActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::setItemProperty */
#ifndef TOLUA_DISABLE_tolua_server_Item_setItemProperty00
static int tolua_server_Item_setItemProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nPropertyID = ((int)  tolua_tonumber(tolua_S,3,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  Item::setItemProperty(pEntity,pUserItem,nPropertyID,nValue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItemProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemProperty */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemProperty00
static int tolua_server_Item_getItemProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int propID = ((int)  tolua_tonumber(tolua_S,3,0));
  int nAuxRetValue = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   int tolua_ret = (int)  Item::getItemProperty(pEntity,pItem,propID,nAuxRetValue);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)nAuxRetValue);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemPropertyById */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemPropertyById00
static int tolua_server_Item_getItemPropertyById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemID = ((int)  tolua_tonumber(tolua_S,1,0));
  int nPropID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Item::getItemPropertyById(nItemID,nPropID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemPropertyById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemGuid */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemGuid00
static int tolua_server_Item_getItemGuid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   double tolua_ret = (double)  Item::getItemGuid(pItem);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemGuid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemId */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemId00
static int tolua_server_Item_getItemId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Item::getItemId(pItem);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemGuidStr */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemGuidStr00
static int tolua_server_Item_getItemGuidStr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  Item::getItemGuidStr(pItem);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemGuidStr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::sendItemProcessResult */
#ifndef TOLUA_DISABLE_tolua_server_Item_sendItemProcessResult00
static int tolua_server_Item_sendItemProcessResult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nProceccType = ((int)  tolua_tonumber(tolua_S,3,0));
  bool bResult = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  bool bAutoOperate = ((bool) (tolua_toboolean(tolua_S,5,false)!=0));
  {
   Item::sendItemProcessResult(pEntity,pUserItem,nProceccType,bResult,bAutoOperate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendItemProcessResult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::sendItemProcessConsume */
#ifndef TOLUA_DISABLE_tolua_server_Item_sendItemProcessConsume00
static int tolua_server_Item_sendItemProcessConsume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nProcessType = ((int)  tolua_tonumber(tolua_S,3,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,4,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,5,0));
  int nMoneyType = ((int)  tolua_tonumber(tolua_S,6,0));
  int nMoneyCount = ((int)  tolua_tonumber(tolua_S,7,0));
  int nProtectItemID = ((int)  tolua_tonumber(tolua_S,8,0));
  int nProtectCount = ((int)  tolua_tonumber(tolua_S,9,0));
  {
   Item::sendItemProcessConsume(pEntity,pUserItem,nProcessType,nItemID,nCount,nMoneyType,nMoneyCount,nProtectItemID,nProtectCount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendItemProcessConsume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::createItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_createItem00
static int tolua_server_Item_createItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemID = ((int)  tolua_tonumber(tolua_S,1,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,2,1));
  int nStar = ((int)  tolua_tonumber(tolua_S,3,0));
  int nLostStar = ((int)  tolua_tonumber(tolua_S,4,0));
  int nInscriptLevel = ((int)  tolua_tonumber(tolua_S,5,0));
  int nAreaId = ((int)  tolua_tonumber(tolua_S,6,0));
  int nBind = ((int)  tolua_tonumber(tolua_S,7,0));
  int ntime = ((int)  tolua_tonumber(tolua_S,8,0));
  {
   void* tolua_ret = (void*)  Item::createItem(nItemID,nCount,nStar,nLostStar,nInscriptLevel,nAreaId,nBind,ntime);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::removeItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_removeItem00
static int tolua_server_Item_removeItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,0));
  char* sComment = ((char*)  tolua_tostring(tolua_S,4,0));
  int nLogID = ((int)  tolua_tonumber(tolua_S,5,0));
  bool bNeedFreeMemory = ((bool) (tolua_toboolean(tolua_S,6,true)!=0));
  {
   int tolua_ret = (int)  Item::removeItem(pEntity,pItem,nCount,sComment,nLogID,bNeedFreeMemory);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::removeItemDura */
#ifndef TOLUA_DISABLE_tolua_server_Item_removeItemDura00
static int tolua_server_Item_removeItemDura00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isstring(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,1));
  char* sComment = ((char*)  tolua_tostring(tolua_S,4,"Script"));
  int nLogID = ((int)  tolua_tonumber(tolua_S,5,164));
  bool bNeedFreeMemory = ((bool) (tolua_toboolean(tolua_S,6,true)!=0));
  {
   int tolua_ret = (int)  Item::removeItemDura(pEntity,pItem,nCount,sComment,nLogID,bNeedFreeMemory);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeItemDura'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::removeOtherItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_removeOtherItem00
static int tolua_server_Item_removeOtherItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,0));
  char* sComment = ((char*)  tolua_tostring(tolua_S,4,0));
  int nLogID = ((int)  tolua_tonumber(tolua_S,5,0));
  bool bNeedFreeMemory = ((bool) (tolua_toboolean(tolua_S,6,true)!=0));
  bool bReqSB = ((bool) (tolua_toboolean(tolua_S,7,false)!=0));
  {
   int tolua_ret = (int)  Item::removeOtherItem(pEntity,pItem,nCount,sComment,nLogID,bNeedFreeMemory,bReqSB);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeOtherItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::removeItemByType */
#ifndef TOLUA_DISABLE_tolua_server_Item_removeItemByType00
static int tolua_server_Item_removeItemByType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bIncEquipBar = ((bool) (tolua_toboolean(tolua_S,3,0)!=0));
  char* sComment = ((char*)  tolua_tostring(tolua_S,4,0));
  int nLogID = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   int tolua_ret = (int)  Item::removeItemByType(pEntity,nType,bIncEquipBar,sComment,nLogID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeItemByType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::removeEquip */
#ifndef TOLUA_DISABLE_tolua_server_Item_removeEquip00
static int tolua_server_Item_removeEquip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  const char* sComment = ((const char*)  tolua_tostring(tolua_S,3,0));
  int nLogId = ((int)  tolua_tonumber(tolua_S,4,0));
  bool bIncHero = ((bool) (tolua_toboolean(tolua_S,5,false)!=0));
  {
   int tolua_ret = (int)  Item::removeEquip(pEntity,pItem,sComment,nLogId,bIncHero);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeEquip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemByType */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemByType00
static int tolua_server_Item_getItemByType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bIncEquipBar = ((bool) (tolua_toboolean(tolua_S,3,0)!=0));
  bool bInEquipBar = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  {
   void* tolua_ret = (void*)  Item::getItemByType(pEntity,nType,bIncEquipBar,bInEquipBar);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
   tolua_pushboolean(tolua_S,(bool)bInEquipBar);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemByType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::addItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_addItem00
static int tolua_server_Item_addItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  char* comment = ((char*)  tolua_tostring(tolua_S,3,0));
  int nLogWay = ((int)  tolua_tonumber(tolua_S,4,0));
  int nItemCount = ((int)  tolua_tonumber(tolua_S,5,-1));
  int bNotice = ((int)  tolua_tonumber(tolua_S,6,1));
  {
   int tolua_ret = (int)  Item::addItem(pEntity,pItem,comment,nLogWay,nItemCount,bNotice);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemLinkMsg */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemLinkMsg00
static int tolua_server_Item_getItemLinkMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemID = ((int)  tolua_tonumber(tolua_S,1,0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,2,NULL));
  {
   const char* tolua_ret = (const char*)  Item::getItemLinkMsg(nItemID,pUserItem);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemLinkMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getAwardDesc */
#ifndef TOLUA_DISABLE_tolua_server_Item_getAwardDesc00
static int tolua_server_Item_getAwardDesc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isuserdata(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nAwardType = ((int)  tolua_tonumber(tolua_S,1,0));
  int nAwardId = ((int)  tolua_tonumber(tolua_S,2,0));
  bool useChatLink = ((bool) (tolua_toboolean(tolua_S,3,false)!=0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,4,NULL));
  {
   const char* tolua_ret = (const char*)  Item::getAwardDesc(nAwardType,nAwardId,useChatLink,pUserItem);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAwardDesc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getEquipCount */
#ifndef TOLUA_DISABLE_tolua_server_Item_getEquipCount00
static int tolua_server_Item_getEquipCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Item::getEquipCount(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEquipCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getEquipBySortID */
#ifndef TOLUA_DISABLE_tolua_server_Item_getEquipBySortID00
static int tolua_server_Item_getEquipBySortID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSortID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getEquipBySortID(pEntity,nSortID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEquipBySortID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getBagItemCount */
#ifndef TOLUA_DISABLE_tolua_server_Item_getBagItemCount00
static int tolua_server_Item_getBagItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Item::getBagItemCount(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBagItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getBagItemBySortID */
#ifndef TOLUA_DISABLE_tolua_server_Item_getBagItemBySortID00
static int tolua_server_Item_getBagItemBySortID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSortID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getBagItemBySortID(pEntity,nSortID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBagItemBySortID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getBagItemPtrByGuid */
#ifndef TOLUA_DISABLE_tolua_server_Item_getBagItemPtrByGuid00
static int tolua_server_Item_getBagItemPtrByGuid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double lItemGuid = ((double)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getBagItemPtrByGuid(pEntity,lItemGuid);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBagItemPtrByGuid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getBagItemPtrById */
#ifndef TOLUA_DISABLE_tolua_server_Item_getBagItemPtrById00
static int tolua_server_Item_getBagItemPtrById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int lItemId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,3,0));
  int nStrong = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   void* tolua_ret = (void*)  Item::getBagItemPtrById(pEntity,lItemId,nQuality,nStrong);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBagItemPtrById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getEquipPtrByGuid */
#ifndef TOLUA_DISABLE_tolua_server_Item_getEquipPtrByGuid00
static int tolua_server_Item_getEquipPtrByGuid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double lItemGuid = ((double)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getEquipPtrByGuid(pEntity,lItemGuid);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEquipPtrByGuid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getEquipItemPtr */
#ifndef TOLUA_DISABLE_tolua_server_Item_getEquipItemPtr00
static int tolua_server_Item_getEquipItemPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double lItemGuid = ((double)  tolua_tonumber(tolua_S,2,0));
  int nItemPos = ((int)  tolua_tonumber(tolua_S,3,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,4,0));
  int nEntityId = ((int)  tolua_tonumber(tolua_S,5,-1));
  {
   void* tolua_ret = (void*)  Item::getEquipItemPtr(pEntity,lItemGuid,nItemPos,nHeroId,nEntityId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)nItemPos);
   tolua_pushnumber(tolua_S,(lua_Number)nHeroId);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEquipItemPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getEquipByType */
#ifndef TOLUA_DISABLE_tolua_server_Item_getEquipByType00
static int tolua_server_Item_getEquipByType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getEquipByType(pEntity,nType);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEquipByType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::releaseItemPtr */
#ifndef TOLUA_DISABLE_tolua_server_Item_releaseItemPtr00
static int tolua_server_Item_releaseItemPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Item::releaseItemPtr(pItem);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'releaseItemPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getBagEmptyGridCount */
#ifndef TOLUA_DISABLE_tolua_server_Item_getBagEmptyGridCount00
static int tolua_server_Item_getBagEmptyGridCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int type = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Item::getBagEmptyGridCount(pEntity,type);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBagEmptyGridCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getAllBagMinEmptyGridCount */
#ifndef TOLUA_DISABLE_tolua_server_Item_getAllBagMinEmptyGridCount00
static int tolua_server_Item_getAllBagMinEmptyGridCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Item::getAllBagMinEmptyGridCount(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAllBagMinEmptyGridCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::bagIsEnough */
#ifndef TOLUA_DISABLE_tolua_server_Item_bagIsEnough00
static int tolua_server_Item_bagIsEnough00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Item::bagIsEnough(pEntity,nType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bagIsEnough'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getAddItemNeedGridCount */
#ifndef TOLUA_DISABLE_tolua_server_Item_getAddItemNeedGridCount00
static int tolua_server_Item_getAddItemNeedGridCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemCount = ((int)  tolua_tonumber(tolua_S,3,0));
  int nQuality = ((int)  tolua_tonumber(tolua_S,4,0));
  int nStrong = ((int)  tolua_tonumber(tolua_S,5,0));
  int nBind = ((int)  tolua_tonumber(tolua_S,6,-1));
  int nParam = ((int)  tolua_tonumber(tolua_S,7,0));
  {
   int tolua_ret = (int)  Item::getAddItemNeedGridCount(pEntity,nItemID,nItemCount,nQuality,nStrong,nBind,nParam);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAddItemNeedGridCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemStaticAttrById */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemStaticAttrById00
static int tolua_server_Item_getItemStaticAttrById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nAttrType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Item::getItemStaticAttrById(nItemId,nAttrType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemStaticAttrById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemName */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemName00
static int tolua_server_Item_getItemName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  Item::getItemName(nItemId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemPackageTyp */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemPackageTyp00
static int tolua_server_Item_getItemPackageTyp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Item::getItemPackageTyp(nItemId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemPackageTyp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::addSellItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_addSellItem00
static int tolua_server_Item_addSellItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* itemPtr = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nItemCount = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Item::addSellItem(pEntity,itemPtr,nItemCount);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSellItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::delSellItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_delSellItem00
static int tolua_server_Item_delSellItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Item::delSellItem(pEntity,pItem);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delSellItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getSellItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_getSellItem00
static int tolua_server_Item_getSellItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  double lItemGuid = ((double)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getSellItem(pEntity,lItemGuid);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSellItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::isForgeItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_isForgeItem00
static int tolua_server_Item_isForgeItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* itemPtr = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Item::isForgeItem(itemPtr);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isForgeItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::isStrongLevel */
#ifndef TOLUA_DISABLE_tolua_server_Item_isStrongLevel00
static int tolua_server_Item_isStrongLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Item::isStrongLevel(pEntity,nLevel);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isStrongLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getDuraFullItemFromBag */
#ifndef TOLUA_DISABLE_tolua_server_Item_getDuraFullItemFromBag00
static int tolua_server_Item_getDuraFullItemFromBag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nItemId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getDuraFullItemFromBag(pEntity,nItemId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDuraFullItemFromBag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getSuitIdByItemId */
#ifndef TOLUA_DISABLE_tolua_server_Item_getSuitIdByItemId00
static int tolua_server_Item_getSuitIdByItemId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Item::getSuitIdByItemId(nItemId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSuitIdByItemId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::isGetAllSuitEquip */
#ifndef TOLUA_DISABLE_tolua_server_Item_isGetAllSuitEquip00
static int tolua_server_Item_isGetAllSuitEquip00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSuit = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCount = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Item::isGetAllSuitEquip(pEntity,nSuit,nCount);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isGetAllSuitEquip'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::equipItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_equipItem00
static int tolua_server_Item_equipItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,3,0));
  bool isBagEquip = ((bool) (tolua_toboolean(tolua_S,4,true)!=0));
  {
   bool tolua_ret = (bool)  Item::equipItem(pEntity,pUserItem,nHeroId,isBagEquip);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'equipItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::takeOffItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_takeOffItem00
static int tolua_server_Item_takeOffItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pUserItem = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,3,0));
  bool checkGrid = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  {
   bool tolua_ret = (bool)  Item::takeOffItem(pEntity,pUserItem,nHeroId,checkGrid);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'takeOffItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::clearBag */
#ifndef TOLUA_DISABLE_tolua_server_Item_clearBag00
static int tolua_server_Item_clearBag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Item::clearBag(pEntity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearBag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getBagItemIndex */
#ifndef TOLUA_DISABLE_tolua_server_Item_getBagItemIndex00
static int tolua_server_Item_getBagItemIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* itemPtr = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   int tolua_ret = (int)  Item::getBagItemIndex(pEntity,itemPtr);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBagItemIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemPtrByIndex */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemPtrByIndex00
static int tolua_server_Item_getItemPtrByIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getItemPtrByIndex(pEntity,nIndex);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemPtrByIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::isGuildMeltingItem */
#ifndef TOLUA_DISABLE_tolua_server_Item_isGuildMeltingItem00
static int tolua_server_Item_isGuildMeltingItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Item::isGuildMeltingItem(pItem);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isGuildMeltingItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::drop_item_in_random_area_byGroupID */
#ifndef TOLUA_DISABLE_tolua_server_Item_drop_item_in_random_area_byGroupID00
static int tolua_server_Item_drop_item_in_random_area_byGroupID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int sceneId = ((int)  tolua_tonumber(tolua_S,1,0));
  int nPosX = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPosY = ((int)  tolua_tonumber(tolua_S,3,0));
  int dropGroupId = ((int)  tolua_tonumber(tolua_S,4,0));
  int pick_time = ((int)  tolua_tonumber(tolua_S,5,120));
  int nDropTips = ((int)  tolua_tonumber(tolua_S,6,0));
  {
   bool tolua_ret = (bool)  Item::drop_item_in_random_area_byGroupID(sceneId,nPosX,nPosY,dropGroupId,pick_time,nDropTips);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop_item_in_random_area_byGroupID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::isEquipment */
#ifndef TOLUA_DISABLE_tolua_server_Item_isEquipment00
static int tolua_server_Item_isEquipment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pItemPtr = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Item::isEquipment(pItemPtr);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEquipment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::isEquipmentById */
#ifndef TOLUA_DISABLE_tolua_server_Item_isEquipmentById00
static int tolua_server_Item_isEquipmentById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nItemId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Item::isEquipmentById(nItemId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEquipmentById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::getItemPtrHighestStar */
#ifndef TOLUA_DISABLE_tolua_server_Item_getItemPtrHighestStar00
static int tolua_server_Item_getItemPtrHighestStar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nItemID = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Item::getItemPtrHighestStar(pEntity,nItemID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemPtrHighestStar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::generateItemAttrsInSmith */
#ifndef TOLUA_DISABLE_tolua_server_Item_generateItemAttrsInSmith00
static int tolua_server_Item_generateItemAttrsInSmith00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItemPtr = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nSmithId = ((int)  tolua_tonumber(tolua_S,3,0));
  int nAttrNum = ((int)  tolua_tonumber(tolua_S,4,0));
  unsigned char nLockType1 = ((unsigned char)  tolua_tonumber(tolua_S,5,0));
  unsigned char nLockType2 = ((unsigned char)  tolua_tonumber(tolua_S,6,0));
  unsigned char nLockType3 = ((unsigned char)  tolua_tonumber(tolua_S,7,0));
  int nFlag = ((int)  tolua_tonumber(tolua_S,8,0));
  unsigned char nJob = ((unsigned char)  tolua_tonumber(tolua_S,9,0));
  {
   Item::generateItemAttrsInSmith(pEntity,pItemPtr,nSmithId,nAttrNum,nLockType1,nLockType2,nLockType3,nFlag,nJob);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'generateItemAttrsInSmith'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::generateOneAttrInSmith */
#ifndef TOLUA_DISABLE_tolua_server_Item_generateOneAttrInSmith00
static int tolua_server_Item_generateOneAttrInSmith00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nSmithId = ((int)  tolua_tonumber(tolua_S,1,0));
  unsigned char nAttrType = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
  int nAttrValue = ((int)  tolua_tonumber(tolua_S,3,0));
  unsigned char nLockType = ((unsigned char)  tolua_tonumber(tolua_S,4,enSmithLockType_No));
  {
   Item::generateOneAttrInSmith(nSmithId,nAttrType,nAttrValue,nLockType);
   tolua_pushnumber(tolua_S,(lua_Number)nAttrType);
   tolua_pushnumber(tolua_S,(lua_Number)nAttrValue);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'generateOneAttrInSmith'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::hasItemAttrs */
#ifndef TOLUA_DISABLE_tolua_server_Item_hasItemAttrs00
static int tolua_server_Item_hasItemAttrs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pItemPtr = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nFlag = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Item::hasItemAttrs(pEntity,pItemPtr,nFlag);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasItemAttrs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Item::transferItemAttrs */
#ifndef TOLUA_DISABLE_tolua_server_Item_transferItemAttrs00
static int tolua_server_Item_transferItemAttrs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pSrcItemPtr = ((void*)  tolua_touserdata(tolua_S,2,0));
  void* pDesItemPtr = ((void*)  tolua_touserdata(tolua_S,3,0));
  int nFlag = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  Item::transferItemAttrs(pEntity,pSrcItemPtr,pDesItemPtr,nFlag);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transferItemAttrs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::allocPacket */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_allocPacket00
static int tolua_server_DataPack_allocPacket00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nSystemID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCmdID = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   void* tolua_ret = (void*)  DataPack::allocPacket(pEntity,nSystemID,nCmdID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allocPacket'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::flush */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_flush00
static int tolua_server_DataPack_flush00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActorPacket = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   DataPack::flush(pActorPacket);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flush'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::flushCs */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_flushCs00
static int tolua_server_DataPack_flushCs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* packet = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   DataPack::flushCs(packet);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flushCs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeString */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeString00
static int tolua_server_DataPack_writeString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   DataPack::writeString(pPack,str);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readString */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readString00
static int tolua_server_DataPack_readString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  DataPack::readString(pPack);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readByte */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readByte00
static int tolua_server_DataPack_readByte00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned char tolua_ret = (unsigned char)  DataPack::readByte(pPack);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readByte'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readChar */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readChar00
static int tolua_server_DataPack_readChar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   char tolua_ret = (char)  DataPack::readChar(pPack);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readChar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readWord */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readWord00
static int tolua_server_DataPack_readWord00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned short tolua_ret = (unsigned short)  DataPack::readWord(pPack);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readWord'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readShort */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readShort00
static int tolua_server_DataPack_readShort00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   short tolua_ret = (short)  DataPack::readShort(pPack);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readShort'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readInt */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readInt00
static int tolua_server_DataPack_readInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  DataPack::readInt(pPack);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readUInt */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readUInt00
static int tolua_server_DataPack_readUInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  DataPack::readUInt(pPack);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readUInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readUint64 */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readUint6400
static int tolua_server_DataPack_readUint6400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   double tolua_ret = (double)  DataPack::readUint64(pPack);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readUint64'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readInt64 */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readInt6400
static int tolua_server_DataPack_readInt6400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   double tolua_ret = (double)  DataPack::readInt64(pPack);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readInt64'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::readData */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_readData00
static int tolua_server_DataPack_readData00(lua_State* tolua_S)
{
	return DataPack::readData(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeByte */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeByte00
static int tolua_server_DataPack_writeByte00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned char btValue = ((unsigned char)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::writeByte(pPack,btValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeByte'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeChar */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeChar00
static int tolua_server_DataPack_writeChar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  char cValue = ((char)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::writeChar(pPack,cValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeChar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeWord */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeWord00
static int tolua_server_DataPack_writeWord00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned short wValue = ((unsigned short)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::writeWord(pPack,wValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeWord'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeShort */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeShort00
static int tolua_server_DataPack_writeShort00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  short wValue = ((short)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::writeShort(pPack,wValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeShort'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeInt */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeInt00
static int tolua_server_DataPack_writeInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::writeInt(pPack,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeUInt */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeUInt00
static int tolua_server_DataPack_writeUInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int uValue = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::writeUInt(pPack,uValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeUInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeUint64 */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeUint6400
static int tolua_server_DataPack_writeUint6400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  double value = ((double)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::writeUint64(pPack,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeUint64'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeInt64 */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeInt6400
static int tolua_server_DataPack_writeInt6400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pPack = ((void*)  tolua_touserdata(tolua_S,1,0));
  double value = ((double)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::writeInt64(pPack,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeInt64'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::writeData */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_writeData00
static int tolua_server_DataPack_writeData00(lua_State* tolua_S)
{
	return DataPack::writeData(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::allocPacketEx */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_allocPacketEx00
static int tolua_server_DataPack_allocPacketEx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   void* tolua_ret = (void*)  DataPack::allocPacketEx();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allocPacketEx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::freePacketEx */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_freePacketEx00
static int tolua_server_DataPack_freePacketEx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pack = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   DataPack::freePacketEx(pack);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'freePacketEx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::broadcastScene */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_broadcastScene00
static int tolua_server_DataPack_broadcastScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pActorPacket = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int fbHandle = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nSceneId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  DataPack::broadcastScene(pActorPacket,fbHandle,nSceneId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadcastScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::broadcasetWorld */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_broadcasetWorld00
static int tolua_server_DataPack_broadcasetWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* packet = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   DataPack::broadcasetWorld(packet,nLevel,nCircle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadcasetWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: DataPack::broadGuild */
#ifndef TOLUA_DISABLE_tolua_server_DataPack_broadGuild00
static int tolua_server_DataPack_broadGuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* packet = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nGuildId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   DataPack::broadGuild(packet,nGuildId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'broadGuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: TeamFun::getTeamCaptain */
#ifndef TOLUA_DISABLE_tolua_server_TeamFun_getTeamCaptain00
static int tolua_server_TeamFun_getTeamCaptain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  TeamFun::getTeamCaptain(nTeamId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeamCaptain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: TeamFun::getTeamCaptain */
#ifndef TOLUA_DISABLE_tolua_server_TeamFun_getTeamCaptain01
static int tolua_server_TeamFun_getTeamCaptain01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  void* pTeam = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  TeamFun::getTeamCaptain(pTeam);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_server_TeamFun_getTeamCaptain00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: TeamFun::getChallenge */
#ifndef TOLUA_DISABLE_tolua_server_TeamFun_getChallenge00
static int tolua_server_TeamFun_getChallenge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  TeamFun::getChallenge(nTeamId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChallenge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: TeamFun::setChallenge */
#ifndef TOLUA_DISABLE_tolua_server_TeamFun_setChallenge00
static int tolua_server_TeamFun_setChallenge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nChalllengeId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   TeamFun::setChallenge(nTeamId,nChalllengeId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setChallenge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: TeamFun::setTeamFubenId */
#ifndef TOLUA_DISABLE_tolua_server_TeamFun_setTeamFubenId00
static int tolua_server_TeamFun_setTeamFubenId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nFbId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   TeamFun::setTeamFubenId(nTeamId,nFbId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTeamFubenId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: TeamFun::getDyanmicVar */
#ifndef TOLUA_DISABLE_tolua_server_TeamFun_getDyanmicVar00
static int tolua_server_TeamFun_getDyanmicVar00(lua_State* tolua_S)
{
	return TeamFun::getDyanmicVar(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: TeamFun::setTeamTimer */
#ifndef TOLUA_DISABLE_tolua_server_TeamFun_setTeamTimer00
static int tolua_server_TeamFun_setTeamTimer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nTeamId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nExpiredTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  TeamFun::setTeamTimer(nTeamId,nExpiredTime);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTeamTimer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::addRef */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_addRef00
static int tolua_server_Ranking_addRef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Ranking::addRef(pRank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addRef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::release */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_release00
static int tolua_server_Ranking_release00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Ranking::release(pRank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getRef */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getRef00
static int tolua_server_Ranking_getRef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Ranking::getRef(pRank);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getRanking */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getRanking00
static int tolua_server_Ranking_getRanking00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int rankId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Ranking::getRanking(rankId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRanking'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::add */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_add00
static int tolua_server_Ranking_add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int rankId = ((int)  tolua_tonumber(tolua_S,1,0));
  char* sName = ((char*)  tolua_tostring(tolua_S,2,0));
  int nMax = ((int)  tolua_tonumber(tolua_S,3,0));
  int boDisplay = ((int)  tolua_tonumber(tolua_S,4,0));
  int nBroadCount = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   void* tolua_ret = (void*)  Ranking::add(rankId,sName,nMax,boDisplay,nBroadCount);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::load */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_load00
static int tolua_server_Ranking_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sFile = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Ranking::load(pRank,sFile);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::save */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_save00
static int tolua_server_Ranking_save00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sFile = ((char*)  tolua_tostring(tolua_S,2,0));
  bool bForceSave = ((bool) (tolua_toboolean(tolua_S,3,false)!=0));
  {
   bool tolua_ret = (bool)  Ranking::save(pRank,sFile,bForceSave);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'save'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::addColumn */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_addColumn00
static int tolua_server_Ranking_addColumn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sTitle = ((char*)  tolua_tostring(tolua_S,2,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,3,-1));
  bool bUnique = ((bool) (tolua_toboolean(tolua_S,4,false)!=0));
  {
   Ranking::addColumn(pRank,sTitle,nIndex,bUnique);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addColumn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::setColumnTitle */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_setColumnTitle00
static int tolua_server_Ranking_setColumnTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sTitle = ((char*)  tolua_tostring(tolua_S,2,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Ranking::setColumnTitle(pRank,sTitle,nIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColumnTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::addItem */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_addItem00
static int tolua_server_Ranking_addItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nPoint = ((int)  tolua_tonumber(tolua_S,3,0));
  bool bRankFlag = ((bool) (tolua_toboolean(tolua_S,4,true)!=0));
  {
   void* tolua_ret = (void*)  Ranking::addItem(pRank,nId,nPoint,bRankFlag);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getItemIndexFromId */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getItemIndexFromId00
static int tolua_server_Ranking_getItemIndexFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Ranking::getItemIndexFromId(pRank,nId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemIndexFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getItemPtrFromId */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getItemPtrFromId00
static int tolua_server_Ranking_getItemPtrFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Ranking::getItemPtrFromId(pRank,nId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemPtrFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::updateItem */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_updateItem00
static int tolua_server_Ranking_updateItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nPoint = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   void* tolua_ret = (void*)  Ranking::updateItem(pRank,nId,nPoint);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::setItem */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_setItem00
static int tolua_server_Ranking_setItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nPoint = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   void* tolua_ret = (void*)  Ranking::setItem(pRank,nId,nPoint);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::setColumnDisplay */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_setColumnDisplay00
static int tolua_server_Ranking_setColumnDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int boDisplay = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Ranking::setColumnDisplay(pRank,nIndex,boDisplay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColumnDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::setSub */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_setSub00
static int tolua_server_Ranking_setSub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRankItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  char* sData = ((char*)  tolua_tostring(tolua_S,3,0));
  {
   Ranking::setSub(pRankItem,nIndex,sData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::removeRanking */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_removeRanking00
static int tolua_server_Ranking_removeRanking00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int rankId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   Ranking::removeRanking(rankId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeRanking'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getRankItemCount */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getRankItemCount00
static int tolua_server_Ranking_getRankItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Ranking::getRankItemCount(pRank);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRankItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getRankItemCountByLimit */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getRankItemCountByLimit00
static int tolua_server_Ranking_getRankItemCountByLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nLimit = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Ranking::getRankItemCountByLimit(pRank,nLimit);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRankItemCountByLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getPoint */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getPoint00
static int tolua_server_Ranking_getPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRankItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Ranking::getPoint(pRankItem);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getId */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getId00
static int tolua_server_Ranking_getId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRankItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Ranking::getId(pRankItem);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getIndexFromPtr */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getIndexFromPtr00
static int tolua_server_Ranking_getIndexFromPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRankItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Ranking::getIndexFromPtr(pRankItem);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexFromPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getSub */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getSub00
static int tolua_server_Ranking_getSub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRankItem = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   const char* tolua_ret = (const char*)  Ranking::getSub(pRankItem,nIndex);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::clearRanking */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_clearRanking00
static int tolua_server_Ranking_clearRanking00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   Ranking::clearRanking(pRank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearRanking'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::getItemFromIndex */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_getItemFromIndex00
static int tolua_server_Ranking_getItemFromIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   void* tolua_ret = (void*)  Ranking::getItemFromIndex(pRank,nIndex);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemFromIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::setDisplayName */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_setDisplayName00
static int tolua_server_Ranking_setDisplayName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Ranking::setDisplayName(pRank,sName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDisplayName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::setIdTitle */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_setIdTitle00
static int tolua_server_Ranking_setIdTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Ranking::setIdTitle(pRank,sName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIdTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::setPointTitle */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_setPointTitle00
static int tolua_server_Ranking_setPointTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   Ranking::setPointTitle(pRank,sName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPointTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::removeId */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_removeId00
static int tolua_server_Ranking_removeId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int id = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Ranking::removeId(pRank,id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::UpdateCsRank */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_UpdateCsRank00
static int tolua_server_Ranking_UpdateCsRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int rankId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   Ranking::UpdateCsRank(rankId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateCsRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::setRankPropConfig */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_setRankPropConfig00
static int tolua_server_Ranking_setRankPropConfig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nRankPropIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Ranking::setRankPropConfig(pRank,nRankPropIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRankPropConfig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::GetRankColumnCount */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_GetRankColumnCount00
static int tolua_server_Ranking_GetRankColumnCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Ranking::GetRankColumnCount(pRank);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRankColumnCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::forceSave */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_forceSave00
static int tolua_server_Ranking_forceSave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  char* sFile = ((char*)  tolua_tostring(tolua_S,2,0));
  {
   Ranking::forceSave(pRank,sFile);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'forceSave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Ranking::CheckActorIdInRank */
#ifndef TOLUA_DISABLE_tolua_server_Ranking_CheckActorIdInRank00
static int tolua_server_Ranking_CheckActorIdInRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRank = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int id = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Ranking::CheckActorIdInRank(pRank,id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CheckActorIdInRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addRef of class  CBaseScriptExportObject */
#ifndef TOLUA_DISABLE_tolua_server_CBaseScriptExportObject_addRef00
static int tolua_server_CBaseScriptExportObject_addRef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CBaseScriptExportObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CBaseScriptExportObject* self = (CBaseScriptExportObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addRef'",NULL);
#endif
  {
   int tolua_ret = (int)  self->addRef();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addRef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: release of class  CBaseScriptExportObject */
#ifndef TOLUA_DISABLE_tolua_server_CBaseScriptExportObject_release00
static int tolua_server_CBaseScriptExportObject_release00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CBaseScriptExportObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CBaseScriptExportObject* self = (CBaseScriptExportObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'release'",NULL);
#endif
  {
   int tolua_ret = (int)  self->release();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  CBoxDrop */
#ifndef TOLUA_DISABLE_tolua_server_CBoxDrop_load00
static int tolua_server_CBoxDrop_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CBoxDrop",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CBoxDrop* self = (CBoxDrop*)  tolua_tousertype(tolua_S,1,0);
  const char* pFile = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'",NULL);
#endif
  {
   self->load(pFile);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  CBoxDrop */
#ifndef TOLUA_DISABLE_tolua_server_CBoxDrop_drop00
static int tolua_server_CBoxDrop_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CBoxDrop",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CBoxDrop* self = (CBoxDrop*)  tolua_tousertype(tolua_S,1,0);
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   DropItemList tolua_ret = (DropItemList)  self->drop(pEntity);
   {
#ifdef __cplusplus
    void* tolua_obj = new DropItemList(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"DropItemList");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(DropItemList));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"DropItemList");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: proabilityDrop of class  CBoxDrop */
#ifndef TOLUA_DISABLE_tolua_server_CBoxDrop_proabilityDrop00
static int tolua_server_CBoxDrop_proabilityDrop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CBoxDrop",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CBoxDrop* self = (CBoxDrop*)  tolua_tousertype(tolua_S,1,0);
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'proabilityDrop'",NULL);
#endif
  {
   DropItemList tolua_ret = (DropItemList)  self->proabilityDrop(pEntity);
   {
#ifdef __cplusplus
    void* tolua_obj = new DropItemList(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"DropItemList");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(DropItemList));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"DropItemList");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'proabilityDrop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingleton of class  CBoxDropMgr */
#ifndef TOLUA_DISABLE_tolua_server_CBoxDropMgr_getSingleton00
static int tolua_server_CBoxDropMgr_getSingleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CBoxDropMgr",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CBoxDropMgr& tolua_ret = (CBoxDropMgr&)  CBoxDropMgr::getSingleton();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"CBoxDropMgr");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createBoxDrop of class  CBoxDropMgr */
#ifndef TOLUA_DISABLE_tolua_server_CBoxDropMgr_createBoxDrop00
static int tolua_server_CBoxDropMgr_createBoxDrop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CBoxDropMgr",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CBoxDropMgr* self = (CBoxDropMgr*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createBoxDrop'",NULL);
#endif
  {
   CBoxDrop* tolua_ret = (CBoxDrop*)  self->createBoxDrop(pKey);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"CBoxDrop");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createBoxDrop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: btAwardType of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_unsigned_btAwardType
static int tolua_get_DropItemInfo_unsigned_btAwardType(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btAwardType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->btAwardType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: btAwardType of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_unsigned_btAwardType
static int tolua_set_DropItemInfo_unsigned_btAwardType(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btAwardType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->btAwardType = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: wItemId of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_unsigned_wItemId
static int tolua_get_DropItemInfo_unsigned_wItemId(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'wItemId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->wItemId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: wItemId of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_unsigned_wItemId
static int tolua_set_DropItemInfo_unsigned_wItemId(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'wItemId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->wItemId = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: btQuality of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_unsigned_btQuality
static int tolua_get_DropItemInfo_unsigned_btQuality(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btQuality'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->btQuality);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: btQuality of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_unsigned_btQuality
static int tolua_set_DropItemInfo_unsigned_btQuality(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btQuality'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->btQuality = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: btStrong of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_unsigned_btStrong
static int tolua_get_DropItemInfo_unsigned_btStrong(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btStrong'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->btStrong);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: btStrong of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_unsigned_btStrong
static int tolua_set_DropItemInfo_unsigned_btStrong(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btStrong'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->btStrong = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: btBind of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_unsigned_btBind
static int tolua_get_DropItemInfo_unsigned_btBind(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btBind'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->btBind);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: btBind of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_unsigned_btBind
static int tolua_set_DropItemInfo_unsigned_btBind(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btBind'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->btBind = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: btCount of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_btCount
static int tolua_get_DropItemInfo_btCount(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->btCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: btCount of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_btCount
static int tolua_set_DropItemInfo_btCount(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->btCount = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: btAuxParam of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_unsigned_btAuxParam
static int tolua_get_DropItemInfo_unsigned_btAuxParam(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btAuxParam'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->btAuxParam);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: btAuxParam of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_unsigned_btAuxParam
static int tolua_set_DropItemInfo_unsigned_btAuxParam(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'btAuxParam'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->btAuxParam = ((unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: nTime of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_unsigned_nTime
static int tolua_get_DropItemInfo_unsigned_nTime(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->nTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: nTime of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_unsigned_nTime
static int tolua_set_DropItemInfo_unsigned_nTime(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->nTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: nQualityDataIndex of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_get_DropItemInfo_unsigned_nQualityDataIndex
static int tolua_get_DropItemInfo_unsigned_nQualityDataIndex(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nQualityDataIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->nQualityDataIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: nQualityDataIndex of class  DropItemInfo */
#ifndef TOLUA_DISABLE_tolua_set_DropItemInfo_unsigned_nQualityDataIndex
static int tolua_set_DropItemInfo_unsigned_nQualityDataIndex(lua_State* tolua_S)
{
  DropItemInfo* self = (DropItemInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'nQualityDataIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->nQualityDataIndex = ((unsigned short)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: moneyCount of class  DropItemList */
#ifndef TOLUA_DISABLE_tolua_get_DropItemList_unsigned_moneyCount
static int tolua_get_DropItemList_unsigned_moneyCount(lua_State* tolua_S)
{
  DropItemList* self = (DropItemList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'moneyCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->moneyCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: moneyCount of class  DropItemList */
#ifndef TOLUA_DISABLE_tolua_set_DropItemList_unsigned_moneyCount
static int tolua_set_DropItemList_unsigned_moneyCount(lua_State* tolua_S)
{
  DropItemList* self = (DropItemList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'moneyCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->moneyCount = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: itemCount of class  DropItemList */
#ifndef TOLUA_DISABLE_tolua_get_DropItemList_unsigned_itemCount
static int tolua_get_DropItemList_unsigned_itemCount(lua_State* tolua_S)
{
  DropItemList* self = (DropItemList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'itemCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->itemCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: itemCount of class  DropItemList */
#ifndef TOLUA_DISABLE_tolua_set_DropItemList_unsigned_itemCount
static int tolua_set_DropItemList_unsigned_itemCount(lua_State* tolua_S)
{
  DropItemList* self = (DropItemList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'itemCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->itemCount = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: itemList of class  DropItemList */
#ifndef TOLUA_DISABLE_tolua_get_server_DropItemList_itemList
static int tolua_get_server_DropItemList_itemList(lua_State* tolua_S)
{
 int tolua_index;
  DropItemList* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (DropItemList*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_DROP_ITEM_COUNT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushusertype(tolua_S,(void*)&self->itemList[tolua_index],"DropItemInfo");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: itemList of class  DropItemList */
#ifndef TOLUA_DISABLE_tolua_set_server_DropItemList_itemList
static int tolua_set_server_DropItemList_itemList(lua_State* tolua_S)
{
 int tolua_index;
  DropItemList* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (DropItemList*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=MAX_DROP_ITEM_COUNT)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->itemList[tolua_index] = *((DropItemInfo*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::create */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_create00
static int tolua_server_ScoreRecorder_create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* sName = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  ScoreRecorder::create(sName);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::addRef */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_addRef00
static int tolua_server_ScoreRecorder_addRef00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  ScoreRecorder::addRef(pRecorder);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addRef'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::release */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_release00
static int tolua_server_ScoreRecorder_release00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  ScoreRecorder::release(pRecorder);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::joinTeam */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_joinTeam00
static int tolua_server_ScoreRecorder_joinTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pTarget = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   ScoreRecorder::joinTeam(pRecorder,pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'joinTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::joinGuild */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_joinGuild00
static int tolua_server_ScoreRecorder_joinGuild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pTarget = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   ScoreRecorder::joinGuild(pRecorder,pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'joinGuild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::joinCamp */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_joinCamp00
static int tolua_server_ScoreRecorder_joinCamp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pTarget = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   ScoreRecorder::joinCamp(pRecorder,pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'joinCamp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::joinFuBen */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_joinFuBen00
static int tolua_server_ScoreRecorder_joinFuBen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pTarget = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   ScoreRecorder::joinFuBen(pRecorder,pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'joinFuBen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::leave */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_leave00
static int tolua_server_ScoreRecorder_leave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* pTarget = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   ScoreRecorder::leave(pRecorder,pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'leave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::stop */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_stop00
static int tolua_server_ScoreRecorder_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   ScoreRecorder::stop(pRecorder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::incScore */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_incScore00
static int tolua_server_ScoreRecorder_incScore00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  int nValueToAdd = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  ScoreRecorder::incScore(pRecorder,sName,nValueToAdd);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'incScore'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::setScore */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_setScore00
static int tolua_server_ScoreRecorder_setScore00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  int nValue = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  ScoreRecorder::setScore(pRecorder,sName,nValue);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScore'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::getScore */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_getScore00
static int tolua_server_ScoreRecorder_getScore00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   int tolua_ret = (int)  ScoreRecorder::getScore(pRecorder,sName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScore'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::itemExists */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_itemExists00
static int tolua_server_ScoreRecorder_itemExists00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pRecorder = ((void*)  tolua_touserdata(tolua_S,1,0));
  const char* sName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  ScoreRecorder::itemExists(pRecorder,sName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemExists'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: ScoreRecorder::getScoreData */
#ifndef TOLUA_DISABLE_tolua_server_ScoreRecorder_getScoreData00
static int tolua_server_ScoreRecorder_getScoreData00(lua_State* tolua_S)
{
	return ScoreRecorder::getScoreData(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildOnlineMemberList */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildOnlineMemberList00
static int tolua_server_Guild_getGuildOnlineMemberList00(lua_State* tolua_S)
{
	return Guild::getGuildOnlineMemberList(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildMemberIdList */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildMemberIdList00
static int tolua_server_Guild_getGuildMemberIdList00(lua_State* tolua_S)
{
	return Guild::getGuildMemberIdList(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildMemberBasicData */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildMemberBasicData00
static int tolua_server_Guild_getGuildMemberBasicData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pGuild = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nSex = ((int)  tolua_tonumber(tolua_S,3,0));
  int nJob = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Guild::getGuildMemberBasicData(pGuild,nActorId,nSex,nJob);
   tolua_pushnumber(tolua_S,(lua_Number)nSex);
   tolua_pushnumber(tolua_S,(lua_Number)nJob);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildMemberBasicData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildPtr */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildPtr00
static int tolua_server_Guild_getGuildPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Guild::getGuildPtr(nGuildId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildName */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildName00
static int tolua_server_Guild_getGuildName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuidID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   char* tolua_ret = (char*)  Guild::getGuildName(nGuidID);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildLeader */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildLeader00
static int tolua_server_Guild_getGuildLeader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  Guild::getGuildLeader(nGuildID);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildLeader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildLeaderId */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildLeaderId00
static int tolua_server_Guild_getGuildLeaderId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildID = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getGuildLeaderId(nGuildID);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildLeaderId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::changeGuildFr */
#ifndef TOLUA_DISABLE_tolua_server_Guild_changeGuildFr00
static int tolua_server_Guild_changeGuildFr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nFrVar = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Guild::changeGuildFr(nGuildId,nFrVar);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeGuildFr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::changeGuildCoin */
#ifndef TOLUA_DISABLE_tolua_server_Guild_changeGuildCoin00
static int tolua_server_Guild_changeGuildCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isstring(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nCoinVar = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLogId = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* pStr = ((const char*)  tolua_tostring(tolua_S,4,""));
  {
   bool tolua_ret = (bool)  Guild::changeGuildCoin(nGuildId,nCoinVar,nLogId,pStr);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeGuildCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildLeaderName */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildLeaderName00
static int tolua_server_Guild_getGuildLeaderName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   const char* tolua_ret = (const char*)  Guild::getGuildLeaderName(nGuildId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildLeaderName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildMemberNum */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildMemberNum00
static int tolua_server_Guild_getGuildMemberNum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Guild::getGuildMemberNum(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildMemberNum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::guildBroadCastMsg */
#ifndef TOLUA_DISABLE_tolua_server_Guild_guildBroadCastMsg00
static int tolua_server_Guild_guildBroadCastMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* packet = ((void*)  tolua_touserdata(tolua_S,1,0));
  void* guildPtr = ((void*)  tolua_touserdata(tolua_S,2,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  int nCircl = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Guild::guildBroadCastMsg(packet,guildPtr,nLevel,nCircl);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'guildBroadCastMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getCityOwnMasterId */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getCityOwnMasterId00
static int tolua_server_Guild_getCityOwnMasterId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getCityOwnMasterId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityOwnMasterId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getThunderPower */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getThunderPower00
static int tolua_server_Guild_getThunderPower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getThunderPower(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getThunderPower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setThunderPower */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setThunderPower00
static int tolua_server_Guild_setThunderPower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nValue = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Guild::setThunderPower(nGuildId,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setThunderPower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getFillThunderTimes */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getFillThunderTimes00
static int tolua_server_Guild_getFillThunderTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getFillThunderTimes(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFillThunderTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setFillThunderTimes */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setFillThunderTimes00
static int tolua_server_Guild_setFillThunderTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nValue = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Guild::setFillThunderTimes(nGuildId,nValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFillThunderTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::isGuildSiegeStart */
#ifndef TOLUA_DISABLE_tolua_server_Guild_isGuildSiegeStart00
static int tolua_server_Guild_isGuildSiegeStart00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   bool tolua_ret = (bool)  Guild::isGuildSiegeStart();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isGuildSiegeStart'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::sendGuildSiegeCmdPanel */
#ifndef TOLUA_DISABLE_tolua_server_Guild_sendGuildSiegeCmdPanel00
static int tolua_server_Guild_sendGuildSiegeCmdPanel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned char nFlag = ((unsigned char)  tolua_tonumber(tolua_S,1,0));
  {
   Guild::sendGuildSiegeCmdPanel(nFlag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildSiegeCmdPanel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setGuildSiegeCommand */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setGuildSiegeCommand00
static int tolua_server_Guild_setGuildSiegeCommand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nGuildId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nCmdIdx = ((int)  tolua_tonumber(tolua_S,3,0));
  int nCmdMsgIdx = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Guild::setGuildSiegeCommand(pEntity,nGuildId,nCmdIdx,nCmdMsgIdx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildSiegeCommand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildSiegeCommandTime */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildSiegeCommandTime00
static int tolua_server_Guild_getGuildSiegeCommandTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nGuildId = ((int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getGuildSiegeCommandTime(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildSiegeCommandTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::autoSignGuildSiege */
#ifndef TOLUA_DISABLE_tolua_server_Guild_autoSignGuildSiege00
static int tolua_server_Guild_autoSignGuildSiege00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Guild::autoSignGuildSiege();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'autoSignGuildSiege'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::resetSignGuildsiege */
#ifndef TOLUA_DISABLE_tolua_server_Guild_resetSignGuildsiege00
static int tolua_server_Guild_resetSignGuildsiege00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Guild::resetSignGuildsiege();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resetSignGuildsiege'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::clearGuildSiegeCommand */
#ifndef TOLUA_DISABLE_tolua_server_Guild_clearGuildSiegeCommand00
static int tolua_server_Guild_clearGuildSiegeCommand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Guild::clearGuildSiegeCommand();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearGuildSiegeCommand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::isGuildSiegeTodayOpen */
#ifndef TOLUA_DISABLE_tolua_server_Guild_isGuildSiegeTodayOpen00
static int tolua_server_Guild_isGuildSiegeTodayOpen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   bool tolua_ret = (bool)  Guild::isGuildSiegeTodayOpen();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isGuildSiegeTodayOpen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::startGuildSiege */
#ifndef TOLUA_DISABLE_tolua_server_Guild_startGuildSiege00
static int tolua_server_Guild_startGuildSiege00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Guild::startGuildSiege();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startGuildSiege'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::guildSiegeEnd */
#ifndef TOLUA_DISABLE_tolua_server_Guild_guildSiegeEnd00
static int tolua_server_Guild_guildSiegeEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   Guild::guildSiegeEnd(nGuildId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'guildSiegeEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getCityPostionInfo */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getCityPostionInfo00
static int tolua_server_Guild_getCityPostionInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nPos = ((int)  tolua_tonumber(tolua_S,1,0));
  int nJob = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSex = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   char* tolua_ret = (char*)  Guild::getCityPostionInfo(nPos,nJob,nSex);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)nJob);
   tolua_pushnumber(tolua_S,(lua_Number)nSex);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityPostionInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setCityOwnGuildId */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setCityOwnGuildId00
static int tolua_server_Guild_setCityOwnGuildId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   Guild::setCityOwnGuildId(nGuildId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCityOwnGuildId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getPalaceOccoupyTime */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getPalaceOccoupyTime00
static int tolua_server_Guild_getPalaceOccoupyTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getPalaceOccoupyTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPalaceOccoupyTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getCityOwnGuildId */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getCityOwnGuildId00
static int tolua_server_Guild_getCityOwnGuildId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getCityOwnGuildId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityOwnGuildId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::clearGuildSiegeData */
#ifndef TOLUA_DISABLE_tolua_server_Guild_clearGuildSiegeData00
static int tolua_server_Guild_clearGuildSiegeData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Guild::clearGuildSiegeData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearGuildSiegeData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::isLimitGuildCoin */
#ifndef TOLUA_DISABLE_tolua_server_Guild_isLimitGuildCoin00
static int tolua_server_Guild_isLimitGuildCoin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   bool tolua_ret = (bool)  Guild::isLimitGuildCoin(nGuildId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isLimitGuildCoin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getCityPostionById */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getCityPostionById00
static int tolua_server_Guild_getCityPostionById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getCityPostionById(nActorId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCityPostionById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::sendGuildMsg */
#ifndef TOLUA_DISABLE_tolua_server_Guild_sendGuildMsg00
static int tolua_server_Guild_sendGuildMsg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  char* szMsg = ((char*)  tolua_tostring(tolua_S,2,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,0));
  int nCircle = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Guild::sendGuildMsg(nGuildId,szMsg,nLevel,nCircle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendGuildMsg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getUpgradeItemCount */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getUpgradeItemCount00
static int tolua_server_Guild_getUpgradeItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nItemCount1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemCount2 = ((int)  tolua_tonumber(tolua_S,3,0));
  int nItemCount3 = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Guild::getUpgradeItemCount(nGuildId,nItemCount1,nItemCount2,nItemCount3);
   tolua_pushnumber(tolua_S,(lua_Number)nItemCount1);
   tolua_pushnumber(tolua_S,(lua_Number)nItemCount2);
   tolua_pushnumber(tolua_S,(lua_Number)nItemCount3);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUpgradeItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setUpgradeItemCount */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setUpgradeItemCount00
static int tolua_server_Guild_setUpgradeItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nItemCount1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int nItemCount2 = ((int)  tolua_tonumber(tolua_S,3,0));
  int nItemCount3 = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Guild::setUpgradeItemCount(nGuildId,nItemCount1,nItemCount2,nItemCount3);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUpgradeItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildTreeData */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildTreeData00
static int tolua_server_Guild_getGuildTreeData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTreeLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nTreeDegree = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Guild::getGuildTreeData(nGuildId,nTreeLevel,nTreeDegree);
   tolua_pushnumber(tolua_S,(lua_Number)nTreeLevel);
   tolua_pushnumber(tolua_S,(lua_Number)nTreeDegree);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildTreeData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setGuildTreeData */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setGuildTreeData00
static int tolua_server_Guild_setGuildTreeData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTreeLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nTreeDegree = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Guild::setGuildTreeData(nGuildId,nTreeLevel,nTreeDegree);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildTreeData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildTreeFruitTime */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildTreeFruitTime00
static int tolua_server_Guild_getGuildTreeFruitTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   unsigned int tolua_ret = (unsigned int)  Guild::getGuildTreeFruitTime(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildTreeFruitTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setGuildTreeFruitTime */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setGuildTreeFruitTime00
static int tolua_server_Guild_setGuildTreeFruitTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  unsigned int nFruitTime = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Guild::setGuildTreeFruitTime(nGuildId,nFruitTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildTreeFruitTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildFruitData */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildFruitData00
static int tolua_server_Guild_getGuildFruitData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nGuildFruitLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGuildFruitDegree = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGuildFruitNum = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Guild::getGuildFruitData(nGuildId,nGuildFruitLevel,nGuildFruitDegree,nGuildFruitNum);
   tolua_pushnumber(tolua_S,(lua_Number)nGuildFruitLevel);
   tolua_pushnumber(tolua_S,(lua_Number)nGuildFruitDegree);
   tolua_pushnumber(tolua_S,(lua_Number)nGuildFruitNum);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildFruitData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setGuildFruitData */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setGuildFruitData00
static int tolua_server_Guild_setGuildFruitData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nGuildFruitLevel = ((int)  tolua_tonumber(tolua_S,2,0));
  int nGuildFruitDegree = ((int)  tolua_tonumber(tolua_S,3,0));
  int nGuildFruitNum = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Guild::setGuildFruitData(nGuildId,nGuildFruitLevel,nGuildFruitDegree,nGuildFruitNum);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGuildFruitData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::procGuildTreeToSapling */
#ifndef TOLUA_DISABLE_tolua_server_Guild_procGuildTreeToSapling00
static int tolua_server_Guild_procGuildTreeToSapling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Guild::procGuildTreeToSapling();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'procGuildTreeToSapling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::procGuildDailyData */
#ifndef TOLUA_DISABLE_tolua_server_Guild_procGuildDailyData00
static int tolua_server_Guild_procGuildDailyData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Guild::procGuildDailyData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'procGuildDailyData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getGuildTaskData */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getGuildTaskData00
static int tolua_server_Guild_getGuildTaskData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nTaskId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nTaskSche = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Guild::getGuildTaskData(nGuildId,nTaskId,nTaskSche);
   tolua_pushnumber(tolua_S,(lua_Number)nTaskId);
   tolua_pushnumber(tolua_S,(lua_Number)nTaskSche);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuildTaskData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::getDailyGuildCoinDonated */
#ifndef TOLUA_DISABLE_tolua_server_Guild_getDailyGuildCoinDonated00
static int tolua_server_Guild_getDailyGuildCoinDonated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   int tolua_ret = (int)  Guild::getDailyGuildCoinDonated(nGuildId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDailyGuildCoinDonated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::addDailyGuildCoinDonated */
#ifndef TOLUA_DISABLE_tolua_server_Guild_addDailyGuildCoinDonated00
static int tolua_server_Guild_addDailyGuildCoinDonated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  int nAddGuildCoin = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Guild::addDailyGuildCoinDonated(nGuildId,nAddGuildCoin);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addDailyGuildCoinDonated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::sendMemberList */
#ifndef TOLUA_DISABLE_tolua_server_Guild_sendMemberList00
static int tolua_server_Guild_sendMemberList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nActorId = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   Guild::sendMemberList(pEntity,nActorId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendMemberList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Guild::setSbkGuildId */
#ifndef TOLUA_DISABLE_tolua_server_Guild_setSbkGuildId00
static int tolua_server_Guild_setSbkGuildId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int nGuildId = ((unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   Guild::setSbkGuildId(nGuildId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSbkGuildId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Pet::addPet */
#ifndef TOLUA_DISABLE_tolua_server_Pet_addPet00
static int tolua_server_Pet_addPet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPetConfigId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,3,1));
  int nAiId = ((int)  tolua_tonumber(tolua_S,4,0));
  int nLiveSecs = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   int tolua_ret = (int)  Pet::addPet(pEntity,nPetConfigId,nLevel,nAiId,nLiveSecs);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addPet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Pet::getPetCountByConfigId */
#ifndef TOLUA_DISABLE_tolua_server_Pet_getPetCountByConfigId00
static int tolua_server_Pet_getPetCountByConfigId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPetId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   int tolua_ret = (int)  Pet::getPetCountByConfigId(pEntity,nPetId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetCountByConfigId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Pet::getPetName */
#ifndef TOLUA_DISABLE_tolua_server_Pet_getPetName00
static int tolua_server_Pet_getPetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPetId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   char* tolua_ret = (char*)  Pet::getPetName(pEntity,nPetId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Pet::delPetById */
#ifndef TOLUA_DISABLE_tolua_server_Pet_delPetById00
static int tolua_server_Pet_delPetById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nPetId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  Pet::delPetById(pEntity,nPetId);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delPetById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::addHero */
#ifndef TOLUA_DISABLE_tolua_server_Hero_addHero00
static int tolua_server_Hero_addHero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nStage = ((int)  tolua_tonumber(tolua_S,3,0));
  int nLevel = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   int tolua_ret = (int)  Hero::addHero(pEntity,nHeroId,nStage,nLevel);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addHero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::canAddHero */
#ifndef TOLUA_DISABLE_tolua_server_Hero_canAddHero00
static int tolua_server_Hero_canAddHero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool bWithTipmsg = ((bool) (tolua_toboolean(tolua_S,2,true)!=0));
  {
   bool tolua_ret = (bool)  Hero::canAddHero(pEntity,bWithTipmsg);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canAddHero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::StageUp */
#ifndef TOLUA_DISABLE_tolua_server_Hero_StageUp00
static int tolua_server_Hero_StageUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nStage = ((int)  tolua_tonumber(tolua_S,3,0));
  int nBless = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  Hero::StageUp(pEntity,nHeroId,nStage,nBless);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StageUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::getHeroProperty */
#ifndef TOLUA_DISABLE_tolua_server_Hero_getHeroProperty00
static int tolua_server_Hero_getHeroProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPropId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   unsigned int tolua_ret = (unsigned int)  Hero::getHeroProperty(pEntity,nHeroId,nPropId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHeroProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::setHeroProperty */
#ifndef TOLUA_DISABLE_tolua_server_Hero_setHeroProperty00
static int tolua_server_Hero_setHeroProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nPropId = ((int)  tolua_tonumber(tolua_S,3,0));
  unsigned int nValue = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  Hero::setHeroProperty(pEntity,nHeroId,nPropId,nValue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHeroProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::learnSkill */
#ifndef TOLUA_DISABLE_tolua_server_Hero_learnSkill00
static int tolua_server_Hero_learnSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSkillID = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Hero::learnSkill(pEntity,nHeroID,nSkillID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'learnSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::skillLevelUp */
#ifndef TOLUA_DISABLE_tolua_server_Hero_skillLevelUp00
static int tolua_server_Hero_skillLevelUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroID = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSkillID = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  Hero::skillLevelUp(pEntity,nHeroID,nSkillID);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'skillLevelUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::getSkillLevel */
#ifndef TOLUA_DISABLE_tolua_server_Hero_getSkillLevel00
static int tolua_server_Hero_getSkillLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nSkillId = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   int tolua_ret = (int)  Hero::getSkillLevel(pEntity,nHeroId,nSkillId);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkillLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::getBattleHeroId */
#ifndef TOLUA_DISABLE_tolua_server_Hero_getBattleHeroId00
static int tolua_server_Hero_getBattleHeroId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Hero::getBattleHeroId(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattleHeroId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::sendHeroOpResult */
#ifndef TOLUA_DISABLE_tolua_server_Hero_sendHeroOpResult00
static int tolua_server_Hero_sendHeroOpResult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  int nOpId = ((int)  tolua_tonumber(tolua_S,3,0));
  bool result = ((bool) (tolua_toboolean(tolua_S,4,0)!=0));
  {
   Hero::sendHeroOpResult(pEntity,nHeroId,nOpId,result);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sendHeroOpResult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::setHeroBattle */
#ifndef TOLUA_DISABLE_tolua_server_Hero_setHeroBattle00
static int tolua_server_Hero_setHeroBattle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   Hero::setHeroBattle(pEntity,nHeroId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHeroBattle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::getHeroName */
#ifndef TOLUA_DISABLE_tolua_server_Hero_getHeroName00
static int tolua_server_Hero_getHeroName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   char* tolua_ret = (char*)  Hero::getHeroName(pEntity,nHeroId);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHeroName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::getHeroCount */
#ifndef TOLUA_DISABLE_tolua_server_Hero_getHeroCount00
static int tolua_server_Hero_getHeroCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   int tolua_ret = (int)  Hero::getHeroCount(pEntity);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHeroCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::addExp */
#ifndef TOLUA_DISABLE_tolua_server_Hero_addExp00
static int tolua_server_Hero_addExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  unsigned int nExp = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,3,1));
  {
   Hero::addExp(pEntity,nExp,nHeroId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::addExpByHeroId */
#ifndef TOLUA_DISABLE_tolua_server_Hero_addExpByHeroId00
static int tolua_server_Hero_addExpByHeroId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  int nHeroId = ((int)  tolua_tonumber(tolua_S,2,0));
  unsigned int nExp = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   Hero::addExpByHeroId(pEntity,nHeroId,nExp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addExpByHeroId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: Hero::CallBackHero */
#ifndef TOLUA_DISABLE_tolua_server_Hero_CallBackHero00
static int tolua_server_Hero_CallBackHero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* pEntity = ((void*)  tolua_touserdata(tolua_S,1,0));
  bool boClient = ((bool) (tolua_toboolean(tolua_S,2,true)!=0));
  {
   Hero::CallBackHero(pEntity,boClient);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CallBackHero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: NewSocket of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_NewSocket00
static int tolua_server_LuaSocket_NewSocket00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LuaSocket* tolua_ret = (LuaSocket*)  LuaSocket::NewSocket();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaSocket");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'NewSocket'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Release of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_Release00
static int tolua_server_LuaSocket_Release00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"LuaSocket",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaSocket* s = ((LuaSocket*)  tolua_tousertype(tolua_S,2,0));
  int step = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   LuaSocket::Release(s,step);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Release'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHostByName of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_GetHostByName00
static int tolua_server_LuaSocket_GetHostByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* host = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   double tolua_ret = (double)  LuaSocket::GetHostByName(host);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHostByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: send of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_send00
static int tolua_server_LuaSocket_send00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaSocket* self = (LuaSocket*)  tolua_tousertype(tolua_S,1,0);
  char* buf = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'send'",NULL);
#endif
  {
   int tolua_ret = (int)  self->send(buf);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'send'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: connect of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_connect00
static int tolua_server_LuaSocket_connect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaSocket* self = (LuaSocket*)  tolua_tousertype(tolua_S,1,0);
  const double addr = ((const double)  tolua_tonumber(tolua_S,2,0));
  const int port = ((const int)  tolua_tonumber(tolua_S,3,0));
  bool block = ((bool) (tolua_toboolean(tolua_S,4,true)!=0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'connect'",NULL);
#endif
  {
   int tolua_ret = (int)  self->connect(addr,port,block);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: connect2 of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_connect200
static int tolua_server_LuaSocket_connect200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaSocket* self = (LuaSocket*)  tolua_tousertype(tolua_S,1,0);
  const double addr = ((const double)  tolua_tonumber(tolua_S,2,0));
  const int port = ((const int)  tolua_tonumber(tolua_S,3,0));
  int timeout = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'connect2'",NULL);
#endif
  {
   int tolua_ret = (int)  self->connect2(addr,port,timeout);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'connect2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSendTimeout of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_setSendTimeout00
static int tolua_server_LuaSocket_setSendTimeout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaSocket* self = (LuaSocket*)  tolua_tousertype(tolua_S,1,0);
  int timeout = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSendTimeout'",NULL);
#endif
  {
   int tolua_ret = (int)  self->setSendTimeout(timeout);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSendTimeout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRecvTimeout of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_setRecvTimeout00
static int tolua_server_LuaSocket_setRecvTimeout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaSocket* self = (LuaSocket*)  tolua_tousertype(tolua_S,1,0);
  int timeout = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRecvTimeout'",NULL);
#endif
  {
   int tolua_ret = (int)  self->setRecvTimeout(timeout);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRecvTimeout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: readline of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_readline00
static int tolua_server_LuaSocket_readline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaSocket* self = (LuaSocket*)  tolua_tousertype(tolua_S,1,0);
  int retval = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'readline'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->readline(retval);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)retval);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: readall of class  LuaSocket */
#ifndef TOLUA_DISABLE_tolua_server_LuaSocket_readall00
static int tolua_server_LuaSocket_readall00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaSocket",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaSocket* self = (LuaSocket*)  tolua_tousertype(tolua_S,1,0);
  int retval = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'readall'",NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->readall(retval);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)retval);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'readall'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
int tolua_server_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  tolua_constant(tolua_S,"ACHIEVE_ATTR_VALUE",ACHIEVE_ATTR_VALUE);
  tolua_constant(tolua_S,"PROP_ENTITY_ID",PROP_ENTITY_ID);
  tolua_constant(tolua_S,"PROP_ENTITY_POSX",PROP_ENTITY_POSX);
  tolua_constant(tolua_S,"PROP_ENTITY_POSY",PROP_ENTITY_POSY);
  tolua_constant(tolua_S,"PROP_ENTITY_MODELID",PROP_ENTITY_MODELID);
  tolua_constant(tolua_S,"PROP_ENTITY_ICON",PROP_ENTITY_ICON);
  tolua_constant(tolua_S,"PROP_ENTITY_DIR",PROP_ENTITY_DIR);
  tolua_constant(tolua_S,"PROP_MAX_ENTITY",PROP_MAX_ENTITY);
  tolua_constant(tolua_S,"PROP_CREATURE_LEVEL",PROP_CREATURE_LEVEL);
  tolua_constant(tolua_S,"PROP_CREATURE_HP",PROP_CREATURE_HP);
  tolua_constant(tolua_S,"PROP_CREATURE_MP",PROP_CREATURE_MP);
  tolua_constant(tolua_S,"PROP_CREATURE_STATE",PROP_CREATURE_STATE);
  tolua_constant(tolua_S,"PROP_CREATURE_COLOR",PROP_CREATURE_COLOR);
  tolua_constant(tolua_S,"PROP_CREATURE_MAXHP",PROP_CREATURE_MAXHP);
  tolua_constant(tolua_S,"PROP_CREATURE_MAXMP",PROP_CREATURE_MAXMP);
  tolua_constant(tolua_S,"PROP_CREATURE_PHYSICAL_ATTACK_MIN",PROP_CREATURE_PHYSICAL_ATTACK_MIN);
  tolua_constant(tolua_S,"PROP_CREATURE_PHYSICAL_ATTACK_MAX",PROP_CREATURE_PHYSICAL_ATTACK_MAX);
  tolua_constant(tolua_S,"PROP_CREATURE_MAGIC_ATTACK_MIN",PROP_CREATURE_MAGIC_ATTACK_MIN);
  tolua_constant(tolua_S,"PROP_CREATURE_MAGIC_ATTACK_MAX",PROP_CREATURE_MAGIC_ATTACK_MAX);
  tolua_constant(tolua_S,"PROP_CREATURE_WIZARD_ATTACK_MIN",PROP_CREATURE_WIZARD_ATTACK_MIN);
  tolua_constant(tolua_S,"PROP_CREATURE_WIZARD_ATTACK_MAX",PROP_CREATURE_WIZARD_ATTACK_MAX);
  tolua_constant(tolua_S,"PROP_CREATURE_PYSICAL_DEFENCE_MIN",PROP_CREATURE_PYSICAL_DEFENCE_MIN);
  tolua_constant(tolua_S,"PROP_CREATURE_PYSICAL_DEFENCE_MAX",PROP_CREATURE_PYSICAL_DEFENCE_MAX);
  tolua_constant(tolua_S,"PROP_CREATURE_MAGIC_DEFENCE_MIN",PROP_CREATURE_MAGIC_DEFENCE_MIN);
  tolua_constant(tolua_S,"PROP_CREATURE_MAGIC_DEFENCE_MAX",PROP_CREATURE_MAGIC_DEFENCE_MAX);
  tolua_constant(tolua_S,"PROP_CREATURE_HITVALUE",PROP_CREATURE_HITVALUE);
  tolua_constant(tolua_S,"PROP_CREATURE_DODVALUE",PROP_CREATURE_DODVALUE);
  tolua_constant(tolua_S,"PROP_CREATURE_MAGIC_HITRATE",PROP_CREATURE_MAGIC_HITRATE);
  tolua_constant(tolua_S,"PROP_CREATURE_MAGIC_DOGERATE",PROP_CREATURE_MAGIC_DOGERATE);
  tolua_constant(tolua_S,"PROP_CREATURE_HP_RATE_RENEW",PROP_CREATURE_HP_RATE_RENEW);
  tolua_constant(tolua_S,"PROP_CREATURE_MP_RATE_RENEW",PROP_CREATURE_MP_RATE_RENEW);
  tolua_constant(tolua_S,"PROP_CREATURE_MOVEONESLOTTIME",PROP_CREATURE_MOVEONESLOTTIME);
  tolua_constant(tolua_S,"PROP_CREATURE_ATTACK_SPEED",PROP_CREATURE_ATTACK_SPEED);
  tolua_constant(tolua_S,"PROP_CREATURE_LUCK",PROP_CREATURE_LUCK);
  tolua_constant(tolua_S,"PROP_CREATURE_HP_RENEW",PROP_CREATURE_HP_RENEW);
  tolua_constant(tolua_S,"PROP_CREATURE_MP_RENEW",PROP_CREATURE_MP_RENEW);
  tolua_constant(tolua_S,"PROP_CREATURE_DIZZY_STATUS",PROP_CREATURE_DIZZY_STATUS);
  tolua_constant(tolua_S,"PROP_MAX_CREATURE",PROP_MAX_CREATURE);
  tolua_constant(tolua_S,"PROP_MONSTER_BORNPOINT",PROP_MONSTER_BORNPOINT);
  tolua_constant(tolua_S,"PROP_MONSTER_LEVEL_DIFF",PROP_MONSTER_LEVEL_DIFF);
  tolua_constant(tolua_S,"PROP_MONSTER_INITHPPERCENT",PROP_MONSTER_INITHPPERCENT);
  tolua_constant(tolua_S,"PROP_MONSTER_LIVE_TIMEOUT",PROP_MONSTER_LIVE_TIMEOUT);
  tolua_constant(tolua_S,"PROP_MONSTER_CIRCLE",PROP_MONSTER_CIRCLE);
  tolua_constant(tolua_S,"PROP_MAX_MONSTER",PROP_MAX_MONSTER);
  tolua_constant(tolua_S,"PROP_ACTOR_MONSTER_MODELID",PROP_ACTOR_MONSTER_MODELID);
  tolua_constant(tolua_S,"PROP_ACTOR_TEAMFUBEN_OUTPUT",PROP_ACTOR_TEAMFUBEN_OUTPUT);
  tolua_constant(tolua_S,"PROP_ACTOR_TEAMFUBEN_TEAMID",PROP_ACTOR_TEAMFUBEN_TEAMID);
  tolua_constant(tolua_S,"PROP_ACTOR_TEAMFUBEN_FBID",PROP_ACTOR_TEAMFUBEN_FBID);
  tolua_constant(tolua_S,"PROP_ACTOR_DEDUCT_DAMAGE",PROP_ACTOR_DEDUCT_DAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_ABSORB_DAMAGE",PROP_ACTOR_ABSORB_DAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_WEAPONAPPEARANCE",PROP_ACTOR_WEAPONAPPEARANCE);
  tolua_constant(tolua_S,"PROP_ACTOR_SWINGAPPEARANCE",PROP_ACTOR_SWINGAPPEARANCE);
  tolua_constant(tolua_S,"PROP_ACTOR_SOLDIERSOULAPPEARANCE",PROP_ACTOR_SOLDIERSOULAPPEARANCE);
  tolua_constant(tolua_S,"PROP_ACTOR_WEAPON_ID",PROP_ACTOR_WEAPON_ID);
  tolua_constant(tolua_S,"PROP_ACTOR_PK_MOD",PROP_ACTOR_PK_MOD);
  tolua_constant(tolua_S,"PROP_ACTOR_SEX",PROP_ACTOR_SEX);
  tolua_constant(tolua_S,"PROP_ACTOR_VOCATION",PROP_ACTOR_VOCATION);
  tolua_constant(tolua_S,"PROP_ACTOR_EXP",PROP_ACTOR_EXP);
  tolua_constant(tolua_S,"PROP_ACTOR_EXP_",PROP_ACTOR_EXP_);
  tolua_constant(tolua_S,"PROP_ACTOR_PK_VALUE",PROP_ACTOR_PK_VALUE);
  tolua_constant(tolua_S,"PROP_ACTOR_BAG_GRID_COUNT",PROP_ACTOR_BAG_GRID_COUNT);
  tolua_constant(tolua_S,"PROP_ACTOR_MONTH_CARD",PROP_ACTOR_MONTH_CARD);
  tolua_constant(tolua_S,"PROP_ACTOR_MEDICINE_CARD",PROP_ACTOR_MEDICINE_CARD);
  tolua_constant(tolua_S,"PROP_ACTOR_BIND_COIN",PROP_ACTOR_BIND_COIN);
  tolua_constant(tolua_S,"PROP_ACTOR_COIN",PROP_ACTOR_COIN);
  tolua_constant(tolua_S,"PROP_ACTOR_BIND_YUANBAO",PROP_ACTOR_BIND_YUANBAO);
  tolua_constant(tolua_S,"PROP_ACTOR_YUANBAO",PROP_ACTOR_YUANBAO);
  tolua_constant(tolua_S,"PROP_ACTOR_EVIL_PK_STATUS",PROP_ACTOR_EVIL_PK_STATUS);
  tolua_constant(tolua_S,"PROP_ACTOR_GUILD_ID",PROP_ACTOR_GUILD_ID);
  tolua_constant(tolua_S,"PROP_ACTOR_TEAM_ID",PROP_ACTOR_TEAM_ID);
  tolua_constant(tolua_S,"PROP_ACTOR_SOCIALMASK",PROP_ACTOR_SOCIALMASK);
  tolua_constant(tolua_S,"PROP_ACTOR_GUILDEXP",PROP_ACTOR_GUILDEXP);
  tolua_constant(tolua_S,"PROP_ACTOR_GM_LEVEL",PROP_ACTOR_GM_LEVEL);
  tolua_constant(tolua_S,"PROP_ACTOR_DEFAULT_SKILL",PROP_ACTOR_DEFAULT_SKILL);
  tolua_constant(tolua_S,"PROP_ACTOR_MULTI_EXP_UNUSED",PROP_ACTOR_MULTI_EXP_UNUSED);
  tolua_constant(tolua_S,"PROP_ACTOR_MULTI_EXP_UNUSED_",PROP_ACTOR_MULTI_EXP_UNUSED_);
  tolua_constant(tolua_S,"PROP_ACTOR_MERITORIOUSPOINT",PROP_ACTOR_MERITORIOUSPOINT);
  tolua_constant(tolua_S,"PROP_ACTOR_CURCUSTOMTITLE",PROP_ACTOR_CURCUSTOMTITLE);
  tolua_constant(tolua_S,"PROP_ACTOR_MERITORIOUS_DAY",PROP_ACTOR_MERITORIOUS_DAY);
  tolua_constant(tolua_S,"PROP_ACTOR_FOREVER_CARD_CLAG",PROP_ACTOR_FOREVER_CARD_CLAG);
  tolua_constant(tolua_S,"PROP_ACTOR_ACTIVITY",PROP_ACTOR_ACTIVITY);
  tolua_constant(tolua_S,"PROP_ACTOR_DRAW_YB_COUNT",PROP_ACTOR_DRAW_YB_COUNT);
  tolua_constant(tolua_S,"PROP_ACTOR_BATTLE_POWER",PROP_ACTOR_BATTLE_POWER);
  tolua_constant(tolua_S,"PROP_ACTOR_RECOVERSTATE",PROP_ACTOR_RECOVERSTATE);
  tolua_constant(tolua_S,"PROP_ACTOR_LOOT_PET_ID",PROP_ACTOR_LOOT_PET_ID);
  tolua_constant(tolua_S,"PROP_ACTOR_LASTLOGIN_OPEN_DAY_NUM",PROP_ACTOR_LASTLOGIN_OPEN_DAY_NUM);
  tolua_constant(tolua_S,"PROP_ACTOR_PERSONBOSS_JIFEN",PROP_ACTOR_PERSONBOSS_JIFEN);
  tolua_constant(tolua_S,"PROP_ACTOR_DEPORT_GRID_COUNT",PROP_ACTOR_DEPORT_GRID_COUNT);
  tolua_constant(tolua_S,"PROP_ACTOR_CIRCLE",PROP_ACTOR_CIRCLE);
  tolua_constant(tolua_S,"PROP_ACTOR_CIRCLE_SOUL",PROP_ACTOR_CIRCLE_SOUL);
  tolua_constant(tolua_S,"PROP_ACTOR_ANGER",PROP_ACTOR_ANGER);
  tolua_constant(tolua_S,"PROP_ACTOR_CHECKINS",PROP_ACTOR_CHECKINS);
  tolua_constant(tolua_S,"PROP_ACTOR_Prestige",PROP_ACTOR_Prestige);
  tolua_constant(tolua_S,"PROP_ACTOR_Bless",PROP_ACTOR_Bless);
  tolua_constant(tolua_S,"PROP_ACTOR_CARD_AWARD_FLAG",PROP_ACTOR_CARD_AWARD_FLAG);
  tolua_constant(tolua_S,"PROP_ACTOR_TOTAL_ONLINE_MIN",PROP_ACTOR_TOTAL_ONLINE_MIN);
  tolua_constant(tolua_S,"PROP_ACTOR_WINGPOINT",PROP_ACTOR_WINGPOINT);
  tolua_constant(tolua_S,"PROP_ACTOR_CURNEWTITLE",PROP_ACTOR_CURNEWTITLE);
  tolua_constant(tolua_S,"PROP_ACTOR_DIMENSIONALKEY",PROP_ACTOR_DIMENSIONALKEY);
  tolua_constant(tolua_S,"PROP_ACTOR_89_",PROP_ACTOR_89_);
  tolua_constant(tolua_S,"PROP_ACTOR_DEFAULTLOOTPETDIS",PROP_ACTOR_DEFAULTLOOTPETDIS);
  tolua_constant(tolua_S,"PROP_ACTOR_91_",PROP_ACTOR_91_);
  tolua_constant(tolua_S,"PROP_ACTOR_REBATE_DRAW_YB_COUNT",PROP_ACTOR_REBATE_DRAW_YB_COUNT);
  tolua_constant(tolua_S,"PROP_ACTOR_93_",PROP_ACTOR_93_);
  tolua_constant(tolua_S,"PROP_CROSS_SERVER_ACTORID",PROP_CROSS_SERVER_ACTORID);
  tolua_constant(tolua_S,"PROP_ACTOR_OFFICE",PROP_ACTOR_OFFICE);
  tolua_constant(tolua_S,"PROP_ACTOR_DEPOT_COIN",PROP_ACTOR_DEPOT_COIN);
  tolua_constant(tolua_S,"PROP_ACTOR_SUPPER_PLAY_LVL",PROP_ACTOR_SUPPER_PLAY_LVL);
  tolua_constant(tolua_S,"PROP_ACTOR_FRENZY",PROP_ACTOR_FRENZY);
  tolua_constant(tolua_S,"PROP_ACTOR_BE_KILLED_COUNT",PROP_ACTOR_BE_KILLED_COUNT);
  tolua_constant(tolua_S,"PROP_ACTOR_KILL_MONSTER_COUNT",PROP_ACTOR_KILL_MONSTER_COUNT);
  tolua_constant(tolua_S,"PROP_ACTOR_FLYSHOES",PROP_ACTOR_FLYSHOES);
  tolua_constant(tolua_S,"PROP_ACTOR_BROATNUM",PROP_ACTOR_BROATNUM);
  tolua_constant(tolua_S,"PROP_ACTOR_RECYCLE_POINTS",PROP_ACTOR_RECYCLE_POINTS);
  tolua_constant(tolua_S,"PROP_ACTOR_MERIDIALv",PROP_ACTOR_MERIDIALv);
  tolua_constant(tolua_S,"PROP_ACTOR_106_",PROP_ACTOR_106_);
  tolua_constant(tolua_S,"PROP_ACTOR_NEXT_SKILL_FLAG",PROP_ACTOR_NEXT_SKILL_FLAG);
  tolua_constant(tolua_S,"PROP_ACTOR_ZY",PROP_ACTOR_ZY);
  tolua_constant(tolua_S,"PROP_ACTOR_CRIT_DAMAGE",PROP_ACTOR_CRIT_DAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_CRIT_RATE",PROP_ACTOR_CRIT_RATE);
  tolua_constant(tolua_S,"PROP_ACTOR_CRIT_POWER",PROP_ACTOR_CRIT_POWER);
  tolua_constant(tolua_S,"PROP_ACTOR_DEDUCT_CRIT",PROP_ACTOR_DEDUCT_CRIT);
  tolua_constant(tolua_S,"PROP_ACTOR_MEDIC_RENEW",PROP_ACTOR_MEDIC_RENEW);
  tolua_constant(tolua_S,"PROP_ACTOR_AREA_ATTR",PROP_ACTOR_AREA_ATTR);
  tolua_constant(tolua_S,"PROP_ACTOR_AREA_ATTR_0",PROP_ACTOR_AREA_ATTR_0);
  tolua_constant(tolua_S,"PROP_ACTOR_GOLDEQ_ATTR1",PROP_ACTOR_GOLDEQ_ATTR1);
  tolua_constant(tolua_S,"PROP_ACTOR_GOLDEQ_ATTR2",PROP_ACTOR_GOLDEQ_ATTR2);
  tolua_constant(tolua_S,"PROP_ACTOR_GOLDEQ_ATTR3",PROP_ACTOR_GOLDEQ_ATTR3);
  tolua_constant(tolua_S,"PROP_ACTOR_GOLDEQ_ATTR4",PROP_ACTOR_GOLDEQ_ATTR4);
  tolua_constant(tolua_S,"PROP_ACTOR_GOLDEQ_ATTR5",PROP_ACTOR_GOLDEQ_ATTR5);
  tolua_constant(tolua_S,"PROP_ACTOR_GOLDEQ_ATTR6",PROP_ACTOR_GOLDEQ_ATTR6);
  tolua_constant(tolua_S,"PROP_ACTOR_GOLDEQ_ATTR7",PROP_ACTOR_GOLDEQ_ATTR7);
  tolua_constant(tolua_S,"PROP_ACTOR_GOLDEQ_ATTR8",PROP_ACTOR_GOLDEQ_ATTR8);
  tolua_constant(tolua_S,"PROP_ACTOR_CRIT_MUTRATE",PROP_ACTOR_CRIT_MUTRATE);
  tolua_constant(tolua_S,"PROP_ACTOR_BANCHAT",PROP_ACTOR_BANCHAT);
  tolua_constant(tolua_S,"PROP_ACTOR_PET_STATUS",PROP_ACTOR_PET_STATUS);
  tolua_constant(tolua_S,"PROP_ACTOR_DAMAGEBONUS",PROP_ACTOR_DAMAGEBONUS);
  tolua_constant(tolua_S,"PROP_ACTOR_IGNORDEFENCE",PROP_ACTOR_IGNORDEFENCE);
  tolua_constant(tolua_S,"PROP_ACTOR_SUCKBLOOD",PROP_ACTOR_SUCKBLOOD);
  tolua_constant(tolua_S,"PROP_ACTOR_EXP_POWER",PROP_ACTOR_EXP_POWER);
  tolua_constant(tolua_S,"PROP_ACTOR_LOOTBINDCOIN",PROP_ACTOR_LOOTBINDCOIN);
  tolua_constant(tolua_S,"PROP_ACTOR_CUT",PROP_ACTOR_CUT);
  tolua_constant(tolua_S,"PROP_ACTOR_NORMAL_ATK_ACC",PROP_ACTOR_NORMAL_ATK_ACC);
  tolua_constant(tolua_S,"PROP_ACTOR_HP_RATE",PROP_ACTOR_HP_RATE);
  tolua_constant(tolua_S,"PROP_ACTOR_PK_DEDUCT_DAMAGE",PROP_ACTOR_PK_DEDUCT_DAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_HP_2_MP_DAMAGE",PROP_ACTOR_HP_2_MP_DAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_ZL_MONEY",PROP_ACTOR_ZL_MONEY);
  tolua_constant(tolua_S,"PROP_ACTOR_CURREVIVEDURATION",PROP_ACTOR_CURREVIVEDURATION);
  tolua_constant(tolua_S,"PROP_ACTOR_HALFMONTHS_INCREASEDAMAGE",PROP_ACTOR_HALFMONTHS_INCREASEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_FIRE_INCREASEDAMAGE",PROP_ACTOR_FIRE_INCREASEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_DAYBYDAY_INCREASEDAMAGE",PROP_ACTOR_DAYBYDAY_INCREASEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_ICESTORM_INCREASEDAMAGE",PROP_ACTOR_ICESTORM_INCREASEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_FIRERAIN_INCREASEDAMAGE",PROP_ACTOR_FIRERAIN_INCREASEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_THUNDER_INCREASEDAMAGE",PROP_ACTOR_THUNDER_INCREASEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_BLOODBITE_INCREASEDAMAGE",PROP_ACTOR_BLOODBITE_INCREASEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_FIRESIGN_INCREASEDAMAGE",PROP_ACTOR_FIRESIGN_INCREASEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_HALFMONTHS_REDUCEDAMAGE",PROP_ACTOR_HALFMONTHS_REDUCEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_FIRE_REDUCEDAMAGE",PROP_ACTOR_FIRE_REDUCEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_DAYBYDAY_REDUCEDAMAGE",PROP_ACTOR_DAYBYDAY_REDUCEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_ICESTORM_REDUCEDAMAGE",PROP_ACTOR_ICESTORM_REDUCEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_FIRERAIN_REDUCEDAMAGE",PROP_ACTOR_FIRERAIN_REDUCEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_THUNDER_REDUCEDAMAGE",PROP_ACTOR_THUNDER_REDUCEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_BLOODBITE_REDUCEDAMAGE",PROP_ACTOR_BLOODBITE_REDUCEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_FIRESIGN_REDUCEDAMAGE",PROP_ACTOR_FIRESIGN_REDUCEDAMAGE);
  tolua_constant(tolua_S,"PROP_ACTOR_CREAT_TIME_MIN",PROP_ACTOR_CREAT_TIME_MIN);
  tolua_constant(tolua_S,"PROP_ACTOR_TRADINGQUOTA",PROP_ACTOR_TRADINGQUOTA);
  tolua_constant(tolua_S,"PROP_ACTOR_TRADINGQUOTA_",PROP_ACTOR_TRADINGQUOTA_);
  tolua_constant(tolua_S,"PROP_ACTOR_GUILD_LEVEL",PROP_ACTOR_GUILD_LEVEL);
  tolua_constant(tolua_S,"PROP_ACTOR__159",PROP_ACTOR__159);
  tolua_constant(tolua_S,"PROP_MAX_ACTOR",PROP_MAX_ACTOR);
  tolua_constant(tolua_S,"enRankBaseBegin",enRankBaseBegin);
  tolua_constant(tolua_S,"enRankAllLevel",enRankAllLevel);
  tolua_constant(tolua_S,"enRankVoc1Level",enRankVoc1Level);
  tolua_constant(tolua_S,"enRankVoc2Level",enRankVoc2Level);
  tolua_constant(tolua_S,"enRankVoc3Level",enRankVoc3Level);
  tolua_constant(tolua_S,"enMoBaiRankList",enMoBaiRankList);
  tolua_constant(tolua_S,"enPhyAtkMaxRankList",enPhyAtkMaxRankList);
  tolua_constant(tolua_S,"enMagicAtkMaxRankList",enMagicAtkMaxRankList);
  tolua_constant(tolua_S,"enWizardAtkMaxRankList",enWizardAtkMaxRankList);
  tolua_constant(tolua_S,"enCSALLLevel",enCSALLLevel);
  tolua_constant(tolua_S,"enCSMoBaiRank",enCSMoBaiRank);
  tolua_constant(tolua_S,"enRankBaseEnd",enRankBaseEnd);
  tolua_constant(tolua_S,"enRankGuildSbkSiege",enRankGuildSbkSiege);
  tolua_constant(tolua_S,"enRankTodayConsumeYuBao",enRankTodayConsumeYuBao);
  tolua_constant(tolua_S,"enRankYesterdayConsumeYuBao",enRankYesterdayConsumeYuBao);
  tolua_constant(tolua_S,"enAddMeritorious",enAddMeritorious);
  tolua_constant(tolua_S,"enAddWarehouse",enAddWarehouse);
  tolua_constant(tolua_S,"enAddEquip",enAddEquip);
  tolua_constant(tolua_S,"enAddGod",enAddGod);
  tolua_constant(tolua_S,"enSubHit",enSubHit);
  tolua_constant(tolua_S,"enAddToken",enAddToken);
  tolua_constant(tolua_S,"enAchievePrivilegeMax",enAchievePrivilegeMax);
  tolua_constant(tolua_S,"mtCoin",mtCoin);
  tolua_constant(tolua_S,"mtBindCoin",mtBindCoin);
  tolua_constant(tolua_S,"mtBindYuanbao",mtBindYuanbao);
  tolua_constant(tolua_S,"mtYuanbao",mtYuanbao);
  tolua_constant(tolua_S,"mtFlyShoes",mtFlyShoes);
  tolua_constant(tolua_S,"mtJyQuota",mtJyQuota);
  tolua_constant(tolua_S,"mtCircleSoul",mtCircleSoul);
  tolua_constant(tolua_S,"mtWingSoul",mtWingSoul);
  tolua_constant(tolua_S,"mtPosStrongValue",mtPosStrongValue);
  tolua_constant(tolua_S,"mtSoldierSoul",mtSoldierSoul);
  tolua_constant(tolua_S,"mtBossJiFen",mtBossJiFen);
  tolua_constant(tolua_S,"mtMoneyTypeCount",mtMoneyTypeCount);
  tolua_constant(tolua_S,"mtMoneyTypeStart",mtMoneyTypeStart);
  tolua_constant(tolua_S,"tstGetItem",tstGetItem);
  tolua_constant(tolua_S,"tstProperty",tstProperty);
  tolua_constant(tolua_S,"tstEcomeny",tstEcomeny);
  tolua_constant(tolua_S,"tstFigthing",tstFigthing);
  tolua_constant(tolua_S,"tstUI",tstUI);
  tolua_constant(tolua_S,"tstChatSystem",tstChatSystem);
  tolua_constant(tolua_S,"tstChatNotice",tstChatNotice);
  tolua_constant(tolua_S,"tstRevolving",tstRevolving);
  tolua_constant(tolua_S,"tstBigRevolving",tstBigRevolving);
  tolua_constant(tolua_S,"tstPop",tstPop);
  tolua_constant(tolua_S,"tstExclusive",tstExclusive);
  tolua_constant(tolua_S,"tstKillDrop",tstKillDrop);
  tolua_constant(tolua_S,"tstFirstKillDrop",tstFirstKillDrop);
  tolua_constant(tolua_S,"tstBossRelive",tstBossRelive);
  tolua_constant(tolua_S,"tstDropWindows",tstDropWindows);
  tolua_constant(tolua_S,"tstUIWindows",tstUIWindows);
  tolua_constant(tolua_S,"tstBindCoinNotEnough",tstBindCoinNotEnough);
  tolua_constant(tolua_S,"tstCoinNotEnough",tstCoinNotEnough);
  tolua_constant(tolua_S,"tstBindYbNotEnough",tstBindYbNotEnough);
  tolua_constant(tolua_S,"tstYbNotEnough",tstYbNotEnough);
  tolua_constant(tolua_S,"tstUpdateClient",tstUpdateClient);
  tolua_constant(tolua_S,"ttInvalidTmType",ttInvalidTmType);
  tolua_constant(tolua_S,"ttTipmsgWindow",ttTipmsgWindow);
  tolua_constant(tolua_S,"ttScreenCenter",ttScreenCenter);
  tolua_constant(tolua_S,"ttDialog",ttDialog);
  tolua_constant(tolua_S,"ttBroadcast",ttBroadcast);
  tolua_constant(tolua_S,"ttMessage",ttMessage);
  tolua_constant(tolua_S,"ttWarmTip",ttWarmTip);
  tolua_constant(tolua_S,"ttGmTip",ttGmTip);
  tolua_constant(tolua_S,"ttChatWindow",ttChatWindow);
  tolua_constant(tolua_S,"ttPropertyTip",ttPropertyTip);
  tolua_constant(tolua_S,"ttFlyTip",ttFlyTip);
  tolua_constant(tolua_S,"ttShortcutTip",ttShortcutTip);
  tolua_constant(tolua_S,"ttGetResources",ttGetResources);
  tolua_constant(tolua_S,"smGuildCommon",smGuildCommon);
  tolua_constant(tolua_S,"smGuildElite",smGuildElite);
  tolua_constant(tolua_S,"smGuildTangzhu",smGuildTangzhu);
  tolua_constant(tolua_S,"smGuildAssistLeader",smGuildAssistLeader);
  tolua_constant(tolua_S,"smGuildLeader",smGuildLeader);
  tolua_constant(tolua_S,"smTeamMember",smTeamMember);
  tolua_constant(tolua_S,"smTeamCaptin",smTeamCaptin);
  tolua_constant(tolua_S,"smStoreBroadcastClose",smStoreBroadcastClose);
  tolua_constant(tolua_S,"smHideFationCloth",smHideFationCloth);
  tolua_constant(tolua_S,"smDarwActivityAward",smDarwActivityAward);
  tolua_constant(tolua_S,"smHideHeadMsg",smHideHeadMsg);
  tolua_constant(tolua_S,"smShowRedWeaponEffect",smShowRedWeaponEffect);
  tolua_constant(tolua_S,"smIsInCommonServer",smIsInCommonServer);
  tolua_constant(tolua_S,"smGmFlag",smGmFlag);
  tolua_constant(tolua_S,"smHideWeaponExtend",smHideWeaponExtend);
  tolua_constant(tolua_S,"smIsFamous",smIsFamous);
  tolua_constant(tolua_S,"smHideExtraWeapon",smHideExtraWeapon);
  tolua_constant(tolua_S,"smHideExtraDress",smHideExtraDress);
  tolua_module(tolua_S,"Item",0);
  tolua_beginmodule(tolua_S,"Item");
   tolua_constant(tolua_S,"itUndefinedType",Item::itUndefinedType);
   tolua_constant(tolua_S,"itWeapon",Item::itWeapon);
   tolua_constant(tolua_S,"itDress",Item::itDress);
   tolua_constant(tolua_S,"itHelmet",Item::itHelmet);
   tolua_constant(tolua_S,"itNecklace",Item::itNecklace);
   tolua_constant(tolua_S,"itDecoration",Item::itDecoration);
   tolua_constant(tolua_S,"itBracelet",Item::itBracelet);
   tolua_constant(tolua_S,"itRing",Item::itRing);
   tolua_constant(tolua_S,"itGirdle",Item::itGirdle);
   tolua_constant(tolua_S,"itShoes",Item::itShoes);
   tolua_constant(tolua_S,"itEquipDiamond",Item::itEquipDiamond);
   tolua_constant(tolua_S,"itSzBambooHat",Item::itSzBambooHat);
   tolua_constant(tolua_S,"itSztFaceNail",Item::itSztFaceNail);
   tolua_constant(tolua_S,"itSzitCape",Item::itSzitCape);
   tolua_constant(tolua_S,"itSzitShiel",Item::itSzitShiel);
   tolua_constant(tolua_S,"itPearl",Item::itPearl);
   tolua_constant(tolua_S,"itMagicpWeapon",Item::itMagicpWeapon);
   tolua_constant(tolua_S,"itSilverNeedle",Item::itSilverNeedle);
   tolua_constant(tolua_S,"itDetermination",Item::itDetermination);
   tolua_constant(tolua_S,"itGoldSeal",Item::itGoldSeal);
   tolua_constant(tolua_S,"itSandersPearl",Item::itSandersPearl);
   tolua_constant(tolua_S,"itSilverHairClasp",Item::itSilverHairClasp);
   tolua_constant(tolua_S,"itHeartNourishingJade",Item::itHeartNourishingJade);
   tolua_constant(tolua_S,"itGoldObsidianBead",Item::itGoldObsidianBead);
   tolua_constant(tolua_S,"itBlackSandalwoodStone",Item::itBlackSandalwoodStone);
   tolua_constant(tolua_S,"itEquipMax",Item::itEquipMax);
   tolua_constant(tolua_S,"itQuestItem",Item::itQuestItem);
   tolua_constant(tolua_S,"itFunctionItem",Item::itFunctionItem);
   tolua_constant(tolua_S,"itDailyUse",Item::itDailyUse);
   tolua_constant(tolua_S,"itAutoUse",Item::itAutoUse);
   tolua_constant(tolua_S,"itGold",Item::itGold);
   tolua_constant(tolua_S,"itItems",Item::itItems);
   tolua_constant(tolua_S,"itSlowHpdMed",Item::itSlowHpdMed);
   tolua_constant(tolua_S,"itSlowBluedMed",Item::itSlowBluedMed);
   tolua_constant(tolua_S,"itFastMedicament",Item::itFastMedicament);
   tolua_constant(tolua_S,"itGift",Item::itGift);
   tolua_constant(tolua_S,"itRandomMove",Item::itRandomMove);
   tolua_constant(tolua_S,"itDoubleExp",Item::itDoubleExp);
   tolua_constant(tolua_S,"itHair",Item::itHair);
   tolua_constant(tolua_S,"itYuanBaoCharge",Item::itYuanBaoCharge);
   tolua_constant(tolua_S,"itBox",Item::itBox);
   tolua_constant(tolua_S,"itGuaJiJuanZhou",Item::itGuaJiJuanZhou);
   tolua_constant(tolua_S,"itAddBuff",Item::itAddBuff);
   tolua_constant(tolua_S,"itRecover",Item::itRecover);
   tolua_constant(tolua_S,"itSelectOneBox",Item::itSelectOneBox);
   tolua_constant(tolua_S,"itRebateYuanBaoCharge",Item::itRebateYuanBaoCharge);
   tolua_constant(tolua_S,"itItemTypeCount",Item::itItemTypeCount);
   tolua_constant(tolua_S,"ipItemID",Item::ipItemID);
   tolua_constant(tolua_S,"ipItemCount",Item::ipItemCount);
   tolua_constant(tolua_S,"ipItemStrong",Item::ipItemStrong);
   tolua_constant(tolua_S,"ipItemQuality",Item::ipItemQuality);
   tolua_constant(tolua_S,"ipItemBind",Item::ipItemBind);
   tolua_constant(tolua_S,"ipItemType",Item::ipItemType);
   tolua_constant(tolua_S,"ipItemHole1IsOpen",Item::ipItemHole1IsOpen);
   tolua_constant(tolua_S,"ipItemHole2IsOpen",Item::ipItemHole2IsOpen);
   tolua_constant(tolua_S,"ipItemHole3IsOpen",Item::ipItemHole3IsOpen);
   tolua_constant(tolua_S,"ipItemHole4IsOpen",Item::ipItemHole4IsOpen);
   tolua_constant(tolua_S,"ipItemHole1Item",Item::ipItemHole1Item);
   tolua_constant(tolua_S,"ipItemHole2Item",Item::ipItemHole2Item);
   tolua_constant(tolua_S,"ipItemHole3Item",Item::ipItemHole3Item);
   tolua_constant(tolua_S,"ipItemHole4Item",Item::ipItemHole4Item);
   tolua_constant(tolua_S,"ipItemRandForge",Item::ipItemRandForge);
   tolua_constant(tolua_S,"ipItemForgeTimes",Item::ipItemForgeTimes);
   tolua_constant(tolua_S,"ipItemForgeProperty1Value",Item::ipItemForgeProperty1Value);
   tolua_constant(tolua_S,"ipItemForgeProperty2Value",Item::ipItemForgeProperty2Value);
   tolua_constant(tolua_S,"ipItemForgeProperty3Value",Item::ipItemForgeProperty3Value);
   tolua_constant(tolua_S,"ipItemDua",Item::ipItemDua);
   tolua_constant(tolua_S,"ipItemDuaMax",Item::ipItemDuaMax);
   tolua_constant(tolua_S,"ipItemExpiredTime",Item::ipItemExpiredTime);
   tolua_constant(tolua_S,"ipItemLuck",Item::ipItemLuck);
   tolua_constant(tolua_S,"ipItemInscriptExp",Item::ipItemInscriptExp);
   tolua_constant(tolua_S,"ipItemSharp",Item::ipItemSharp);
   tolua_constant(tolua_S,"ipItemLostStar",Item::ipItemLostStar);
   tolua_constant(tolua_S,"ipItemInscriptLevel",Item::ipItemInscriptLevel);
   tolua_constant(tolua_S,"ipItemStar",Item::ipItemStar);
   tolua_constant(tolua_S,"ipIdentifySlotNum",Item::ipIdentifySlotNum);
   tolua_constant(tolua_S,"ipIdentifyNum",Item::ipIdentifyNum);
   tolua_constant(tolua_S,"ipItemStaticPropStart",Item::ipItemStaticPropStart);
   tolua_constant(tolua_S,"ipItemDealMoneyType",Item::ipItemDealMoneyType);
   tolua_constant(tolua_S,"ipItemDealMoneyCount",Item::ipItemDealMoneyCount);
   tolua_constant(tolua_S,"ipItemActorLevel",Item::ipItemActorLevel);
   tolua_constant(tolua_S,"ipItemSuitId",Item::ipItemSuitId);
   tolua_constant(tolua_S,"ipItemForgeMaxTimes",Item::ipItemForgeMaxTimes);
   tolua_constant(tolua_S,"ipItemDenyStorage",Item::ipItemDenyStorage);
   tolua_constant(tolua_S,"ipItemDenySell",Item::ipItemDenySell);
   tolua_constant(tolua_S,"ipItemInlayable",Item::ipItemInlayable);
   tolua_constant(tolua_S,"ipItemNeedVocation",Item::ipItemNeedVocation);
   tolua_constant(tolua_S,"ipItemNeedSex",Item::ipItemNeedSex);
   tolua_constant(tolua_S,"ipItemSmithId",Item::ipItemSmithId);
   tolua_constant(tolua_S,"ipItemBreakId",Item::ipItemBreakId);
   tolua_constant(tolua_S,"ipItemNotConsumeForCircleForge",Item::ipItemNotConsumeForCircleForge);
   tolua_constant(tolua_S,"ipItemStaticDuaMax",Item::ipItemStaticDuaMax);
   tolua_constant(tolua_S,"ipItemForgeProtect",Item::ipItemForgeProtect);
   tolua_constant(tolua_S,"ipItemShape",Item::ipItemShape);
   tolua_constant(tolua_S,"ipItemMatchAllSuite",Item::ipItemMatchAllSuite);
   tolua_constant(tolua_S,"ipItemSpecialRingType",Item::ipItemSpecialRingType);
   tolua_constant(tolua_S,"ipItemStrongCount",Item::ipItemStrongCount);
   tolua_constant(tolua_S,"ipItemActorCircle",Item::ipItemActorCircle);
   tolua_constant(tolua_S,"ipItemDenyGuildDepot",Item::ipItemDenyGuildDepot);
   tolua_constant(tolua_S,"ipItemCanIdentify",Item::ipItemCanIdentify);
   tolua_constant(tolua_S,"ipItemMaxProperty",Item::ipItemMaxProperty);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"ufUnBind",ufUnBind);
  tolua_constant(tolua_S,"ufBinded",ufBinded);
  tolua_constant(tolua_S,"ufDenyDeal",ufDenyDeal);
  tolua_constant(tolua_S,"dtByte",dtByte);
  tolua_constant(tolua_S,"dtChar",dtChar);
  tolua_constant(tolua_S,"dtWord",dtWord);
  tolua_constant(tolua_S,"dtShort",dtShort);
  tolua_constant(tolua_S,"dtInt",dtInt);
  tolua_constant(tolua_S,"dtUint",dtUint);
  tolua_constant(tolua_S,"dtInt64",dtInt64);
  tolua_constant(tolua_S,"dtUint64",dtUint64);
  tolua_constant(tolua_S,"dtString",dtString);
  tolua_constant(tolua_S,"esStateStand",esStateStand);
  tolua_constant(tolua_S,"esStateMove",esStateMove);
  tolua_constant(tolua_S,"esStateBattle",esStateBattle);
  tolua_constant(tolua_S,"esStateDeath",esStateDeath);
  tolua_constant(tolua_S,"esStateReturnHome",esStateReturnHome);
  tolua_constant(tolua_S,"esStateStall",esStateStall);
  tolua_constant(tolua_S,"esStateMoveForbid",esStateMoveForbid);
  tolua_constant(tolua_S,"esStateSlient",esStateSlient);
  tolua_constant(tolua_S,"esStateDizzy",esStateDizzy);
  tolua_constant(tolua_S,"esStateAutoBattle",esStateAutoBattle);
  tolua_constant(tolua_S,"esStateHide",esStateHide);
  tolua_constant(tolua_S,"esDisableSkillCD",esDisableSkillCD);
  tolua_constant(tolua_S,"esPaTaFubenBattle",esPaTaFubenBattle);
  tolua_constant(tolua_S,"esStateOwnPet",esStateOwnPet);
  tolua_constant(tolua_S,"esStateHeroMerge",esStateHeroMerge);
  tolua_constant(tolua_S,"esStateSing",esStateSing);
  tolua_constant(tolua_S,"esStateDenyAttackedByActor",esStateDenyAttackedByActor);
  tolua_constant(tolua_S,"esStateTeamFuben",esStateTeamFuben);
  tolua_constant(tolua_S,"esSupplyBattleSack",esSupplyBattleSack);
  tolua_constant(tolua_S,"esState_19",esState_19);
  tolua_constant(tolua_S,"esState_20",esState_20);
  tolua_constant(tolua_S,"esState_21",esState_21);
  tolua_constant(tolua_S,"esState_22",esState_22);
  tolua_constant(tolua_S,"esState_23",esState_23);
  tolua_constant(tolua_S,"esState_24",esState_24);
  tolua_constant(tolua_S,"esState_25",esState_25);
  tolua_constant(tolua_S,"esState_26",esState_26);
  tolua_constant(tolua_S,"esState_27",esState_27);
  tolua_constant(tolua_S,"esState_28",esState_28);
  tolua_constant(tolua_S,"esState_29",esState_29);
  tolua_constant(tolua_S,"esState_30",esState_30);
  tolua_constant(tolua_S,"esState_31",esState_31);
  tolua_constant(tolua_S,"esMaxStateCount",esMaxStateCount);
  tolua_constant(tolua_S,"itWeaponPos",itWeaponPos);
  tolua_constant(tolua_S,"itDressPos",itDressPos);
  tolua_constant(tolua_S,"itHelmetPos",itHelmetPos);
  tolua_constant(tolua_S,"itNecklacePos",itNecklacePos);
  tolua_constant(tolua_S,"itDecorationPos",itDecorationPos);
  tolua_constant(tolua_S,"itBraceletPos",itBraceletPos);
  tolua_constant(tolua_S,"itRingPos",itRingPos);
  tolua_constant(tolua_S,"itGirdlePos",itGirdlePos);
  tolua_constant(tolua_S,"itShoesPos",itShoesPos);
  tolua_constant(tolua_S,"itEquipDiamondPos",itEquipDiamondPos);
  tolua_constant(tolua_S,"itBambooHatPos",itBambooHatPos);
  tolua_constant(tolua_S,"itFaceNailPos",itFaceNailPos);
  tolua_constant(tolua_S,"itCapePos",itCapePos);
  tolua_constant(tolua_S,"itShieldPos",itShieldPos);
  tolua_constant(tolua_S,"itPearlPos",itPearlPos);
  tolua_constant(tolua_S,"itMagicpPos",itMagicpPos);
  tolua_constant(tolua_S,"itSilverNeedlePos",itSilverNeedlePos);
  tolua_constant(tolua_S,"itDeterminationPos",itDeterminationPos);
  tolua_constant(tolua_S,"itGoldSealPos",itGoldSealPos);
  tolua_constant(tolua_S,"itSandersPearlPos",itSandersPearlPos);
  tolua_constant(tolua_S,"itSilverHairClaspPos",itSilverHairClaspPos);
  tolua_constant(tolua_S,"itHeartNourishingJadePos",itHeartNourishingJadePos);
  tolua_constant(tolua_S,"itGoldObsidianBeadPos",itGoldObsidianBeadPos);
  tolua_constant(tolua_S,"itBlackSandalwoodStonePos",itBlackSandalwoodStonePos);
  tolua_constant(tolua_S,"itMaxEquipPos",itMaxEquipPos);
  tolua_constant(tolua_S,"scfGuildSiege",scfGuildSiege);
  tolua_constant(tolua_S,"stNoCityPos",stNoCityPos);
  tolua_constant(tolua_S,"stRealMaster",stRealMaster);
  tolua_constant(tolua_S,"stEastProtector",stEastProtector);
  tolua_constant(tolua_S,"stSouthProtector",stSouthProtector);
  tolua_constant(tolua_S,"stWestProtector",stWestProtector);
  tolua_constant(tolua_S,"stNorthProtector",stNorthProtector);
  tolua_constant(tolua_S,"stMaxGuildCityPos",stMaxGuildCityPos);
  tolua_constant(tolua_S,"gptEnter",gptEnter);
  tolua_constant(tolua_S,"gptMove",gptMove);
  tolua_constant(tolua_S,"gptDisappear",gptDisappear);
  tolua_constant(tolua_S,"glcLeaderChange",glcLeaderChange);
  tolua_constant(tolua_S,"glcImpeachLeader",glcImpeachLeader);
  tolua_constant(tolua_S,"glcGmBackStageSet",glcGmBackStageSet);
  tolua_constant(tolua_S,"gttKillMonster",gttKillMonster);
  tolua_constant(tolua_S,"lvGodStove",lvGodStove);
  tolua_constant(tolua_S,"lvExploit",lvExploit);
  tolua_constant(tolua_S,"enGuildEvent_NULL",enGuildEvent_NULL);
  tolua_constant(tolua_S,"enGuildEvent_Create",enGuildEvent_Create);
  tolua_constant(tolua_S,"enGuildEvent_MemberJoin",enGuildEvent_MemberJoin);
  tolua_constant(tolua_S,"enGuildEvent_MemberLeft",enGuildEvent_MemberLeft);
  tolua_constant(tolua_S,"enGuildEvent_TickMember",enGuildEvent_TickMember);
  tolua_constant(tolua_S,"enGuildEvent_LeaderChange",enGuildEvent_LeaderChange);
  tolua_constant(tolua_S,"enGuildEvent_AddOfficer",enGuildEvent_AddOfficer);
  tolua_constant(tolua_S,"enGuildEvent_DelOfficer",enGuildEvent_DelOfficer);
  tolua_constant(tolua_S,"enGuildEvent_levelUp",enGuildEvent_levelUp);
  tolua_constant(tolua_S,"enGuildEvent_Impeach",enGuildEvent_Impeach);
  tolua_constant(tolua_S,"enGuildEvent_War",enGuildEvent_War);
  tolua_constant(tolua_S,"enGuildEvent_ToWar",enGuildEvent_ToWar);
  tolua_constant(tolua_S,"enGuildEvent_DonateCoin",enGuildEvent_DonateCoin);
  tolua_constant(tolua_S,"enGuildEvent_DonateYB",enGuildEvent_DonateYB);
  tolua_constant(tolua_S,"enGuildEvent_UpOfferice",enGuildEvent_UpOfferice);
  tolua_constant(tolua_S,"enGuildEvent_Max",enGuildEvent_Max);
  tolua_constant(tolua_S,"enApplyJoin_NoErr",enApplyJoin_NoErr);
  tolua_constant(tolua_S,"enApplyJoin_HasAgreed",enApplyJoin_HasAgreed);
  tolua_constant(tolua_S,"enApplyJoin_HasSame",enApplyJoin_HasSame);
  tolua_constant(tolua_S,"enApplyJoin_NoGuild",enApplyJoin_NoGuild);
  tolua_constant(tolua_S,"enApplyJoin_MemberLimit",enApplyJoin_MemberLimit);
  tolua_constant(tolua_S,"enApplyJoin_ActorErr",enApplyJoin_ActorErr);
  tolua_constant(tolua_S,"enApplyJoin_HasGuild",enApplyJoin_HasGuild);
  tolua_constant(tolua_S,"enApplyJoin_UnKnown",enApplyJoin_UnKnown);
  tolua_constant(tolua_S,"enApplyJoin_Max",enApplyJoin_Max);
  tolua_constant(tolua_S,"enCheckJoin_NoErr",enCheckJoin_NoErr);
  tolua_constant(tolua_S,"enCheckJoin_NoApply",enCheckJoin_NoApply);
  tolua_constant(tolua_S,"enCheckJoin_NoGuild",enCheckJoin_NoGuild);
  tolua_constant(tolua_S,"enCheckJoin_MemberLimit",enCheckJoin_MemberLimit);
  tolua_constant(tolua_S,"enCheckJoin_HasGuild",enCheckJoin_HasGuild);
  tolua_constant(tolua_S,"enCheckJoin_UnKnown",enCheckJoin_UnKnown);
  tolua_constant(tolua_S,"enCheckJoin_MAx",enCheckJoin_MAx);
  tolua_constant(tolua_S,"enMailEvent_None",enMailEvent_None);
  tolua_constant(tolua_S,"enMailEvent_LevelUp",enMailEvent_LevelUp);
  tolua_constant(tolua_S,"enMailEvent_RideLevelUp",enMailEvent_RideLevelUp);
  tolua_constant(tolua_S,"enMailEven_Max",enMailEven_Max);
  tolua_constant(tolua_S,"enSmithLockType_No",enSmithLockType_No);
  tolua_constant(tolua_S,"enSmithLockType_Type",enSmithLockType_Type);
  tolua_constant(tolua_S,"enSmithLockType_All",enSmithLockType_All);
  tolua_constant(tolua_S,"enGenerateItemAttr_No",enGenerateItemAttr_No);
  tolua_constant(tolua_S,"enGenerateItemAttr_SmithAttr",enGenerateItemAttr_SmithAttr);
  tolua_constant(tolua_S,"enActor",enActor);
  tolua_constant(tolua_S,"enMonster",enMonster);
  tolua_constant(tolua_S,"enNpc",enNpc);
  tolua_constant(tolua_S,"enDropItem",enDropItem);
  tolua_constant(tolua_S,"enPet",enPet);
  tolua_constant(tolua_S,"enFire",enFire);
  tolua_constant(tolua_S,"enTransfer",enTransfer);
  tolua_constant(tolua_S,"enHero",enHero);
  tolua_constant(tolua_S,"enGatherMonster",enGatherMonster);
  tolua_constant(tolua_S,"ciChannelSecret",ciChannelSecret);
  tolua_constant(tolua_S,"ciChannelNear",ciChannelNear);
  tolua_constant(tolua_S,"ciChannelGuild",ciChannelGuild);
  tolua_constant(tolua_S,"ciChannelTeam",ciChannelTeam);
  tolua_constant(tolua_S,"ciChannelWorld",ciChannelWorld);
  tolua_constant(tolua_S,"ciChannelTipmsg",ciChannelTipmsg);
  tolua_constant(tolua_S,"ciChannelSystem",ciChannelSystem);
  tolua_constant(tolua_S,"ciChannelIntegrated",ciChannelIntegrated);
  tolua_constant(tolua_S,"ciChannelMax",ciChannelMax);
  tolua_constant(tolua_S,"enVocNone",enVocNone);
  tolua_constant(tolua_S,"enVocWarrior",enVocWarrior);
  tolua_constant(tolua_S,"enVocMagician",enVocMagician);
  tolua_constant(tolua_S,"enVocWizard",enVocWizard);
  tolua_constant(tolua_S,"enMaxVocCount",enMaxVocCount);
  tolua_constant(tolua_S,"aeNoEvent",aeNoEvent);
  tolua_constant(tolua_S,"aeLevel",aeLevel);
  tolua_constant(tolua_S,"aeUserLogin",aeUserLogin);
  tolua_constant(tolua_S,"aeUserLogout",aeUserLogout);
  tolua_constant(tolua_S,"aeOnActorDeath",aeOnActorDeath);
  tolua_constant(tolua_S,"aeReliveTimeOut",aeReliveTimeOut);
  tolua_constant(tolua_S,"aeNewDayArrive",aeNewDayArrive);
  tolua_constant(tolua_S,"aeOnActorBeKilled",aeOnActorBeKilled);
  tolua_constant(tolua_S,"aeWithDrawYuanBao",aeWithDrawYuanBao);
  tolua_constant(tolua_S,"aeConsumeYb",aeConsumeYb);
  tolua_constant(tolua_S,"aeOnEnterFuben",aeOnEnterFuben);
  tolua_constant(tolua_S,"aeOnExitFuben",aeOnExitFuben);
  tolua_constant(tolua_S,"aeGuild",aeGuild);
  tolua_constant(tolua_S,"aeEquipComposite",aeEquipComposite);
  tolua_constant(tolua_S,"aeBuffRemoved",aeBuffRemoved);
  tolua_constant(tolua_S,"aeLeaveTeam",aeLeaveTeam);
  tolua_constant(tolua_S,"aeCircle",aeCircle);
  tolua_constant(tolua_S,"aeChangeName",aeChangeName);
  tolua_constant(tolua_S,"aeAsyncOpResult",aeAsyncOpResult);
  tolua_constant(tolua_S,"aeHero",aeHero);
  tolua_constant(tolua_S,"aeHurtMonster",aeHurtMonster);
  tolua_constant(tolua_S,"aeMaxEventCount",aeMaxEventCount);
  tolua_constant(tolua_S,"fpPeaceful",fpPeaceful);
  tolua_constant(tolua_S,"fpTeam",fpTeam);
  tolua_constant(tolua_S,"fpGuild",fpGuild);
  tolua_constant(tolua_S,"fpEvil",fpEvil);
  tolua_constant(tolua_S,"fpPk",fpPk);
  tolua_constant(tolua_S,"fpZY",fpZY);
  tolua_constant(tolua_S,"fpUnion",fpUnion);
  tolua_constant(tolua_S,"fpCount",fpCount);
  tolua_constant(tolua_S,"batExp",batExp);
  tolua_constant(tolua_S,"batBindCoin",batBindCoin);
  tolua_constant(tolua_S,"batCoin",batCoin);
  tolua_constant(tolua_S,"batActivityExp",batActivityExp);
  tolua_constant(tolua_S,"batCirclePower",batCirclePower);
  tolua_constant(tolua_S,"batGuildCoin",batGuildCoin);
  tolua_constant(tolua_S,"batSkillExpItem",batSkillExpItem);
  tolua_constant(tolua_S,"batNormalItem",batNormalItem);
  tolua_constant(tolua_S,"bat9",bat9);
  tolua_constant(tolua_S,"batBloodSoulItem",batBloodSoulItem);
  tolua_constant(tolua_S,"batMeritorious",batMeritorious);
  tolua_constant(tolua_S,"batDragonSoulItem",batDragonSoulItem);
  tolua_constant(tolua_S,"bat15",bat15);
  tolua_constant(tolua_S,"batBindGold",batBindGold);
  tolua_constant(tolua_S,"batBossJifen",batBossJifen);
  tolua_constant(tolua_S,"bat_29",bat_29);
  tolua_constant(tolua_S,"batMAx",batMAx);
  tolua_constant(tolua_S,"qatEquipment",qatEquipment);
  tolua_constant(tolua_S,"qatMoney",qatMoney);
  tolua_constant(tolua_S,"qatBindMoney",qatBindMoney);
  tolua_constant(tolua_S,"qatBindYb",qatBindYb);
  tolua_constant(tolua_S,"qatYuanbao",qatYuanbao);
  tolua_constant(tolua_S,"qatExp",qatExp);
  tolua_constant(tolua_S,"qatCircleSoul",qatCircleSoul);
  tolua_constant(tolua_S,"qatFlyShoes",qatFlyShoes);
  tolua_constant(tolua_S,"qatBroat",qatBroat);
  tolua_constant(tolua_S,"qaIntegral",qaIntegral);
  tolua_constant(tolua_S,"qaGuildDonate",qaGuildDonate);
  tolua_constant(tolua_S,"qatPrestigeNum",qatPrestigeNum);
  tolua_constant(tolua_S,"qatActivity",qatActivity);
  tolua_constant(tolua_S,"qatMultiExpUnused",qatMultiExpUnused);
  tolua_constant(tolua_S,"qatBasicExpNum",qatBasicExpNum);
  tolua_constant(tolua_S,"qatStatic",qatStatic);
  tolua_constant(tolua_S,"qatTitle",qatTitle);
  tolua_constant(tolua_S,"qatWarPoint",qatWarPoint);
  tolua_constant(tolua_S,"qatGhost",qatGhost);
  tolua_constant(tolua_S,"qatJyQuota",qatJyQuota);
  tolua_constant(tolua_S,"qatZLMoney",qatZLMoney);
  tolua_constant(tolua_S,"qatReviveDuration",qatReviveDuration);
  tolua_constant(tolua_S,"qatLootPet",qatLootPet);
  tolua_constant(tolua_S,"qatCustomTitle",qatCustomTitle);
  tolua_constant(tolua_S,"qatSecretBoxScore",qatSecretBoxScore);
  tolua_constant(tolua_S,"qatWordsBoxScore",qatWordsBoxScore);
  tolua_constant(tolua_S,"qatMaterialsBoxScore",qatMaterialsBoxScore);
  tolua_constant(tolua_S,"qatSkill",qatSkill);
  tolua_constant(tolua_S,"qatAchieveEvent",qatAchieveEvent);
  tolua_constant(tolua_S,"qatGuildFr",qatGuildFr);
  tolua_constant(tolua_S,"qatXPVal",qatXPVal);
  tolua_constant(tolua_S,"qatAddExp",qatAddExp);
  tolua_constant(tolua_S,"qatAnger",qatAnger);
  tolua_constant(tolua_S,"qatBoss",qatBoss);
  tolua_constant(tolua_S,"qatUpgrade",qatUpgrade);
  tolua_constant(tolua_S,"qatPetUpgrade",qatPetUpgrade);
  tolua_constant(tolua_S,"qatGuildCoin",qatGuildCoin);
  tolua_constant(tolua_S,"qatPersonBossJifen",qatPersonBossJifen);
  tolua_constant(tolua_S,"qat22",qat22);
  tolua_constant(tolua_S,"qat23",qat23);
  tolua_constant(tolua_S,"qat24",qat24);
  tolua_constant(tolua_S,"qatMeritoriousCount",qatMeritoriousCount);
  tolua_constant(tolua_S,"qatBossJifen",qatBossJifen);
  tolua_constant(tolua_S,"qatDragonSoulValue",qatDragonSoulValue);
  tolua_constant(tolua_S,"qatIntellectBallValue",qatIntellectBallValue);
  tolua_constant(tolua_S,"qatMeritoriousValue",qatMeritoriousValue);
  tolua_constant(tolua_S,"qatCombatScore",qatCombatScore);
  tolua_constant(tolua_S,"qatNightFighting",qatNightFighting);
  tolua_constant(tolua_S,"qatGuildContribution",qatGuildContribution);
  tolua_constant(tolua_S,"qatAwardTypeCount",qatAwardTypeCount);
  tolua_constant(tolua_S,"qatCustomize",qatCustomize);
  tolua_constant(tolua_S,"gEquipNoOP",gEquipNoOP);
  tolua_constant(tolua_S,"gEquipStar",gEquipStar);
  tolua_constant(tolua_S,"gEquipRecoverStar",gEquipRecoverStar);
  tolua_constant(tolua_S,"gEquipTransferStar",gEquipTransferStar);
  tolua_constant(tolua_S,"gEquipInscript",gEquipInscript);
  tolua_constant(tolua_S,"gEquipTransferInscript",gEquipTransferInscript);
  tolua_constant(tolua_S,"gEquipComposite",gEquipComposite);
  tolua_constant(tolua_S,"gEquipIdentifySlotUnlock",gEquipIdentifySlotUnlock);
  tolua_constant(tolua_S,"gEquipIdentify",gEquipIdentify);
  tolua_constant(tolua_S,"gEquipTransferIdentify",gEquipTransferIdentify);
  tolua_constant(tolua_S,"gGameStoreNoOP",gGameStoreNoOP);
  tolua_constant(tolua_S,"gGameStoreFreshMystical",gGameStoreFreshMystical);
  tolua_constant(tolua_S,"gGameStoreGetMysticalData",gGameStoreGetMysticalData);
  tolua_constant(tolua_S,"gGuildNoOP",gGuildNoOP);
  tolua_constant(tolua_S,"gUpgradeGuild",gUpgradeGuild);
  tolua_constant(tolua_S,"gPutInUpgradeGuildItem",gPutInUpgradeGuildItem);
  tolua_constant(tolua_S,"gGuildDonate",gGuildDonate);
  tolua_constant(tolua_S,"gChargeGuildTree",gChargeGuildTree);
  tolua_constant(tolua_S,"gPickGuildFruit",gPickGuildFruit);
  tolua_constant(tolua_S,"gGetGuildTaskAward",gGetGuildTaskAward);
  tolua_constant(tolua_S,"gGetGuildBenefit",gGetGuildBenefit);
  tolua_constant(tolua_S,"gSendGuildTaskBenefitData",gSendGuildTaskBenefitData);
  tolua_constant(tolua_S,"gOpenGuildActivity",gOpenGuildActivity);
  tolua_constant(tolua_S,"gGetCityPosWelfare",gGetCityPosWelfare);
  tolua_constant(tolua_S,"gEnterGuildActivity",gEnterGuildActivity);
  tolua_constant(tolua_S,"gGuildSiegeSetCmd",gGuildSiegeSetCmd);
  tolua_constant(tolua_S,"gGuildSiegeBackCity",gGuildSiegeBackCity);
  tolua_constant(tolua_S,"gGetCityPosWelfareInfo",gGetCityPosWelfareInfo);
  tolua_constant(tolua_S,"gSkillNoOP",gSkillNoOP);
  tolua_constant(tolua_S,"gAddSkillExp",gAddSkillExp);
  tolua_constant(tolua_S,"gFriendNoOP",gFriendNoOP);
  tolua_constant(tolua_S,"cSendCanAddFriendList",cSendCanAddFriendList);
  tolua_constant(tolua_S,"cInitActorMood",cInitActorMood);
  tolua_constant(tolua_S,"OpSoldierSoulUnlock",OpSoldierSoulUnlock);
  tolua_constant(tolua_S,"OpSoldierSoulLevelUpSkill",OpSoldierSoulLevelUpSkill);
  tolua_constant(tolua_S,"OpSoldierSoulActiveStar",OpSoldierSoulActiveStar);
  tolua_constant(tolua_S,"OpSoldierSoulAttach",OpSoldierSoulAttach);
  tolua_constant(tolua_S,"OpSoldierSoulEnterGame",OpSoldierSoulEnterGame);
  tolua_constant(tolua_S,"OpEquipPosStrongGetData",OpEquipPosStrongGetData);
  tolua_constant(tolua_S,"OpEquipPosStrongUpgrade",OpEquipPosStrongUpgrade);
  tolua_constant(tolua_S,"OpEquipPosStrongUpgradeAll",OpEquipPosStrongUpgradeAll);
  tolua_constant(tolua_S,"CommActiveID_No",CommActiveID_No);
  tolua_constant(tolua_S,"CommActiveID_GuildTree",CommActiveID_GuildTree);
  tolua_constant(tolua_S,"CommActiveID_Supplybattle",CommActiveID_Supplybattle);
  tolua_constant(tolua_S,"GuildActive_No",GuildActive_No);
  tolua_constant(tolua_S,"GuildActive_Tree",GuildActive_Tree);
  tolua_constant(tolua_S,"GuildActive_Max",GuildActive_Max);
  tolua_constant(tolua_S,"GuildActiveSts_Undo",GuildActiveSts_Undo);
  tolua_constant(tolua_S,"GuildActiveSts_Doing",GuildActiveSts_Doing);
  tolua_constant(tolua_S,"GuildActiveSts_Done",GuildActiveSts_Done);
  tolua_constant(tolua_S,"GuildActiveSts_Max",GuildActiveSts_Max);
  tolua_constant(tolua_S,"RewardQuestSts_Undo",RewardQuestSts_Undo);
  tolua_constant(tolua_S,"RewardQuestSts_Doing",RewardQuestSts_Doing);
  tolua_constant(tolua_S,"RewardQuestSts_Finish",RewardQuestSts_Finish);
  tolua_constant(tolua_S,"RewardQuestSts_Commit",RewardQuestSts_Commit);
  tolua_constant(tolua_S,"RewardQuestSts_Max",RewardQuestSts_Max);
  tolua_constant(tolua_S,"gQuestNoOP",gQuestNoOP);
  tolua_constant(tolua_S,"gGetRewardQuestSts",gGetRewardQuestSts);
  tolua_constant(tolua_S,"gResetRewardQuestSts",gResetRewardQuestSts);
  tolua_constant(tolua_S,"gAcceptRewardQuest",gAcceptRewardQuest);
  tolua_constant(tolua_S,"gGiveUpRewardQuest",gGiveUpRewardQuest);
  tolua_constant(tolua_S,"gFinishRewardQuest",gFinishRewardQuest);
  tolua_constant(tolua_S,"gCommitRewardQuest",gCommitRewardQuest);
  tolua_constant(tolua_S,"OpHeroUpStage",OpHeroUpStage);
  tolua_constant(tolua_S,"OpHeroUpSkill",OpHeroUpSkill);
  tolua_constant(tolua_S,"OpHeroBattle",OpHeroBattle);
  tolua_constant(tolua_S,"OpHeroLevelUp",OpHeroLevelUp);
  tolua_constant(tolua_S,"enHeroStage",enHeroStage);
  tolua_constant(tolua_S,"enHeroLevel",enHeroLevel);
  tolua_constant(tolua_S,"enHeroExp",enHeroExp);
  tolua_constant(tolua_S,"enHeroBless",enHeroBless);
  tolua_constant(tolua_S,"enHeroForce",enHeroForce);
  tolua_constant(tolua_S,"OpGetCombatInfo",OpGetCombatInfo);
  tolua_constant(tolua_S,"OpSelectCombatPayer",OpSelectCombatPayer);
  tolua_constant(tolua_S,"OpCombatStart",OpCombatStart);
  tolua_constant(tolua_S,"OpClearCooldown",OpClearCooldown);
  tolua_constant(tolua_S,"OpRechargeAwrad",OpRechargeAwrad);
  tolua_constant(tolua_S,"OpGetCombatLog",OpGetCombatLog);
  tolua_constant(tolua_S,"OpGetCombatRank",OpGetCombatRank);
  tolua_constant(tolua_S,"OpGetAwardList",OpGetAwardList);
  tolua_constant(tolua_S,"OpUpdateActorRank",OpUpdateActorRank);
  tolua_module(tolua_S,"Actor",0);
  tolua_beginmodule(tolua_S,"Actor");
   tolua_function(tolua_S,"getEntity",tolua_server_Actor_getEntity00);
   tolua_function(tolua_S,"getActorByName",tolua_server_Actor_getActorByName00);
   tolua_function(tolua_S,"getActorById",tolua_server_Actor_getActorById00);
   tolua_function(tolua_S,"getName",tolua_server_Actor_getName00);
   tolua_function(tolua_S,"getAccount",tolua_server_Actor_getAccount00);
   tolua_function(tolua_S,"findGuildMemberName",tolua_server_Actor_findGuildMemberName00);
   tolua_function(tolua_S,"getGuildNameByRank",tolua_server_Actor_getGuildNameByRank00);
   tolua_function(tolua_S,"getGuildLeaderNameByRank",tolua_server_Actor_getGuildLeaderNameByRank00);
   tolua_function(tolua_S,"getGuildMemNumByRank",tolua_server_Actor_getGuildMemNumByRank00);
   tolua_function(tolua_S,"getGuildCoinByRank",tolua_server_Actor_getGuildCoinByRank00);
   tolua_function(tolua_S,"hasGuildByRank",tolua_server_Actor_hasGuildByRank00);
   tolua_function(tolua_S,"sendWelcomeToNewMember",tolua_server_Actor_sendWelcomeToNewMember00);
   tolua_function(tolua_S,"getHandle",tolua_server_Actor_getHandle00);
   tolua_function(tolua_S,"getEntityType",tolua_server_Actor_getEntityType00);
   tolua_function(tolua_S,"getKillHandle",tolua_server_Actor_getKillHandle00);
   tolua_function(tolua_S,"hasQuest",tolua_server_Actor_hasQuest00);
   tolua_function(tolua_S,"ExOnQuestEvent",tolua_server_Actor_ExOnQuestEvent00);
   tolua_function(tolua_S,"closeNPCDialog",tolua_server_Actor_closeNPCDialog00);
   tolua_function(tolua_S,"openDialogs",tolua_server_Actor_openDialogs00);
   tolua_function(tolua_S,"closeDialogs",tolua_server_Actor_closeDialogs00);
   tolua_function(tolua_S,"getMenPai",tolua_server_Actor_getMenPai00);
   tolua_function(tolua_S,"getExpLastLogout",tolua_server_Actor_getExpLastLogout00);
   tolua_function(tolua_S,"getZyContriLogout",tolua_server_Actor_getZyContriLogout00);
   tolua_function(tolua_S,"setSocialMask",tolua_server_Actor_setSocialMask00);
   tolua_function(tolua_S,"getSocialMask",tolua_server_Actor_getSocialMask00);
   tolua_function(tolua_S,"enterFuBen",tolua_server_Actor_enterFuBen00);
   tolua_function(tolua_S,"EnterActivityScene",tolua_server_Actor_EnterActivityScene00);
   tolua_function(tolua_S,"enterScene",tolua_server_Actor_enterScene00);
   tolua_function(tolua_S,"learnSkill",tolua_server_Actor_learnSkill00);
   tolua_function(tolua_S,"startLearnSkill",tolua_server_Actor_startLearnSkill00);
   tolua_function(tolua_S,"getSkillLevel",tolua_server_Actor_getSkillLevel00);
   tolua_function(tolua_S,"delSkill",tolua_server_Actor_delSkill00);
   tolua_function(tolua_S,"removeItem",tolua_server_Actor_removeItem00);
   tolua_function(tolua_S,"addItem",tolua_server_Actor_addItem00);
   tolua_function(tolua_S,"getIntProperty",tolua_server_Actor_getIntProperty00);
   tolua_function(tolua_S,"getIntProperty2",tolua_server_Actor_getIntProperty200);
   tolua_function(tolua_S,"getUInt64Property",tolua_server_Actor_getUInt64Property00);
   tolua_function(tolua_S,"getActorBattlePower",tolua_server_Actor_getActorBattlePower00);
   tolua_function(tolua_S,"collectOperate",tolua_server_Actor_collectOperate00);
   tolua_function(tolua_S,"setUIntProperty",tolua_server_Actor_setUIntProperty00);
   tolua_function(tolua_S,"setUInt64Property",tolua_server_Actor_setUInt64Property00);
   tolua_function(tolua_S,"setMonsterProperty",tolua_server_Actor_setMonsterProperty00);
   tolua_function(tolua_S,"removeItemByPtr",tolua_server_Actor_removeItemByPtr00);
   tolua_function(tolua_S,"isHpFull",tolua_server_Actor_isHpFull00);
   tolua_function(tolua_S,"isMpFull",tolua_server_Actor_isMpFull00);
   tolua_function(tolua_S,"getSceneAreaFlag",tolua_server_Actor_getSceneAreaFlag00);
   tolua_function(tolua_S,"addBuffById",tolua_server_Actor_addBuffById00);
   tolua_function(tolua_S,"addBuffValueById",tolua_server_Actor_addBuffValueById00);
   tolua_function(tolua_S,"addGuildBuff",tolua_server_Actor_addGuildBuff00);
   tolua_function(tolua_S,"delBuff",tolua_server_Actor_delBuff00);
   tolua_function(tolua_S,"delBuffById",tolua_server_Actor_delBuffById00);
   tolua_function(tolua_S,"RemoveGroupBuff",tolua_server_Actor_RemoveGroupBuff00);
   tolua_function(tolua_S,"hasBuff",tolua_server_Actor_hasBuff00);
   tolua_function(tolua_S,"hasBuffById",tolua_server_Actor_hasBuffById00);
   tolua_function(tolua_S,"changeHp",tolua_server_Actor_changeHp00);
   tolua_function(tolua_S,"changeMp",tolua_server_Actor_changeMp00);
   tolua_function(tolua_S,"getItemCount",tolua_server_Actor_getItemCount00);
   tolua_function(tolua_S,"getDepotItemCount",tolua_server_Actor_getDepotItemCount00);
   tolua_function(tolua_S,"canAddItem",tolua_server_Actor_canAddItem00);
   tolua_function(tolua_S,"sendTipmsgWithId",tolua_server_Actor_sendTipmsgWithId00);
   tolua_function(tolua_S,"sendTipmsgWithParams",tolua_server_Actor_sendTipmsgWithParams00);
   tolua_function(tolua_S,"sendTipmsg",tolua_server_Actor_sendTipmsg00);
   tolua_function(tolua_S,"getMoneyCount",tolua_server_Actor_getMoneyCount00);
   tolua_function(tolua_S,"changeMoney",tolua_server_Actor_changeMoney00);
   tolua_function(tolua_S,"hasEquiment",tolua_server_Actor_hasEquiment00);
   tolua_function(tolua_S,"getEquiment",tolua_server_Actor_getEquiment00);
   tolua_function(tolua_S,"DelEquiment",tolua_server_Actor_DelEquiment00);
   tolua_function(tolua_S,"isInTeam",tolua_server_Actor_isInTeam00);
   tolua_function(tolua_S,"exitTeam",tolua_server_Actor_exitTeam00);
   tolua_function(tolua_S,"addToTeam",tolua_server_Actor_addToTeam00);
   tolua_function(tolua_S,"getFubenId",tolua_server_Actor_getFubenId00);
   tolua_function(tolua_S,"getSceneId",tolua_server_Actor_getSceneId00);
   tolua_function(tolua_S,"getSceneName",tolua_server_Actor_getSceneName00);
   tolua_function(tolua_S,"exitFuben",tolua_server_Actor_exitFuben00);
   tolua_function(tolua_S,"exitFubenAndBackCity",tolua_server_Actor_exitFubenAndBackCity00);
   tolua_function(tolua_S,"getSkillProperty",tolua_server_Actor_getSkillProperty00);
   tolua_function(tolua_S,"setSkillProperty",tolua_server_Actor_setSkillProperty00);
   tolua_function(tolua_S,"getFubenHandle",tolua_server_Actor_getFubenHandle00);
   tolua_function(tolua_S,"getSceneHandle",tolua_server_Actor_getSceneHandle00);
   tolua_function(tolua_S,"getFubenPrt",tolua_server_Actor_getFubenPrt00);
   tolua_function(tolua_S,"getScenePtr",tolua_server_Actor_getScenePtr00);
   tolua_function(tolua_S,"messageBox",tolua_server_Actor_messageBox00);
   tolua_function(tolua_S,"getNpc",tolua_server_Actor_getNpc00);
   tolua_function(tolua_S,"isInSameScreen",tolua_server_Actor_isInSameScreen00);
   tolua_function(tolua_S,"getTeamMemberCount",tolua_server_Actor_getTeamMemberCount00);
   tolua_function(tolua_S,"getOnlineTeamMemberCount",tolua_server_Actor_getOnlineTeamMemberCount00);
   tolua_function(tolua_S,"getTeammemberByIndex",tolua_server_Actor_getTeammemberByIndex00);
   tolua_function(tolua_S,"getActorPtrByName",tolua_server_Actor_getActorPtrByName00);
   tolua_function(tolua_S,"getActorPtrById",tolua_server_Actor_getActorPtrById00);
   tolua_function(tolua_S,"createMonster",tolua_server_Actor_createMonster00);
   tolua_function(tolua_S,"setMonsterOwer",tolua_server_Actor_setMonsterOwer00);
   tolua_function(tolua_S,"getMonsterOwner",tolua_server_Actor_getMonsterOwner00);
   tolua_function(tolua_S,"setMonsterOwnerName",tolua_server_Actor_setMonsterOwnerName00);
   tolua_function(tolua_S,"setMonsterName",tolua_server_Actor_setMonsterName00);
   tolua_function(tolua_S,"monsterRealDropItemExp",tolua_server_Actor_monsterRealDropItemExp00);
   tolua_function(tolua_S,"setMonsterCanMove",tolua_server_Actor_setMonsterCanMove00);
   tolua_function(tolua_S,"setReliveTimeOut",tolua_server_Actor_setReliveTimeOut00);
   tolua_function(tolua_S,"clearReliveTimeOut",tolua_server_Actor_clearReliveTimeOut00);
   tolua_function(tolua_S,"getReliveTimeOut",tolua_server_Actor_getReliveTimeOut00);
   tolua_function(tolua_S,"reqEnterFuben",tolua_server_Actor_reqEnterFuben00);
   tolua_function(tolua_S,"reqExitFuben",tolua_server_Actor_reqExitFuben00);
   tolua_function(tolua_S,"returnCity",tolua_server_Actor_returnCity00);
   tolua_function(tolua_S,"relive",tolua_server_Actor_relive00);
   tolua_function(tolua_S,"getLastLogoutTime",tolua_server_Actor_getLastLogoutTime00);
   tolua_function(tolua_S,"getLoginTime",tolua_server_Actor_getLoginTime00);
   tolua_function(tolua_S,"getTeamId",tolua_server_Actor_getTeamId00);
   tolua_function(tolua_S,"sendOpenBuildFormToClient",tolua_server_Actor_sendOpenBuildFormToClient00);
   tolua_function(tolua_S,"getGuildZzTime",tolua_server_Actor_getGuildZzTime00);
   tolua_function(tolua_S,"setGuildZzTime",tolua_server_Actor_setGuildZzTime00);
   tolua_function(tolua_S,"getGuildWealTime",tolua_server_Actor_getGuildWealTime00);
   tolua_function(tolua_S,"setGuildWealTime",tolua_server_Actor_setGuildWealTime00);
   tolua_function(tolua_S,"clearGuildZjItem",tolua_server_Actor_clearGuildZjItem00);
   tolua_function(tolua_S,"getPkMode",tolua_server_Actor_getPkMode00);
   tolua_function(tolua_S,"setPkMode",tolua_server_Actor_setPkMode00);
   tolua_function(tolua_S,"isKillAllMonster",tolua_server_Actor_isKillAllMonster00);
   tolua_function(tolua_S,"getLiveMonsterCount",tolua_server_Actor_getLiveMonsterCount00);
   tolua_function(tolua_S,"getMyMonsterCount",tolua_server_Actor_getMyMonsterCount00);
   tolua_function(tolua_S,"addExp",tolua_server_Actor_addExp00);
   tolua_function(tolua_S,"getDyanmicVar",tolua_server_Actor_getDyanmicVar00);
   tolua_function(tolua_S,"getStaticVar",tolua_server_Actor_getStaticVar00);
   tolua_function(tolua_S,"hasMapAreaAttri",tolua_server_Actor_hasMapAreaAttri00);
   tolua_function(tolua_S,"hasMapAreaAttriValue",tolua_server_Actor_hasMapAreaAttriValue00);
   tolua_function(tolua_S,"getMapAttriValue",tolua_server_Actor_getMapAttriValue00);
   tolua_function(tolua_S,"triggerAchieveEvent",tolua_server_Actor_triggerAchieveEvent00);
   tolua_function(tolua_S,"getTalkNpcName",tolua_server_Actor_getTalkNpcName00);
   tolua_function(tolua_S,"checkNpcTranLimit",tolua_server_Actor_checkNpcTranLimit00);
   tolua_function(tolua_S,"addNpcTranTimes",tolua_server_Actor_addNpcTranTimes00);
   tolua_function(tolua_S,"getActorFriendsCount",tolua_server_Actor_getActorFriendsCount00);
   tolua_function(tolua_S,"getActorFriend",tolua_server_Actor_getActorFriend00);
   tolua_function(tolua_S,"postEntityScriptDelayMsg",tolua_server_Actor_postEntityScriptDelayMsg00);
   tolua_function(tolua_S,"removeEntityScriptDelayMsg",tolua_server_Actor_removeEntityScriptDelayMsg00);
   tolua_function(tolua_S,"canUseItem",tolua_server_Actor_canUseItem00);
   tolua_function(tolua_S,"isAchieveFinished",tolua_server_Actor_isAchieveFinished00);
   tolua_function(tolua_S,"isAchieveGiveAwards",tolua_server_Actor_isAchieveGiveAwards00);
   tolua_function(tolua_S,"getGuildTodayDonateCoin",tolua_server_Actor_getGuildTodayDonateCoin00);
   tolua_function(tolua_S,"setGuildTodayDonateCoin",tolua_server_Actor_setGuildTodayDonateCoin00);
   tolua_function(tolua_S,"getGuildTodayDonateItem",tolua_server_Actor_getGuildTodayDonateItem00);
   tolua_function(tolua_S,"setGuildTodayDonateItem",tolua_server_Actor_setGuildTodayDonateItem00);
   tolua_function(tolua_S,"sendGuildDonateData",tolua_server_Actor_sendGuildDonateData00);
   tolua_function(tolua_S,"sendGuildUpgradeItem",tolua_server_Actor_sendGuildUpgradeItem00);
   tolua_function(tolua_S,"sendGuildInfo",tolua_server_Actor_sendGuildInfo00);
   tolua_function(tolua_S,"sendGuildTreeData",tolua_server_Actor_sendGuildTreeData00);
   tolua_function(tolua_S,"sendGuildFruitData",tolua_server_Actor_sendGuildFruitData00);
   tolua_function(tolua_S,"getGuildTreeTodayChargeNum",tolua_server_Actor_getGuildTreeTodayChargeNum00);
   tolua_function(tolua_S,"setGuildTreeTodayChargeNum",tolua_server_Actor_setGuildTreeTodayChargeNum00);
   tolua_function(tolua_S,"getGuildFruitTodayPickNum",tolua_server_Actor_getGuildFruitTodayPickNum00);
   tolua_function(tolua_S,"setGuildFruitTodayPickNum",tolua_server_Actor_setGuildFruitTodayPickNum00);
   tolua_function(tolua_S,"sendGuildFruitPickData",tolua_server_Actor_sendGuildFruitPickData00);
   tolua_function(tolua_S,"getPositionByDir",tolua_server_Actor_getPositionByDir00);
   tolua_function(tolua_S,"monsterSay",tolua_server_Actor_monsterSay00);
   tolua_function(tolua_S,"hasMonsterNear",tolua_server_Actor_hasMonsterNear00);
   tolua_function(tolua_S,"regScriptCallback",tolua_server_Actor_regScriptCallback00);
   tolua_function(tolua_S,"regScriptTimer",tolua_server_Actor_regScriptTimer00);
   tolua_function(tolua_S,"unregScriptCallbackByHandle",tolua_server_Actor_unregScriptCallbackByHandle00);
   tolua_function(tolua_S,"unregScriptCallback",tolua_server_Actor_unregScriptCallback00);
   tolua_function(tolua_S,"queryServicesAddCard",tolua_server_Actor_queryServicesAddCard00);
   tolua_function(tolua_S,"userServicesAddCard",tolua_server_Actor_userServicesAddCard00);
   tolua_function(tolua_S,"isMonster",tolua_server_Actor_isMonster00);
   tolua_function(tolua_S,"getEntityPosition",tolua_server_Actor_getEntityPosition00);
   tolua_function(tolua_S,"getEntityMaxCircleAndLevel",tolua_server_Actor_getEntityMaxCircleAndLevel00);
   tolua_function(tolua_S,"setEntityTelByOwnderAttr",tolua_server_Actor_setEntityTelByOwnderAttr00);
   tolua_function(tolua_S,"setEntityTelByOwnerWhenNonePortal",tolua_server_Actor_setEntityTelByOwnerWhenNonePortal00);
   tolua_function(tolua_S,"setEntityLazyFollow",tolua_server_Actor_setEntityLazyFollow00);
   tolua_function(tolua_S,"setEntityCanAttackMonster",tolua_server_Actor_setEntityCanAttackMonster00);
   tolua_function(tolua_S,"setDenyAttackedByActor",tolua_server_Actor_setDenyAttackedByActor00);
   tolua_function(tolua_S,"setDenyBeAttack",tolua_server_Actor_setDenyBeAttack00);
   tolua_function(tolua_S,"onRelive",tolua_server_Actor_onRelive00);
   tolua_function(tolua_S,"sendCountdown",tolua_server_Actor_sendCountdown00);
   tolua_function(tolua_S,"giveAward",tolua_server_Actor_giveAward00);
   tolua_function(tolua_S,"checkConsume",tolua_server_Actor_checkConsume00);
   tolua_function(tolua_S,"CheckActorSource",tolua_server_Actor_CheckActorSource00);
   tolua_function(tolua_S,"getConsume",tolua_server_Actor_getConsume00);
   tolua_function(tolua_S,"removeConsume",tolua_server_Actor_removeConsume00);
   tolua_function(tolua_S,"useSkill",tolua_server_Actor_useSkill00);
   tolua_function(tolua_S,"getCampId",tolua_server_Actor_getCampId00);
   tolua_function(tolua_S,"setCampId",tolua_server_Actor_setCampId00);
   tolua_function(tolua_S,"SetNpcGuildId",tolua_server_Actor_SetNpcGuildId00);
   tolua_function(tolua_S,"setDieRefreshHpPro",tolua_server_Actor_setDieRefreshHpPro00);
   tolua_function(tolua_S,"getNpcGuildId",tolua_server_Actor_getNpcGuildId00);
   tolua_function(tolua_S,"changeEntityName",tolua_server_Actor_changeEntityName00);
   tolua_function(tolua_S,"getGuildPos",tolua_server_Actor_getGuildPos00);
   tolua_function(tolua_S,"getGuildTitleName",tolua_server_Actor_getGuildTitleName00);
   tolua_function(tolua_S,"getGuilCityPos",tolua_server_Actor_getGuilCityPos00);
   tolua_function(tolua_S,"sendGuildCardByRank",tolua_server_Actor_sendGuildCardByRank00);
   tolua_function(tolua_S,"joinToGuild",tolua_server_Actor_joinToGuild00);
   tolua_function(tolua_S,"onStartBidGuildRank",tolua_server_Actor_onStartBidGuildRank00);
   tolua_function(tolua_S,"isSignUpGuildSiege",tolua_server_Actor_isSignUpGuildSiege00);
   tolua_function(tolua_S,"MyGuildIsSbk",tolua_server_Actor_MyGuildIsSbk00);
   tolua_function(tolua_S,"getGuildLeaderId",tolua_server_Actor_getGuildLeaderId00);
   tolua_function(tolua_S,"getGuildLevel",tolua_server_Actor_getGuildLevel00);
   tolua_function(tolua_S,"setGuldBossFlag",tolua_server_Actor_setGuldBossFlag00);
   tolua_function(tolua_S,"getGuildBossFlag",tolua_server_Actor_getGuildBossFlag00);
   tolua_function(tolua_S,"SendSzBossTimes",tolua_server_Actor_SendSzBossTimes00);
   tolua_function(tolua_S,"setGuildDartFlag",tolua_server_Actor_setGuildDartFlag00);
   tolua_function(tolua_S,"addEventRecord",tolua_server_Actor_addEventRecord00);
   tolua_function(tolua_S,"setGuildYs",tolua_server_Actor_setGuildYs00);
   tolua_function(tolua_S,"getGuildGx",tolua_server_Actor_getGuildGx00);
   tolua_function(tolua_S,"setGuildGx",tolua_server_Actor_setGuildGx00);
   tolua_function(tolua_S,"GetGuildTotalGx",tolua_server_Actor_GetGuildTotalGx00);
   tolua_function(tolua_S,"getGuildBossCallFlag",tolua_server_Actor_getGuildBossCallFlag00);
   tolua_function(tolua_S,"setCallGuildBossFlag",tolua_server_Actor_setCallGuildBossFlag00);
   tolua_function(tolua_S,"getCallGuildBossFlag",tolua_server_Actor_getCallGuildBossFlag00);
   tolua_function(tolua_S,"setGuildDartHandle",tolua_server_Actor_setGuildDartHandle00);
   tolua_function(tolua_S,"getGuildDartHandle",tolua_server_Actor_getGuildDartHandle00);
   tolua_function(tolua_S,"setGuildFr",tolua_server_Actor_setGuildFr00);
   tolua_function(tolua_S,"getGuildCoin",tolua_server_Actor_getGuildCoin00);
   tolua_function(tolua_S,"getGuildFr",tolua_server_Actor_getGuildFr00);
   tolua_function(tolua_S,"getGuildName",tolua_server_Actor_getGuildName00);
   tolua_function(tolua_S,"getGuildId",tolua_server_Actor_getGuildId00);
   tolua_function(tolua_S,"getGuildPtr",tolua_server_Actor_getGuildPtr00);
   tolua_function(tolua_S,"bInGuild",tolua_server_Actor_bInGuild00);
   tolua_function(tolua_S,"upGuildLevel",tolua_server_Actor_upGuildLevel00);
   tolua_function(tolua_S,"sendGuildMsg",tolua_server_Actor_sendGuildMsg00);
   tolua_function(tolua_S,"notifyUpdateGuildInfo",tolua_server_Actor_notifyUpdateGuildInfo00);
   tolua_function(tolua_S,"getGuildSkillLevel",tolua_server_Actor_getGuildSkillLevel00);
   tolua_function(tolua_S,"setGuildSkillLevel",tolua_server_Actor_setGuildSkillLevel00);
   tolua_function(tolua_S,"canUpGuildSkillLevel",tolua_server_Actor_canUpGuildSkillLevel00);
   tolua_function(tolua_S,"decountUpGuildSkill",tolua_server_Actor_decountUpGuildSkill00);
   tolua_function(tolua_S,"saveDbGuildSkill",tolua_server_Actor_saveDbGuildSkill00);
   tolua_function(tolua_S,"sendGuildSkillToAllMember",tolua_server_Actor_sendGuildSkillToAllMember00);
   tolua_function(tolua_S,"refreshActorObserveList",tolua_server_Actor_refreshActorObserveList00);
   tolua_function(tolua_S,"isFirstLogin",tolua_server_Actor_isFirstLogin00);
   tolua_function(tolua_S,"sendLearnSkill",tolua_server_Actor_sendLearnSkill00);
   tolua_function(tolua_S,"sendSceneTime",tolua_server_Actor_sendSceneTime00);
   tolua_function(tolua_S,"enlargeBag",tolua_server_Actor_enlargeBag00);
   tolua_function(tolua_S,"sendPrivateChatMsg",tolua_server_Actor_sendPrivateChatMsg00);
   tolua_function(tolua_S,"playScrEffect",tolua_server_Actor_playScrEffect00);
   tolua_function(tolua_S,"playScrEffectCode",tolua_server_Actor_playScrEffectCode00);
   tolua_function(tolua_S,"delEffectCode",tolua_server_Actor_delEffectCode00);
   tolua_function(tolua_S,"playScrSceneEffectCode",tolua_server_Actor_playScrSceneEffectCode00);
   tolua_function(tolua_S,"addState",tolua_server_Actor_addState00);
   tolua_function(tolua_S,"removeState",tolua_server_Actor_removeState00);
   tolua_function(tolua_S,"consumeCoin",tolua_server_Actor_consumeCoin00);
   tolua_function(tolua_S,"worldBroadCastMsg",tolua_server_Actor_worldBroadCastMsg00);
   tolua_function(tolua_S,"battleGroupBroadCastMsgCs",tolua_server_Actor_battleGroupBroadCastMsgCs00);
   tolua_function(tolua_S,"getMiscData",tolua_server_Actor_getMiscData00);
   tolua_function(tolua_S,"setMiscData",tolua_server_Actor_setMiscData00);
   tolua_function(tolua_S,"setNpcIdleTime",tolua_server_Actor_setNpcIdleTime00);
   tolua_function(tolua_S,"setEntityVisibleFlag",tolua_server_Actor_setEntityVisibleFlag00);
   tolua_function(tolua_S,"getItemLeftTime",tolua_server_Actor_getItemLeftTime00);
   tolua_function(tolua_S,"inviteJoinTeam",tolua_server_Actor_inviteJoinTeam00);
   tolua_function(tolua_S,"setDir",tolua_server_Actor_setDir00);
   tolua_function(tolua_S,"addEffect",tolua_server_Actor_addEffect00);
   tolua_function(tolua_S,"delAllEffect",tolua_server_Actor_delAllEffect00);
   tolua_function(tolua_S,"isDeath",tolua_server_Actor_isDeath00);
   tolua_function(tolua_S,"showNpcShop",tolua_server_Actor_showNpcShop00);
   tolua_function(tolua_S,"addSceneEffect",tolua_server_Actor_addSceneEffect00);
   tolua_function(tolua_S,"broadSceneEffect",tolua_server_Actor_broadSceneEffect00);
   tolua_function(tolua_S,"hasState",tolua_server_Actor_hasState00);
   tolua_function(tolua_S,"getGMLevel",tolua_server_Actor_getGMLevel00);
   tolua_function(tolua_S,"getActorId",tolua_server_Actor_getActorId00);
   tolua_function(tolua_S,"getTargetId",tolua_server_Actor_getTargetId00);
   tolua_function(tolua_S,"moveToEntity",tolua_server_Actor_moveToEntity00);
   tolua_function(tolua_S,"setTopTitle",tolua_server_Actor_setTopTitle00);
   tolua_function(tolua_S,"reqTransmitTo",tolua_server_Actor_reqTransmitTo00);
   tolua_function(tolua_S,"reqTransmitToCommonServer",tolua_server_Actor_reqTransmitToCommonServer00);
   tolua_function(tolua_S,"reqTransmitToRawServer",tolua_server_Actor_reqTransmitToRawServer00);
   tolua_function(tolua_S,"isInRawServer",tolua_server_Actor_isInRawServer00);
   tolua_function(tolua_S,"getActorRawServerId",tolua_server_Actor_getActorRawServerId00);
   tolua_function(tolua_S,"changeGuildCoin",tolua_server_Actor_changeGuildCoin00);
   tolua_function(tolua_S,"setActorCircle",tolua_server_Actor_setActorCircle00);
   tolua_function(tolua_S,"viewOffLineActor",tolua_server_Actor_viewOffLineActor00);
   tolua_function(tolua_S,"viewOffLineActorHero",tolua_server_Actor_viewOffLineActorHero00);
   tolua_function(tolua_S,"changeEntityModel",tolua_server_Actor_changeEntityModel00);
   tolua_function(tolua_S,"changeShowName",tolua_server_Actor_changeShowName00);
   tolua_function(tolua_S,"resetShowName",tolua_server_Actor_resetShowName00);
   tolua_function(tolua_S,"checkActorLevel",tolua_server_Actor_checkActorLevel00);
   tolua_function(tolua_S,"checkActorMaxCircleAndLevel",tolua_server_Actor_checkActorMaxCircleAndLevel00);
   tolua_function(tolua_S,"updateActorName",tolua_server_Actor_updateActorName00);
   tolua_function(tolua_S,"checkOpenLevel",tolua_server_Actor_checkOpenLevel00);
   tolua_function(tolua_S,"getBuffRemainTime",tolua_server_Actor_getBuffRemainTime00);
   tolua_function(tolua_S,"getBuffRemainTimeById",tolua_server_Actor_getBuffRemainTimeById00);
   tolua_function(tolua_S,"canGiveAward",tolua_server_Actor_canGiveAward00);
   tolua_function(tolua_S,"createTeam",tolua_server_Actor_createTeam00);
   tolua_function(tolua_S,"autoFindPathToNpc",tolua_server_Actor_autoFindPathToNpc00);
   tolua_function(tolua_S,"getSocialRelationId",tolua_server_Actor_getSocialRelationId00);
   tolua_function(tolua_S,"getSocialCurNum",tolua_server_Actor_getSocialCurNum00);
   tolua_function(tolua_S,"getSocialActorName",tolua_server_Actor_getSocialActorName00);
   tolua_function(tolua_S,"sendMoveToMsg",tolua_server_Actor_sendMoveToMsg00);
   tolua_function(tolua_S,"sendChat",tolua_server_Actor_sendChat00);
   tolua_function(tolua_S,"changeVocation",tolua_server_Actor_changeVocation00);
   tolua_function(tolua_S,"changeSex",tolua_server_Actor_changeSex00);
   tolua_function(tolua_S,"setFullAnger",tolua_server_Actor_setFullAnger00);
   tolua_function(tolua_S,"HasSocialRelation",tolua_server_Actor_HasSocialRelation00);
   tolua_function(tolua_S,"GetNameColorData",tolua_server_Actor_GetNameColorData00);
   tolua_function(tolua_S,"canTelport",tolua_server_Actor_canTelport00);
   tolua_function(tolua_S,"clearEquipSharp",tolua_server_Actor_clearEquipSharp00);
   tolua_function(tolua_S,"setSalary",tolua_server_Actor_setSalary00);
   tolua_function(tolua_S,"getSalary",tolua_server_Actor_getSalary00);
   tolua_function(tolua_S,"isDealing",tolua_server_Actor_isDealing00);
   tolua_function(tolua_S,"queryActorName",tolua_server_Actor_queryActorName00);
   tolua_function(tolua_S,"changeGuildGx",tolua_server_Actor_changeGuildGx00);
   tolua_function(tolua_S,"setShxDoneTimes",tolua_server_Actor_setShxDoneTimes00);
   tolua_function(tolua_S,"getShxDoneTimes",tolua_server_Actor_getShxDoneTimes00);
   tolua_function(tolua_S,"getShxAddTimes",tolua_server_Actor_getShxAddTimes00);
   tolua_function(tolua_S,"changeShxAddTimes",tolua_server_Actor_changeShxAddTimes00);
   tolua_function(tolua_S,"getTodayGxValue",tolua_server_Actor_getTodayGxValue00);
   tolua_function(tolua_S,"changeExploreTimes",tolua_server_Actor_changeExploreTimes00);
   tolua_function(tolua_S,"getExploreTimes",tolua_server_Actor_getExploreTimes00);
   tolua_function(tolua_S,"getExploreItemId",tolua_server_Actor_getExploreItemId00);
   tolua_function(tolua_S,"setExploreItemId",tolua_server_Actor_setExploreItemId00);
   tolua_function(tolua_S,"getChallengeTimes",tolua_server_Actor_getChallengeTimes00);
   tolua_function(tolua_S,"setChallengeTimes",tolua_server_Actor_setChallengeTimes00);
   tolua_function(tolua_S,"setAddChallengeTimes",tolua_server_Actor_setAddChallengeTimes00);
   tolua_function(tolua_S,"getAddChallengeTimes",tolua_server_Actor_getAddChallengeTimes00);
   tolua_function(tolua_S,"changeTodayGx",tolua_server_Actor_changeTodayGx00);
   tolua_function(tolua_S,"getTargetHandle",tolua_server_Actor_getTargetHandle00);
   tolua_function(tolua_S,"getNpcPos",tolua_server_Actor_getNpcPos00);
   tolua_function(tolua_S,"isTeamLeader",tolua_server_Actor_isTeamLeader00);
   tolua_function(tolua_S,"backMain",tolua_server_Actor_backMain00);
   tolua_function(tolua_S,"openBuyItemDialog",tolua_server_Actor_openBuyItemDialog00);
   tolua_function(tolua_S,"sendCustomEffect",tolua_server_Actor_sendCustomEffect00);
   tolua_function(tolua_S,"changeActivity",tolua_server_Actor_changeActivity00);
   tolua_function(tolua_S,"setAchieveUnFinished",tolua_server_Actor_setAchieveUnFinished00);
   tolua_function(tolua_S,"setAchieveInstantFinish",tolua_server_Actor_setAchieveInstantFinish00);
   tolua_function(tolua_S,"RemoveBattlePet",tolua_server_Actor_RemoveBattlePet00);
   tolua_function(tolua_S,"addNewTitle",tolua_server_Actor_addNewTitle00);
   tolua_function(tolua_S,"delNewTitle",tolua_server_Actor_delNewTitle00);
   tolua_function(tolua_S,"isHaveNewTitle",tolua_server_Actor_isHaveNewTitle00);
   tolua_function(tolua_S,"setCurNewTitle",tolua_server_Actor_setCurNewTitle00);
   tolua_function(tolua_S,"BroadCastNameClrScene",tolua_server_Actor_BroadCastNameClrScene00);
   tolua_function(tolua_S,"SendShortCutMsg",tolua_server_Actor_SendShortCutMsg00);
   tolua_function(tolua_S,"setExploitRate",tolua_server_Actor_setExploitRate00);
   tolua_function(tolua_S,"setMonsterGrowLevel",tolua_server_Actor_setMonsterGrowLevel00);
   tolua_function(tolua_S,"GetGameSetting",tolua_server_Actor_GetGameSetting00);
   tolua_function(tolua_S,"setPosition",tolua_server_Actor_setPosition00);
   tolua_function(tolua_S,"getAppearByteType",tolua_server_Actor_getAppearByteType00);
   tolua_function(tolua_S,"SetEnterFuBenMapPos",tolua_server_Actor_SetEnterFuBenMapPos00);
   tolua_function(tolua_S,"sendNotEnoughMoney",tolua_server_Actor_sendNotEnoughMoney00);
   tolua_function(tolua_S,"sendAwardNotEnough",tolua_server_Actor_sendAwardNotEnough00);
   tolua_function(tolua_S,"setTitle",tolua_server_Actor_setTitle00);
   tolua_function(tolua_S,"SetRelivePoint",tolua_server_Actor_SetRelivePoint00);
   tolua_function(tolua_S,"sendGuildChannelMsg",tolua_server_Actor_sendGuildChannelMsg00);
   tolua_function(tolua_S,"setActivation",tolua_server_Actor_setActivation00);
   tolua_function(tolua_S,"getActivation",tolua_server_Actor_getActivation00);
   tolua_function(tolua_S,"isNearBySceneNpc",tolua_server_Actor_isNearBySceneNpc00);
   tolua_function(tolua_S,"refreshFeature",tolua_server_Actor_refreshFeature00);
   tolua_function(tolua_S,"getDeadTimeRecent",tolua_server_Actor_getDeadTimeRecent00);
   tolua_function(tolua_S,"getLoginDays",tolua_server_Actor_getLoginDays00);
   tolua_function(tolua_S,"addExpToExpBox",tolua_server_Actor_addExpToExpBox00);
   tolua_function(tolua_S,"AddExpReachLevel",tolua_server_Actor_AddExpReachLevel00);
   tolua_function(tolua_S,"GetLevelExp",tolua_server_Actor_GetLevelExp00);
   tolua_function(tolua_S,"addPaodianExp",tolua_server_Actor_addPaodianExp00);
   tolua_function(tolua_S,"addTypePaodianExp",tolua_server_Actor_addTypePaodianExp00);
   tolua_function(tolua_S,"updateActorEntityProp",tolua_server_Actor_updateActorEntityProp00);
   tolua_function(tolua_S,"GetMonAttackedTime",tolua_server_Actor_GetMonAttackedTime00);
   tolua_function(tolua_S,"setAchieveGiveAwards",tolua_server_Actor_setAchieveGiveAwards00);
   tolua_function(tolua_S,"setAchieveFinished",tolua_server_Actor_setAchieveFinished00);
   tolua_function(tolua_S,"swapCombatRank",tolua_server_Actor_swapCombatRank00);
   tolua_function(tolua_S,"ChallegeOverOp",tolua_server_Actor_ChallegeOverOp00);
   tolua_function(tolua_S,"OnNewDayCombatClear",tolua_server_Actor_OnNewDayCombatClear00);
   tolua_function(tolua_S,"getMyCombatRank",tolua_server_Actor_getMyCombatRank00);
   tolua_function(tolua_S,"getTotalStar",tolua_server_Actor_getTotalStar00);
   tolua_function(tolua_S,"getMaxAttack",tolua_server_Actor_getMaxAttack00);
   tolua_function(tolua_S,"getMaxDefence",tolua_server_Actor_getMaxDefence00);
   tolua_function(tolua_S,"SetForceVesterId",tolua_server_Actor_SetForceVesterId00);
   tolua_function(tolua_S,"getRunningActivityId",tolua_server_Actor_getRunningActivityId00);
   tolua_function(tolua_S,"ChouJiangByGroupId",tolua_server_Actor_ChouJiangByGroupId00);
   tolua_function(tolua_S,"isActivityRunning",tolua_server_Actor_isActivityRunning00);
   tolua_function(tolua_S,"isActivityTypeRunning",tolua_server_Actor_isActivityTypeRunning00);
   tolua_function(tolua_S,"isMaxLevel",tolua_server_Actor_isMaxLevel00);
   tolua_function(tolua_S,"sendActivityData",tolua_server_Actor_sendActivityData00);
   tolua_function(tolua_S,"closeOneActivity",tolua_server_Actor_closeOneActivity00);
   tolua_function(tolua_S,"removePet",tolua_server_Actor_removePet00);
   tolua_function(tolua_S,"setChatForbit",tolua_server_Actor_setChatForbit00);
   tolua_function(tolua_S,"getMaster",tolua_server_Actor_getMaster00);
   tolua_function(tolua_S,"SetBeLongBoss",tolua_server_Actor_SetBeLongBoss00);
   tolua_function(tolua_S,"CancelBeLongBoss",tolua_server_Actor_CancelBeLongBoss00);
   tolua_function(tolua_S,"getActorCreateTime",tolua_server_Actor_getActorCreateTime00);
   tolua_function(tolua_S,"getStaticCount",tolua_server_Actor_getStaticCount00);
   tolua_function(tolua_S,"addStaticCount",tolua_server_Actor_addStaticCount00);
   tolua_function(tolua_S,"setStaticCount",tolua_server_Actor_setStaticCount00);
   tolua_function(tolua_S,"IsHasFreePrivilege",tolua_server_Actor_IsHasFreePrivilege00);
   tolua_function(tolua_S,"IsHasMonthCard",tolua_server_Actor_IsHasMonthCard00);
   tolua_function(tolua_S,"IsHasMedicineCard",tolua_server_Actor_IsHasMedicineCard00);
   tolua_function(tolua_S,"IsHasForverCard",tolua_server_Actor_IsHasForverCard00);
   tolua_function(tolua_S,"GetMaxColorCardLevel",tolua_server_Actor_GetMaxColorCardLevel00);
   tolua_function(tolua_S,"IsHasOrangeCard",tolua_server_Actor_IsHasOrangeCard00);
   tolua_function(tolua_S,"IsHasPurpleCard",tolua_server_Actor_IsHasPurpleCard00);
   tolua_function(tolua_S,"IsHasBlueCard",tolua_server_Actor_IsHasBlueCard00);
   tolua_function(tolua_S,"IsHasGreenCard",tolua_server_Actor_IsHasGreenCard00);
   tolua_function(tolua_S,"IsHasWhiteCard",tolua_server_Actor_IsHasWhiteCard00);
   tolua_function(tolua_S,"CheckDistanceByHandle",tolua_server_Actor_CheckDistanceByHandle00);
   tolua_function(tolua_S,"SendActivityLog",tolua_server_Actor_SendActivityLog00);
   tolua_function(tolua_S,"SetNpcTeleport",tolua_server_Actor_SetNpcTeleport00);
   tolua_function(tolua_S,"checkCommonLimit",tolua_server_Actor_checkCommonLimit00);
   tolua_function(tolua_S,"checkKuangbao",tolua_server_Actor_checkKuangbao00);
   tolua_function(tolua_S,"getGhostSumLv",tolua_server_Actor_getGhostSumLv00);
   tolua_function(tolua_S,"SendJoinActivityLog",tolua_server_Actor_SendJoinActivityLog00);
   tolua_function(tolua_S,"getTotalOnlineTime",tolua_server_Actor_getTotalOnlineTime00);
   tolua_function(tolua_S,"KickUserAccount",tolua_server_Actor_KickUserAccount00);
   tolua_function(tolua_S,"setRechargeStatus",tolua_server_Actor_setRechargeStatus00);
   tolua_function(tolua_S,"getRechargeStatus",tolua_server_Actor_getRechargeStatus00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"eAchieveEventIdNone",eAchieveEventIdNone);
  tolua_constant(tolua_S,"nAchieveLevel",nAchieveLevel);
  tolua_constant(tolua_S,"nAchieveCircle",nAchieveCircle);
  tolua_constant(tolua_S,"nAchieveJmLevl",nAchieveJmLevl);
  tolua_constant(tolua_S,"nAchieveBless",nAchieveBless);
  tolua_constant(tolua_S,"nAchieveActorNum",nAchieveActorNum);
  tolua_constant(tolua_S,"nAchieveRecharge",nAchieveRecharge);
  tolua_constant(tolua_S,"nAchieveKillMonster",nAchieveKillMonster);
  tolua_constant(tolua_S,"nAchieveFuBen",nAchieveFuBen);
  tolua_constant(tolua_S,"nAchieveGuildDonate",nAchieveGuildDonate);
  tolua_constant(tolua_S,"nAchieveRecover",nAchieveRecover);
  tolua_constant(tolua_S,"nAchieveForge",nAchieveForge);
  tolua_constant(tolua_S,"nAchieveLogin",nAchieveLogin);
  tolua_constant(tolua_S,"nAchieveContinueLogin",nAchieveContinueLogin);
  tolua_constant(tolua_S,"nAchieveEquipment",nAchieveEquipment);
  tolua_constant(tolua_S,"nAchieveCompleteAchieve",nAchieveCompleteAchieve);
  tolua_constant(tolua_S,"nAchieveGetDonateValue",nAchieveGetDonateValue);
  tolua_constant(tolua_S,"nAchieveActivity",nAchieveActivity);
  tolua_constant(tolua_S,"nAchieveCost",nAchieveCost);
  tolua_constant(tolua_S,"nAchieveStrengthenLv",nAchieveStrengthenLv);
  tolua_constant(tolua_S,"nAchieveSoulJadeLv",nAchieveSoulJadeLv);
  tolua_constant(tolua_S,"nAchieveCostItem",nAchieveCostItem);
  tolua_constant(tolua_S,"nAchievekillOneMonster",nAchievekillOneMonster);
  tolua_constant(tolua_S,"nAchieveKillSZBoss",nAchieveKillSZBoss);
  tolua_constant(tolua_S,"nAchieveGetSZBossAward",nAchieveGetSZBossAward);
  tolua_constant(tolua_S,"nAchieveJionSBKGuild",nAchieveJionSBKGuild);
  tolua_constant(tolua_S,"nAchieveJoinJDFuben",nAchieveJoinJDFuben);
  tolua_constant(tolua_S,"nAchieveCompleteActivity",nAchieveCompleteActivity);
  tolua_constant(tolua_S,"nAchieveRechargeDay",nAchieveRechargeDay);
  tolua_constant(tolua_S,"nAchieveDropItem",nAchieveDropItem);
  tolua_constant(tolua_S,"nAchieveZL",nAchieveZL);
  tolua_constant(tolua_S,"nAchieveRealRecharge",nAchieveRealRecharge);
  tolua_constant(tolua_S,"eMaxAtomEventID",eMaxAtomEventID);
  tolua_module(tolua_S,"Fuben",0);
  tolua_beginmodule(tolua_S,"Fuben");
   tolua_function(tolua_S,"createFuBen",tolua_server_Fuben_createFuBen00);
   tolua_function(tolua_S,"getFbValue",tolua_server_Fuben_getFbValue00);
   tolua_function(tolua_S,"setFbValue",tolua_server_Fuben_setFbValue00);
   tolua_function(tolua_S,"getTeamOnlineMemberCount",tolua_server_Fuben_getTeamOnlineMemberCount00);
   tolua_function(tolua_S,"getTeamMemberCount",tolua_server_Fuben_getTeamMemberCount00);
   tolua_function(tolua_S,"getTeamFubenId",tolua_server_Fuben_getTeamFubenId00);
   tolua_function(tolua_S,"getTeamMaxMemberCount",tolua_server_Fuben_getTeamMaxMemberCount00);
   tolua_function(tolua_S,"isRefuseActor",tolua_server_Fuben_isRefuseActor00);
   tolua_function(tolua_S,"addRefuseActor",tolua_server_Fuben_addRefuseActor00);
   tolua_function(tolua_S,"getFubenIdByPtr",tolua_server_Fuben_getFubenIdByPtr00);
   tolua_function(tolua_S,"getGuildIdByByPtr",tolua_server_Fuben_getGuildIdByByPtr00);
   tolua_function(tolua_S,"getFubenPtrByHandle",tolua_server_Fuben_getFubenPtrByHandle00);
   tolua_function(tolua_S,"closeFuben",tolua_server_Fuben_closeFuben00);
   tolua_function(tolua_S,"getFubenHandle",tolua_server_Fuben_getFubenHandle00);
   tolua_function(tolua_S,"getStaticFubenHandle",tolua_server_Fuben_getStaticFubenHandle00);
   tolua_function(tolua_S,"createMonster",tolua_server_Fuben_createMonster00);
   tolua_function(tolua_S,"getreateMonsterPosXY",tolua_server_Fuben_getreateMonsterPosXY00);
   tolua_function(tolua_S,"setMonsterIndex",tolua_server_Fuben_setMonsterIndex00);
   tolua_function(tolua_S,"ResetMonsterShowName",tolua_server_Fuben_ResetMonsterShowName00);
   tolua_function(tolua_S,"AddMonsterBuffById",tolua_server_Fuben_AddMonsterBuffById00);
   tolua_function(tolua_S,"DelMonsterBuffById",tolua_server_Fuben_DelMonsterBuffById00);
   tolua_function(tolua_S,"createMonsters",tolua_server_Fuben_createMonsters00);
   tolua_function(tolua_S,"createMonstersInRange",tolua_server_Fuben_createMonstersInRange00);
   tolua_function(tolua_S,"createOneMonsters",tolua_server_Fuben_createOneMonsters00);
   tolua_function(tolua_S,"createMonstersAndSetPathpoint",tolua_server_Fuben_createMonstersAndSetPathpoint00);
   tolua_function(tolua_S,"getMonsterCount",tolua_server_Fuben_getMonsterCount00);
   tolua_function(tolua_S,"getSceneMonsterCount",tolua_server_Fuben_getSceneMonsterCount00);
   tolua_function(tolua_S,"getSceneHandleByName",tolua_server_Fuben_getSceneHandleByName00);
   tolua_function(tolua_S,"getSceneHandleById",tolua_server_Fuben_getSceneHandleById00);
   tolua_function(tolua_S,"getMyMonsterCount",tolua_server_Fuben_getMyMonsterCount00);
   tolua_function(tolua_S,"clearMonster",tolua_server_Fuben_clearMonster00);
   tolua_function(tolua_S,"clearMonster",tolua_server_Fuben_clearMonster01);
   tolua_function(tolua_S,"clearSceneEntity",tolua_server_Fuben_clearSceneEntity00);
   tolua_function(tolua_S,"killMonsterByActor",tolua_server_Fuben_killMonsterByActor00);
   tolua_function(tolua_S,"sendMsgToScene",tolua_server_Fuben_sendMsgToScene00);
   tolua_function(tolua_S,"sendCountDown",tolua_server_Fuben_sendCountDown00);
   tolua_function(tolua_S,"sendMsgToFb",tolua_server_Fuben_sendMsgToFb00);
   tolua_function(tolua_S,"getNpcPtrByName",tolua_server_Fuben_getNpcPtrByName00);
   tolua_function(tolua_S,"getFbActorPtr",tolua_server_Fuben_getFbActorPtr00);
   tolua_function(tolua_S,"getMonsterPtrById",tolua_server_Fuben_getMonsterPtrById00);
   tolua_function(tolua_S,"getMonsterPtrByIdx",tolua_server_Fuben_getMonsterPtrByIdx00);
   tolua_function(tolua_S,"getMonsterBeAttackActorList",tolua_server_Fuben_getMonsterBeAttackActorList00);
   tolua_function(tolua_S,"isKillAllMonster",tolua_server_Fuben_isKillAllMonster00);
   tolua_function(tolua_S,"getLiveMonsterCount",tolua_server_Fuben_getLiveMonsterCount00);
   tolua_function(tolua_S,"setSceneTime",tolua_server_Fuben_setSceneTime00);
   tolua_function(tolua_S,"getSceneTime",tolua_server_Fuben_getSceneTime00);
   tolua_function(tolua_S,"getSceneNameById",tolua_server_Fuben_getSceneNameById00);
   tolua_function(tolua_S,"setSceneNpcCanNotSee",tolua_server_Fuben_setSceneNpcCanNotSee00);
   tolua_function(tolua_S,"setSceneAreaAttri",tolua_server_Fuben_setSceneAreaAttri00);
   tolua_function(tolua_S,"GetAreaListIndex",tolua_server_Fuben_GetAreaListIndex00);
   tolua_function(tolua_S,"GetNowSceneGuildList",tolua_server_Fuben_GetNowSceneGuildList00);
   tolua_function(tolua_S,"ResetFubenSceneConfig",tolua_server_Fuben_ResetFubenSceneConfig00);
   tolua_function(tolua_S,"getKillBossCount",tolua_server_Fuben_getKillBossCount00);
   tolua_function(tolua_S,"getKillBossActorName",tolua_server_Fuben_getKillBossActorName00);
   tolua_function(tolua_S,"getFbTime",tolua_server_Fuben_getFbTime00);
   tolua_function(tolua_S,"getActorDieCount",tolua_server_Fuben_getActorDieCount00);
   tolua_function(tolua_S,"getFbMonsterTotal",tolua_server_Fuben_getFbMonsterTotal00);
   tolua_function(tolua_S,"getKillMonsterCount",tolua_server_Fuben_getKillMonsterCount00);
   tolua_function(tolua_S,"getDyanmicVar",tolua_server_Fuben_getDyanmicVar00);
   tolua_function(tolua_S,"clearDynamicVar",tolua_server_Fuben_clearDynamicVar00);
   tolua_function(tolua_S,"getScenePlayerCount",tolua_server_Fuben_getScenePlayerCount00);
   tolua_function(tolua_S,"getSceenWidth",tolua_server_Fuben_getSceenWidth00);
   tolua_function(tolua_S,"getScenHeight",tolua_server_Fuben_getScenHeight00);
   tolua_function(tolua_S,"onCanMove",tolua_server_Fuben_onCanMove00);
   tolua_function(tolua_S,"getNpcPtrFromAllScenes",tolua_server_Fuben_getNpcPtrFromAllScenes00);
   tolua_function(tolua_S,"getScenePtrById",tolua_server_Fuben_getScenePtrById00);
   tolua_function(tolua_S,"getScenePtrByName",tolua_server_Fuben_getScenePtrByName00);
   tolua_function(tolua_S,"getNpcPtrById",tolua_server_Fuben_getNpcPtrById00);
   tolua_function(tolua_S,"getFbNpcPtrById",tolua_server_Fuben_getFbNpcPtrById00);
   tolua_function(tolua_S,"hasMapAreaAttri",tolua_server_Fuben_hasMapAreaAttri00);
   tolua_function(tolua_S,"setFbTime",tolua_server_Fuben_setFbTime00);
   tolua_function(tolua_S,"clearAllMonster",tolua_server_Fuben_clearAllMonster00);
   tolua_function(tolua_S,"getEntityCountAtXY",tolua_server_Fuben_getEntityCountAtXY00);
   tolua_function(tolua_S,"SendSecneShortCutMsg",tolua_server_Fuben_SendSecneShortCutMsg00);
   tolua_function(tolua_S,"getSceneNeedLevel",tolua_server_Fuben_getSceneNeedLevel00);
   tolua_function(tolua_S,"setUnableMovePoint",tolua_server_Fuben_setUnableMovePoint00);
   tolua_function(tolua_S,"getSceneId",tolua_server_Fuben_getSceneId00);
   tolua_function(tolua_S,"useDefaultCreateMonster",tolua_server_Fuben_useDefaultCreateMonster00);
   tolua_function(tolua_S,"isFuben",tolua_server_Fuben_isFuben00);
   tolua_function(tolua_S,"ExitAllFbActor",tolua_server_Fuben_ExitAllFbActor00);
   tolua_function(tolua_S,"getMonsterHp",tolua_server_Fuben_getMonsterHp00);
   tolua_function(tolua_S,"getMonsterMaxHp",tolua_server_Fuben_getMonsterMaxHp00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"aaNoAttri",aaNoAttri);
  tolua_constant(tolua_S,"aaSaft",aaSaft);
  tolua_constant(tolua_S,"aaAddBuff",aaAddBuff);
  tolua_constant(tolua_S,"aaWar",aaWar);
  tolua_constant(tolua_S,"aaReloadMap",aaReloadMap);
  tolua_constant(tolua_S,"aaCrossMan",aaCrossMan);
  tolua_constant(tolua_S,"aaCrossMonster",aaCrossMonster);
  tolua_constant(tolua_S,"aaNotTransfer",aaNotTransfer);
  tolua_constant(tolua_S,"aaNotSkillId",aaNotSkillId);
  tolua_constant(tolua_S,"aaNotItemId",aaNotItemId);
  tolua_constant(tolua_S,"aaSceneLevel",aaSceneLevel);
  tolua_constant(tolua_S,"aaCity",aaCity);
  tolua_constant(tolua_S,"aaNotLevelProtect",aaNotLevelProtect);
  tolua_constant(tolua_S,"aaZY",aaZY);
  tolua_constant(tolua_S,"aaSaftRelive",aaSaftRelive);
  tolua_constant(tolua_S,"aaForcePkMode",aaForcePkMode);
  tolua_constant(tolua_S,"aaNotSkillAttri",aaNotSkillAttri);
  tolua_constant(tolua_S,"aaNotDeal",aaNotDeal);
  tolua_constant(tolua_S,"aaCannotViewOther",aaCannotViewOther);
  tolua_constant(tolua_S,"aaCannotSeeName",aaCannotSeeName);
  tolua_constant(tolua_S,"aaLeaveDelBuf",aaLeaveDelBuf);
  tolua_constant(tolua_S,"aaSceneMaxLevel",aaSceneMaxLevel);
  tolua_constant(tolua_S,"asDealArea",asDealArea);
  tolua_constant(tolua_S,"asSceneAreaMode",asSceneAreaMode);
  tolua_constant(tolua_S,"asNoDropEquip",asNoDropEquip);
  tolua_constant(tolua_S,"aaNewPlayerProtect",aaNewPlayerProtect);
  tolua_constant(tolua_S,"aaNoFire",aaNoFire);
  tolua_constant(tolua_S,"aaChangeModel",aaChangeModel);
  tolua_constant(tolua_S,"asNoDropBagCross",asNoDropBagCross);
  tolua_constant(tolua_S,"aaNotHereRelive",aaNotHereRelive);
  tolua_constant(tolua_S,"aaNotDeathPunish",aaNotDeathPunish);
  tolua_constant(tolua_S,"aaDigArea",aaDigArea);
  tolua_constant(tolua_S,"aaWorshipMonarch",aaWorshipMonarch);
  tolua_constant(tolua_S,"aaNoticeBossIcon",aaNoticeBossIcon);
  tolua_constant(tolua_S,"aaAutoFight",aaAutoFight);
  tolua_constant(tolua_S,"aaNotCreateTeam",aaNotCreateTeam);
  tolua_constant(tolua_S,"aaSafeResurrection",aaSafeResurrection);
  tolua_constant(tolua_S,"aaNotCallHero",aaNotCallHero);
  tolua_constant(tolua_S,"aaSceneNotTransfer",aaSceneNotTransfer);
  tolua_constant(tolua_S,"aaChangeWeapon",aaChangeWeapon);
  tolua_constant(tolua_S,"aaChangeName",aaChangeName);
  tolua_constant(tolua_S,"aaActivity",aaActivity);
  tolua_constant(tolua_S,"aaForbidSetpkMode",aaForbidSetpkMode);
  tolua_constant(tolua_S,"aaNotCallPet",aaNotCallPet);
  tolua_constant(tolua_S,"aaCampWar",aaCampWar);
  tolua_constant(tolua_S,"aaPaodianExp",aaPaodianExp);
  tolua_constant(tolua_S,"aaCostCoin",aaCostCoin);
  tolua_constant(tolua_S,"aaOverTimeTick",aaOverTimeTick);
  tolua_constant(tolua_S,"aaAttriCount",aaAttriCount);
  tolua_constant(tolua_S,"aaMaxAttriCount",aaMaxAttriCount);
  tolua_function(tolua_S,"print",tolua_server_print00);
  tolua_module(tolua_S,"System",0);
  tolua_beginmodule(tolua_S,"System");
   tolua_function(tolua_S,"getServerName",tolua_server_System_getServerName00);
   tolua_function(tolua_S,"getPfId",tolua_server_System_getPfId00);
   tolua_function(tolua_S,"getYYKey",tolua_server_System_getYYKey00);
   tolua_function(tolua_S,"getGameFlag",tolua_server_System_getGameFlag00);
   tolua_function(tolua_S,"getServerId",tolua_server_System_getServerId00);
   tolua_function(tolua_S,"getDate",tolua_server_System_getDate00);
   tolua_function(tolua_S,"getTime",tolua_server_System_getTime00);
   tolua_function(tolua_S,"getSceneIdByName",tolua_server_System_getSceneIdByName00);
   tolua_function(tolua_S,"getDayOfWeek",tolua_server_System_getDayOfWeek00);
   tolua_function(tolua_S,"getDayOfMonth",tolua_server_System_getDayOfMonth00);
   tolua_function(tolua_S,"getMonthOfNow",tolua_server_System_getMonthOfNow00);
   tolua_function(tolua_S,"getTick",tolua_server_System_getTick00);
   tolua_function(tolua_S,"getRandomNumber",tolua_server_System_getRandomNumber00);
   tolua_function(tolua_S,"getCurrMiniTime",tolua_server_System_getCurrMiniTime00);
   tolua_function(tolua_S,"isSameWeek",tolua_server_System_isSameWeek00);
   tolua_function(tolua_S,"isSameDay",tolua_server_System_isSameDay00);
   tolua_function(tolua_S,"telportSceneByName",tolua_server_System_telportSceneByName00);
   tolua_function(tolua_S,"telportScene",tolua_server_System_telportScene00);
   tolua_function(tolua_S,"telportSceneDelay",tolua_server_System_telportSceneDelay00);
   tolua_function(tolua_S,"telportSceneDefaultPoint",tolua_server_System_telportSceneDefaultPoint00);
   tolua_function(tolua_S,"InitScriptNetmsgDispatcher",tolua_server_System_InitScriptNetmsgDispatcher00);
   tolua_function(tolua_S,"regScriptNetMsg",tolua_server_System_regScriptNetMsg00);
   tolua_function(tolua_S,"InitScriptActorEventDispatcher",tolua_server_System_InitScriptActorEventDispatcher00);
   tolua_function(tolua_S,"regScriptEvent",tolua_server_System_regScriptEvent00);
   tolua_function(tolua_S,"trace",tolua_server_System_trace00);
   tolua_function(tolua_S,"deepCreateDirectory",tolua_server_System_deepCreateDirectory00);
   tolua_function(tolua_S,"fileExists",tolua_server_System_fileExists00);
   tolua_function(tolua_S,"getActorPtr",tolua_server_System_getActorPtr00);
   tolua_function(tolua_S,"broadcastTipmsg",tolua_server_System_broadcastTipmsg00);
   tolua_function(tolua_S,"broadcastTipmsgCs",tolua_server_System_broadcastTipmsgCs00);
   tolua_function(tolua_S,"broadcastTipmsgLimitLev",tolua_server_System_broadcastTipmsgLimitLev00);
   tolua_function(tolua_S,"broadcastTipmsgWithID",tolua_server_System_broadcastTipmsgWithID00);
   tolua_function(tolua_S,"broadTipmsgWithParams",tolua_server_System_broadTipmsgWithParams00);
   tolua_function(tolua_S,"getEntityByPtr",tolua_server_System_getEntityByPtr00);
   tolua_function(tolua_S,"getEntityTypeByHandle",tolua_server_System_getEntityTypeByHandle00);
   tolua_function(tolua_S,"getEntityPtrByActorID",tolua_server_System_getEntityPtrByActorID00);
   tolua_function(tolua_S,"registerTimeCall",tolua_server_System_registerTimeCall00);
   tolua_function(tolua_S,"getTimeCall",tolua_server_System_getTimeCall00);
   tolua_function(tolua_S,"unregisterTimeCall",tolua_server_System_unregisterTimeCall00);
   tolua_function(tolua_S,"rawCallExport",tolua_server_System_rawCallExport00);
   tolua_function(tolua_S,"isInTimeRange",tolua_server_System_isInTimeRange00);
   tolua_function(tolua_S,"getTimeRange",tolua_server_System_getTimeRange00);
   tolua_function(tolua_S,"isInDateRange",tolua_server_System_isInDateRange00);
   tolua_function(tolua_S,"isInOffsetTimeRange",tolua_server_System_isInOffsetTimeRange00);
   tolua_function(tolua_S,"getRandDateTime",tolua_server_System_getRandDateTime00);
   tolua_function(tolua_S,"encodeNumTime",tolua_server_System_encodeNumTime00);
   tolua_function(tolua_S,"encodeTime",tolua_server_System_encodeTime00);
   tolua_function(tolua_S,"decodeTime",tolua_server_System_decodeTime00);
   tolua_function(tolua_S,"getToday",tolua_server_System_getToday00);
   tolua_function(tolua_S,"getOpenServerToday",tolua_server_System_getOpenServerToday00);
   tolua_function(tolua_S,"getOpenServerRelToday",tolua_server_System_getOpenServerRelToday00);
   tolua_function(tolua_S,"getGlobalNpc",tolua_server_System_getGlobalNpc00);
   tolua_function(tolua_S,"getItemNpc",tolua_server_System_getItemNpc00);
   tolua_function(tolua_S,"getGuildName",tolua_server_System_getGuildName00);
   tolua_function(tolua_S,"changeGuildCoin",tolua_server_System_changeGuildCoin00);
   tolua_function(tolua_S,"getGuildLeader",tolua_server_System_getGuildLeader00);
   tolua_function(tolua_S,"getGuildLeaderId",tolua_server_System_getGuildLeaderId00);
   tolua_function(tolua_S,"getTomorrow",tolua_server_System_getTomorrow00);
   tolua_function(tolua_S,"registerMonsterDeath",tolua_server_System_registerMonsterDeath00);
   tolua_function(tolua_S,"registerMonsterMob",tolua_server_System_registerMonsterMob00);
   tolua_function(tolua_S,"registerMonsterLiveTimeOut",tolua_server_System_registerMonsterLiveTimeOut00);
   tolua_function(tolua_S,"setObjectVar",tolua_server_System_setObjectVar00);
   tolua_function(tolua_S,"getObjectVar",tolua_server_System_getObjectVar00);
   tolua_function(tolua_S,"removeObjectVar",tolua_server_System_removeObjectVar00);
   tolua_function(tolua_S,"setObjectVarPtr",tolua_server_System_setObjectVarPtr00);
   tolua_function(tolua_S,"getObjectVarPtr",tolua_server_System_getObjectVarPtr00);
   tolua_function(tolua_S,"getDyanmicVar",tolua_server_System_getDyanmicVar00);
   tolua_function(tolua_S,"getStaticVar",tolua_server_System_getStaticVar00);
   tolua_function(tolua_S,"GetActorIdByCsRank",tolua_server_System_GetActorIdByCsRank00);
   tolua_function(tolua_S,"maintainGuildWeekly",tolua_server_System_maintainGuildWeekly00);
   tolua_function(tolua_S,"CallmaintainTopTitle",tolua_server_System_CallmaintainTopTitle00);
   tolua_function(tolua_S,"getSystemDef",tolua_server_System_getSystemDef00);
   tolua_function(tolua_S,"getServerOpenTime",tolua_server_System_getServerOpenTime00);
   tolua_function(tolua_S,"getServerCombineTime",tolua_server_System_getServerCombineTime00);
   tolua_function(tolua_S,"getDaysSinceCombineServer",tolua_server_System_getDaysSinceCombineServer00);
   tolua_function(tolua_S,"playScrEffect",tolua_server_System_playScrEffect00);
   tolua_function(tolua_S,"playScrEffectCode",tolua_server_System_playScrEffectCode00);
   tolua_function(tolua_S,"playSceneScrEffectCode",tolua_server_System_playSceneScrEffectCode00);
   tolua_function(tolua_S,"sendOfflineMsg",tolua_server_System_sendOfflineMsg00);
   tolua_function(tolua_S,"setIntBit",tolua_server_System_setIntBit00);
   tolua_function(tolua_S,"getIntBit",tolua_server_System_getIntBit00);
   tolua_function(tolua_S,"getValueMAKELONG",tolua_server_System_getValueMAKELONG00);
   tolua_function(tolua_S,"refreshStore",tolua_server_System_refreshStore00);
   tolua_function(tolua_S,"getDaysSinceOpenServer",tolua_server_System_getDaysSinceOpenServer00);
   tolua_function(tolua_S,"SetShutup",tolua_server_System_SetShutup00);
   tolua_function(tolua_S,"findGuildIdByHandle",tolua_server_System_findGuildIdByHandle00);
   tolua_function(tolua_S,"sendGuildMsg",tolua_server_System_sendGuildMsg00);
   tolua_function(tolua_S,"changeGuildFr",tolua_server_System_changeGuildFr00);
   tolua_function(tolua_S,"getSkillNameById",tolua_server_System_getSkillNameById00);
   tolua_function(tolua_S,"getLocalServerId",tolua_server_System_getLocalServerId00);
   tolua_function(tolua_S,"getCommonServerId",tolua_server_System_getCommonServerId00);
   tolua_function(tolua_S,"setTeleportVisible",tolua_server_System_setTeleportVisible00);
   tolua_function(tolua_S,"isTeleportVisible",tolua_server_System_isTeleportVisible00);
   tolua_function(tolua_S,"telportRandPos",tolua_server_System_telportRandPos00);
   tolua_function(tolua_S,"telportLastSceneRandPos",tolua_server_System_telportLastSceneRandPos00);
   tolua_function(tolua_S,"rfeshConsumeRank",tolua_server_System_rfeshConsumeRank00);
   tolua_function(tolua_S,"updateVocNpcStatue",tolua_server_System_updateVocNpcStatue00);
   tolua_function(tolua_S,"saveCsRank",tolua_server_System_saveCsRank00);
   tolua_function(tolua_S,"loadCsRank",tolua_server_System_loadCsRank00);
   tolua_function(tolua_S,"getServerIdByCsRank",tolua_server_System_getServerIdByCsRank00);
   tolua_function(tolua_S,"loadUserOfflineDataCs",tolua_server_System_loadUserOfflineDataCs00);
   tolua_function(tolua_S,"setGuildExipredTime",tolua_server_System_setGuildExipredTime00);
   tolua_function(tolua_S,"getGuildDartHandle",tolua_server_System_getGuildDartHandle00);
   tolua_function(tolua_S,"setGuildDartHandle",tolua_server_System_setGuildDartHandle00);
   tolua_function(tolua_S,"getMonsterNameById",tolua_server_System_getMonsterNameById00);
   tolua_function(tolua_S,"getMonsterTimeById",tolua_server_System_getMonsterTimeById00);
   tolua_function(tolua_S,"getMonsterLevel",tolua_server_System_getMonsterLevel00);
   tolua_function(tolua_S,"getToxicFreshTimes",tolua_server_System_getToxicFreshTimes00);
   tolua_function(tolua_S,"setToxicFreshTimes",tolua_server_System_setToxicFreshTimes00);
   tolua_function(tolua_S,"setkillToxicNum",tolua_server_System_setkillToxicNum00);
   tolua_function(tolua_S,"getkillToxicNum",tolua_server_System_getkillToxicNum00);
   tolua_function(tolua_S,"onSbkMasterOpenBuff",tolua_server_System_onSbkMasterOpenBuff00);
   tolua_function(tolua_S,"filterWords",tolua_server_System_filterWords00);
   tolua_function(tolua_S,"sendPataMasterMsg",tolua_server_System_sendPataMasterMsg00);
   tolua_function(tolua_S,"addItemMsgById",tolua_server_System_addItemMsgById00);
   tolua_function(tolua_S,"addItemMsgByName",tolua_server_System_addItemMsgByName00);
   tolua_function(tolua_S,"getMonsterGrowInfo",tolua_server_System_getMonsterGrowInfo00);
   tolua_function(tolua_S,"sendItemOutPutToLog",tolua_server_System_sendItemOutPutToLog00);
   tolua_function(tolua_S,"getMerchandisePrice",tolua_server_System_getMerchandisePrice00);
   tolua_function(tolua_S,"isStartCommonServer",tolua_server_System_isStartCommonServer00);
   tolua_function(tolua_S,"isCommonServer",tolua_server_System_isCommonServer00);
   tolua_function(tolua_S,"getPlayerMaxLevel",tolua_server_System_getPlayerMaxLevel00);
   tolua_function(tolua_S,"saveFiles",tolua_server_System_saveFiles00);
   tolua_function(tolua_S,"getRealtimeMiniTime",tolua_server_System_getRealtimeMiniTime00);
   tolua_function(tolua_S,"sendCommonMsgByName",tolua_server_System_sendCommonMsgByName00);
   tolua_function(tolua_S,"getchangeNameFlag",tolua_server_System_getchangeNameFlag00);
   tolua_function(tolua_S,"sendGuildListToDestServer",tolua_server_System_sendGuildListToDestServer00);
   tolua_function(tolua_S,"getGuildChallengeTimes",tolua_server_System_getGuildChallengeTimes00);
   tolua_function(tolua_S,"setGuildChallengeTimes",tolua_server_System_setGuildChallengeTimes00);
   tolua_function(tolua_S,"setGuildNextChallengeTime",tolua_server_System_setGuildNextChallengeTime00);
   tolua_function(tolua_S,"getGuildNextChallengeTime",tolua_server_System_getGuildNextChallengeTime00);
   tolua_function(tolua_S,"setGuildBossLevel",tolua_server_System_setGuildBossLevel00);
   tolua_function(tolua_S,"getGuildBossLevel",tolua_server_System_getGuildBossLevel00);
   tolua_function(tolua_S,"setBossChanllengeHandle",tolua_server_System_setBossChanllengeHandle00);
   tolua_function(tolua_S,"geBossChanllengeHandle",tolua_server_System_geBossChanllengeHandle00);
   tolua_function(tolua_S,"getGuildbuildingLev",tolua_server_System_getGuildbuildingLev00);
   tolua_function(tolua_S,"changeGuildBuildingLev",tolua_server_System_changeGuildBuildingLev00);
   tolua_function(tolua_S,"getGuildBuildingCdTime",tolua_server_System_getGuildBuildingCdTime00);
   tolua_function(tolua_S,"setGuildBuildingCdTime",tolua_server_System_setGuildBuildingCdTime00);
   tolua_function(tolua_S,"sendGuildChanllengeResult",tolua_server_System_sendGuildChanllengeResult00);
   tolua_function(tolua_S,"sendGuildSBKRank",tolua_server_System_sendGuildSBKRank00);
   tolua_function(tolua_S,"sendSBKGuild",tolua_server_System_sendSBKGuild00);
   tolua_function(tolua_S,"getNpcName",tolua_server_System_getNpcName00);
   tolua_function(tolua_S,"setNpcTitle",tolua_server_System_setNpcTitle00);
   tolua_function(tolua_S,"getEntityHandle",tolua_server_System_getEntityHandle00);
   tolua_function(tolua_S,"setFireValRate",tolua_server_System_setFireValRate00);
   tolua_function(tolua_S,"delServerMail",tolua_server_System_delServerMail00);
   tolua_function(tolua_S,"sendSysMail",tolua_server_System_sendSysMail00);
   tolua_function(tolua_S,"sendSysDropMail",tolua_server_System_sendSysDropMail00);
   tolua_function(tolua_S,"getMailAttachValue",tolua_server_System_getMailAttachValue00);
   tolua_function(tolua_S,"getBossLastKillTime",tolua_server_System_getBossLastKillTime00);
   tolua_function(tolua_S,"isActivityRunning",tolua_server_System_isActivityRunning00);
   tolua_function(tolua_S,"closeActivityRunning",tolua_server_System_closeActivityRunning00);
   tolua_function(tolua_S,"isReachSecondBeforeActivityEnd",tolua_server_System_isReachSecondBeforeActivityEnd00);
   tolua_function(tolua_S,"getActivityEndMiniSecond",tolua_server_System_getActivityEndMiniSecond00);
   tolua_function(tolua_S,"sendAllActorOneActivityData",tolua_server_System_sendAllActorOneActivityData00);
   tolua_function(tolua_S,"getPActivityOpenDay",tolua_server_System_getPActivityOpenDay00);
   tolua_function(tolua_S,"CheckGPActivityStartEnd",tolua_server_System_CheckGPActivityStartEnd00);
   tolua_function(tolua_S,"SendChatMsg",tolua_server_System_SendChatMsg00);
   tolua_function(tolua_S,"getRunningActivityId",tolua_server_System_getRunningActivityId00);
   tolua_function(tolua_S,"getRunningActivityStartTime",tolua_server_System_getRunningActivityStartTime00);
   tolua_function(tolua_S,"getRunningActivityStartTimeRelToday",tolua_server_System_getRunningActivityStartTimeRelToday00);
   tolua_function(tolua_S,"addAsyncWorker",tolua_server_System_addAsyncWorker00);
   tolua_function(tolua_S,"CrossBattlefieldSignup",tolua_server_System_CrossBattlefieldSignup00);
   tolua_function(tolua_S,"GetCurrentCrossBattlefieldPlayerNum",tolua_server_System_GetCurrentCrossBattlefieldPlayerNum00);
   tolua_function(tolua_S,"HadCrossBattlefieldSignup",tolua_server_System_HadCrossBattlefieldSignup00);
   tolua_function(tolua_S,"initCrossBattlefieldData",tolua_server_System_initCrossBattlefieldData00);
   tolua_function(tolua_S,"setSysRateExp",tolua_server_System_setSysRateExp00);
   tolua_function(tolua_S,"getSceneCenterPos",tolua_server_System_getSceneCenterPos00);
   tolua_function(tolua_S,"createDropItems",tolua_server_System_createDropItems00);
   tolua_function(tolua_S,"createDropMoney",tolua_server_System_createDropMoney00);
   tolua_function(tolua_S,"sendWorldLevel",tolua_server_System_sendWorldLevel00);
   tolua_function(tolua_S,"getWorldLevel",tolua_server_System_getWorldLevel00);
   tolua_function(tolua_S,"setQuickBuffId",tolua_server_System_setQuickBuffId00);
   tolua_function(tolua_S,"NewRedPacketId",tolua_server_System_NewRedPacketId00);
   tolua_function(tolua_S,"miniDateTime2String",tolua_server_System_miniDateTime2String00);
   tolua_function(tolua_S,"SendConsumeLog",tolua_server_System_SendConsumeLog00);
   tolua_function(tolua_S,"RefeshWorldLevel",tolua_server_System_RefeshWorldLevel00);
   tolua_function(tolua_S,"reloadItem",tolua_server_System_reloadItem00);
   tolua_function(tolua_S,"reloadLang",tolua_server_System_reloadLang00);
   tolua_function(tolua_S,"reloadMonster",tolua_server_System_reloadMonster00);
   tolua_function(tolua_S,"reloadVSPDef",tolua_server_System_reloadVSPDef00);
   tolua_function(tolua_S,"reloadFw",tolua_server_System_reloadFw00);
   tolua_function(tolua_S,"reloadConfig",tolua_server_System_reloadConfig00);
   tolua_function(tolua_S,"getSpid",tolua_server_System_getSpid00);
   tolua_function(tolua_S,"getStrSpid",tolua_server_System_getStrSpid00);
   tolua_function(tolua_S,"MD5",tolua_server_System_MD500);
   tolua_function(tolua_S,"sendCrossServerMail",tolua_server_System_sendCrossServerMail00);
   tolua_function(tolua_S,"KickAllCrossServerActor",tolua_server_System_KickAllCrossServerActor00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Item",0);
  tolua_beginmodule(tolua_S,"Item");
   tolua_function(tolua_S,"setItemProperty",tolua_server_Item_setItemProperty00);
   tolua_function(tolua_S,"getItemProperty",tolua_server_Item_getItemProperty00);
   tolua_function(tolua_S,"getItemPropertyById",tolua_server_Item_getItemPropertyById00);
   tolua_function(tolua_S,"getItemGuid",tolua_server_Item_getItemGuid00);
   tolua_function(tolua_S,"getItemId",tolua_server_Item_getItemId00);
   tolua_function(tolua_S,"getItemGuidStr",tolua_server_Item_getItemGuidStr00);
   tolua_function(tolua_S,"sendItemProcessResult",tolua_server_Item_sendItemProcessResult00);
   tolua_function(tolua_S,"sendItemProcessConsume",tolua_server_Item_sendItemProcessConsume00);
   tolua_function(tolua_S,"createItem",tolua_server_Item_createItem00);
   tolua_function(tolua_S,"removeItem",tolua_server_Item_removeItem00);
   tolua_function(tolua_S,"removeItemDura",tolua_server_Item_removeItemDura00);
   tolua_function(tolua_S,"removeOtherItem",tolua_server_Item_removeOtherItem00);
   tolua_function(tolua_S,"removeItemByType",tolua_server_Item_removeItemByType00);
   tolua_function(tolua_S,"removeEquip",tolua_server_Item_removeEquip00);
   tolua_function(tolua_S,"getItemByType",tolua_server_Item_getItemByType00);
   tolua_function(tolua_S,"addItem",tolua_server_Item_addItem00);
   tolua_function(tolua_S,"getItemLinkMsg",tolua_server_Item_getItemLinkMsg00);
   tolua_function(tolua_S,"getAwardDesc",tolua_server_Item_getAwardDesc00);
   tolua_function(tolua_S,"getEquipCount",tolua_server_Item_getEquipCount00);
   tolua_function(tolua_S,"getEquipBySortID",tolua_server_Item_getEquipBySortID00);
   tolua_function(tolua_S,"getBagItemCount",tolua_server_Item_getBagItemCount00);
   tolua_function(tolua_S,"getBagItemBySortID",tolua_server_Item_getBagItemBySortID00);
   tolua_function(tolua_S,"getBagItemPtrByGuid",tolua_server_Item_getBagItemPtrByGuid00);
   tolua_function(tolua_S,"getBagItemPtrById",tolua_server_Item_getBagItemPtrById00);
   tolua_function(tolua_S,"getEquipPtrByGuid",tolua_server_Item_getEquipPtrByGuid00);
   tolua_function(tolua_S,"getEquipItemPtr",tolua_server_Item_getEquipItemPtr00);
   tolua_function(tolua_S,"getEquipByType",tolua_server_Item_getEquipByType00);
   tolua_function(tolua_S,"releaseItemPtr",tolua_server_Item_releaseItemPtr00);
   tolua_function(tolua_S,"getBagEmptyGridCount",tolua_server_Item_getBagEmptyGridCount00);
   tolua_function(tolua_S,"getAllBagMinEmptyGridCount",tolua_server_Item_getAllBagMinEmptyGridCount00);
   tolua_function(tolua_S,"bagIsEnough",tolua_server_Item_bagIsEnough00);
   tolua_function(tolua_S,"getAddItemNeedGridCount",tolua_server_Item_getAddItemNeedGridCount00);
   tolua_function(tolua_S,"getItemStaticAttrById",tolua_server_Item_getItemStaticAttrById00);
   tolua_function(tolua_S,"getItemName",tolua_server_Item_getItemName00);
   tolua_function(tolua_S,"getItemPackageTyp",tolua_server_Item_getItemPackageTyp00);
   tolua_function(tolua_S,"addSellItem",tolua_server_Item_addSellItem00);
   tolua_function(tolua_S,"delSellItem",tolua_server_Item_delSellItem00);
   tolua_function(tolua_S,"getSellItem",tolua_server_Item_getSellItem00);
   tolua_function(tolua_S,"isForgeItem",tolua_server_Item_isForgeItem00);
   tolua_function(tolua_S,"isStrongLevel",tolua_server_Item_isStrongLevel00);
   tolua_function(tolua_S,"getDuraFullItemFromBag",tolua_server_Item_getDuraFullItemFromBag00);
   tolua_function(tolua_S,"getSuitIdByItemId",tolua_server_Item_getSuitIdByItemId00);
   tolua_function(tolua_S,"isGetAllSuitEquip",tolua_server_Item_isGetAllSuitEquip00);
   tolua_function(tolua_S,"equipItem",tolua_server_Item_equipItem00);
   tolua_function(tolua_S,"takeOffItem",tolua_server_Item_takeOffItem00);
   tolua_function(tolua_S,"clearBag",tolua_server_Item_clearBag00);
   tolua_function(tolua_S,"getBagItemIndex",tolua_server_Item_getBagItemIndex00);
   tolua_function(tolua_S,"getItemPtrByIndex",tolua_server_Item_getItemPtrByIndex00);
   tolua_function(tolua_S,"isGuildMeltingItem",tolua_server_Item_isGuildMeltingItem00);
   tolua_function(tolua_S,"drop_item_in_random_area_byGroupID",tolua_server_Item_drop_item_in_random_area_byGroupID00);
   tolua_function(tolua_S,"isEquipment",tolua_server_Item_isEquipment00);
   tolua_function(tolua_S,"isEquipmentById",tolua_server_Item_isEquipmentById00);
   tolua_function(tolua_S,"getItemPtrHighestStar",tolua_server_Item_getItemPtrHighestStar00);
   tolua_function(tolua_S,"generateItemAttrsInSmith",tolua_server_Item_generateItemAttrsInSmith00);
   tolua_function(tolua_S,"generateOneAttrInSmith",tolua_server_Item_generateOneAttrInSmith00);
   tolua_function(tolua_S,"hasItemAttrs",tolua_server_Item_hasItemAttrs00);
   tolua_function(tolua_S,"transferItemAttrs",tolua_server_Item_transferItemAttrs00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"tmNoError",tmNoError);
  tolua_constant(tolua_S,"tmNoMoreCoin",tmNoMoreCoin);
  tolua_constant(tolua_S,"tmNomoreYubao",tmNomoreYubao);
  tolua_constant(tolua_S,"tmMpLimited",tmMpLimited);
  tolua_constant(tolua_S,"tmLevelLimited",tmLevelLimited);
  tolua_constant(tolua_S,"tmExpLimited",tmExpLimited);
  tolua_constant(tolua_S,"tmCommonCDLimited",tmCommonCDLimited);
  tolua_constant(tolua_S,"tmDistanceLimited",tmDistanceLimited);
  tolua_constant(tolua_S,"tmGetGold",tmGetGold);
  tolua_constant(tolua_S,"tmGetYB",tmGetYB);
  tolua_constant(tolua_S,"tmGetBindYB",tmGetBindYB);
  tolua_constant(tolua_S,"tmLostGold",tmLostGold);
  tolua_constant(tolua_S,"tmLostYB",tmLostYB);
  tolua_constant(tolua_S,"tmLostBindYB",tmLostBindYB);
  tolua_constant(tolua_S,"tmGetExp",tmGetExp);
  tolua_constant(tolua_S,"tmTarCantAttack",tmTarCantAttack);
  tolua_constant(tolua_S,"tmInSkillCD",tmInSkillCD);
  tolua_constant(tolua_S,"tmLvlCantLearnSkill",tmLvlCantLearnSkill);
  tolua_constant(tolua_S,"tmVocCantLearnSkill",tmVocCantLearnSkill);
  tolua_constant(tolua_S,"tmCirCantLearnSkill",tmCirCantLearnSkill);
  tolua_constant(tolua_S,"tmItemCantLearnSkill",tmItemCantLearnSkill);
  tolua_constant(tolua_S,"tmSuccLearnSkill",tmSuccLearnSkill);
  tolua_constant(tolua_S,"tmSuccUpgrSkill",tmSuccUpgrSkill);
  tolua_constant(tolua_S,"tmOpenSkill_3",tmOpenSkill_3);
  tolua_constant(tolua_S,"tmCloseSkill_3",tmCloseSkill_3);
  tolua_constant(tolua_S,"tmOpenSkill_4",tmOpenSkill_4);
  tolua_constant(tolua_S,"tmCloseSkill_4",tmCloseSkill_4);
  tolua_constant(tolua_S,"tmPrepSkill_6",tmPrepSkill_6);
  tolua_constant(tolua_S,"tmPrepSkill_8",tmPrepSkill_8);
  tolua_constant(tolua_S,"tmToxicosis",tmToxicosis);
  tolua_constant(tolua_S,"tmDefenceUPAtTime",tmDefenceUPAtTime);
  tolua_constant(tolua_S,"tmDefenceRevert",tmDefenceRevert);
  tolua_constant(tolua_S,"tmchatLevelLimit",tmchatLevelLimit);
  tolua_constant(tolua_S,"tmchatCDLimit",tmchatCDLimit);
  tolua_constant(tolua_S,"tmchaToLength",tmchaToLength);
  tolua_constant(tolua_S,"tmchatillegal",tmchatillegal);
  tolua_constant(tolua_S,"tmBoratNotEnough",tmBoratNotEnough);
  tolua_constant(tolua_S,"tmBoratNotEnough_2",tmBoratNotEnough_2);
  tolua_constant(tolua_S,"tmBoratNotEnough_3",tmBoratNotEnough_3);
  tolua_constant(tolua_S,"tmBoratNotEnough_4",tmBoratNotEnough_4);
  tolua_constant(tolua_S,"tmBoratNotEnough_5",tmBoratNotEnough_5);
  tolua_constant(tolua_S,"tmchatIsBan",tmchatIsBan);
  tolua_constant(tolua_S,"tmflyshoesNotEnough",tmflyshoesNotEnough);
  tolua_constant(tolua_S,"tmChatDisabledInArea",tmChatDisabledInArea);
  tolua_constant(tolua_S,"tmpChatTargetOffLine",tmpChatTargetOffLine);
  tolua_constant(tolua_S,"tmAddFriendLevel",tmAddFriendLevel);
  tolua_constant(tolua_S,"tmFriendMaxCount",tmFriendMaxCount);
  tolua_constant(tolua_S,"tmTagetFriendToMax",tmTagetFriendToMax);
  tolua_constant(tolua_S,"tmHaveBeYourFriend",tmHaveBeYourFriend);
  tolua_constant(tolua_S,"tmAddEnamySuccess",tmAddEnamySuccess);
  tolua_constant(tolua_S,"tmAddFriendNotice",tmAddFriendNotice);
  tolua_constant(tolua_S,"tmItemCanNotDelete",tmItemCanNotDelete);
  tolua_constant(tolua_S,"tmFailForDealing",tmFailForDealing);
  tolua_constant(tolua_S,"tmDropMonsterBroad",tmDropMonsterBroad);
  tolua_constant(tolua_S,"tmTargetOffLine",tmTargetOffLine);
  tolua_constant(tolua_S,"tmTeamLevelLimited",tmTeamLevelLimited);
  tolua_constant(tolua_S,"tmOtherTeamLevelLimited",tmOtherTeamLevelLimited);
  tolua_constant(tolua_S,"tmTeamOpOfflineUser",tmTeamOpOfflineUser);
  tolua_constant(tolua_S,"tmTeamIsFull",tmTeamIsFull);
  tolua_constant(tolua_S,"tmTeamIsInTeam",tmTeamIsInTeam);
  tolua_constant(tolua_S,"tmTeamCreated",tmTeamCreated);
  tolua_constant(tolua_S,"tmTeamJoinTeam",tmTeamJoinTeam);
  tolua_constant(tolua_S,"tmTeamApplyOfflineUser",tmTeamApplyOfflineUser);
  tolua_constant(tolua_S,"tmTeamApplyNotTeamUser",tmTeamApplyNotTeamUser);
  tolua_constant(tolua_S,"tmTeamNeedCaptin",tmTeamNeedCaptin);
  tolua_constant(tolua_S,"tmTeamNotInTeam",tmTeamNotInTeam);
  tolua_constant(tolua_S,"tmTeamOfflineUserCannotCaptin",tmTeamOfflineUserCannotCaptin);
  tolua_constant(tolua_S,"tmTeamRefuseApply",tmTeamRefuseApply);
  tolua_constant(tolua_S,"tmTeamSelfIsInTeam",tmTeamSelfIsInTeam);
  tolua_constant(tolua_S,"tmTeamChatFail",tmTeamChatFail);
  tolua_constant(tolua_S,"tmSetNewCaptin",tmSetNewCaptin);
  tolua_constant(tolua_S,"tmOtherRefuseJoinTeam",tmOtherRefuseJoinTeam);
  tolua_constant(tolua_S,"tmCanNotOPOnSelf",tmCanNotOPOnSelf);
  tolua_constant(tolua_S,"tmNoTeam",tmNoTeam);
  tolua_constant(tolua_S,"tmInviteOtherInFuben",tmInviteOtherInFuben);
  tolua_constant(tolua_S,"tmTeamInFubenCanNotAddMember",tmTeamInFubenCanNotAddMember);
  tolua_constant(tolua_S,"tmInFubenCanNotJoinTeam",tmInFubenCanNotJoinTeam);
  tolua_constant(tolua_S,"tmInChallengeCannotChangeCaptin",tmInChallengeCannotChangeCaptin);
  tolua_constant(tolua_S,"tmInChallengeCannotDelMember",tmInChallengeCannotDelMember);
  tolua_constant(tolua_S,"tmInChallengeCannotLeft",tmInChallengeCannotLeft);
  tolua_constant(tolua_S,"tmInChallengeCannotJoin",tmInChallengeCannotJoin);
  tolua_constant(tolua_S,"tmInFuben",tmInFuben);
  tolua_constant(tolua_S,"tmNotTeamFubenCaptain",tmNotTeamFubenCaptain);
  tolua_constant(tolua_S,"tmHasCreateFubenTeam",tmHasCreateFubenTeam);
  tolua_constant(tolua_S,"tmInputIsForbid",tmInputIsForbid);
  tolua_constant(tolua_S,"tmSelfAddTeam",tmSelfAddTeam);
  tolua_constant(tolua_S,"tmAddTeamMember",tmAddTeamMember);
  tolua_constant(tolua_S,"tmSelfLeavTeam",tmSelfLeavTeam);
  tolua_constant(tolua_S,"tmDelTeamMember",tmDelTeamMember);
  tolua_constant(tolua_S,"tmHasFubenTeam",tmHasFubenTeam);
  tolua_constant(tolua_S,"tmCoinNotEnough",tmCoinNotEnough);
  tolua_constant(tolua_S,"tmItemNotExist",tmItemNotExist);
  tolua_constant(tolua_S,"tmCircleMaxLevelLimit",tmCircleMaxLevelLimit);
  tolua_constant(tolua_S,"tmCircleOpenServerDayLimit",tmCircleOpenServerDayLimit);
  tolua_constant(tolua_S,"tmCircleLevelLimit",tmCircleLevelLimit);
  tolua_constant(tolua_S,"tmCircleLastNumLimit",tmCircleLastNumLimit);
  tolua_constant(tolua_S,"tmCircleSoulNotEnough",tmCircleSoulNotEnough);
  tolua_constant(tolua_S,"tmDataError",tmDataError);
  tolua_constant(tolua_S,"tmCircleLimtiTimes",tmCircleLimtiTimes);
  tolua_constant(tolua_S,"tmItemNotEnough",tmItemNotEnough);
  tolua_constant(tolua_S,"tmItemCanNotUse",tmItemCanNotUse);
  tolua_constant(tolua_S,"tmItemInCd",tmItemInCd);
  tolua_constant(tolua_S,"tmItemUseSuccess",tmItemUseSuccess);
  tolua_constant(tolua_S,"tmItemCanNotUseNow",tmItemCanNotUseNow);
  tolua_constant(tolua_S,"tmAddInegral",tmAddInegral);
  tolua_constant(tolua_S,"tmPointNotEnough",tmPointNotEnough);
  tolua_constant(tolua_S,"tmOperSucc",tmOperSucc);
  tolua_constant(tolua_S,"tmApplyLimiltLevel",tmApplyLimiltLevel);
  tolua_constant(tolua_S,"tmGetGuildGx",tmGetGuildGx);
  tolua_constant(tolua_S,"tmDelGuildGx",tmDelGuildGx);
  tolua_constant(tolua_S,"tmInGuildDart",tmInGuildDart);
  tolua_constant(tolua_S,"tmGuildInfuben",tmGuildInfuben);
  tolua_constant(tolua_S,"tmMeInFuben",tmMeInFuben);
  tolua_constant(tolua_S,"tmNoDelGuildInfuben",tmNoDelGuildInfuben);
  tolua_constant(tolua_S,"tmCreateGuildErrorLevel",tmCreateGuildErrorLevel);
  tolua_constant(tolua_S,"tmCreateGuildHasInGuild",tmCreateGuildHasInGuild);
  tolua_constant(tolua_S,"tmLeftGuildCanNotJoin",tmLeftGuildCanNotJoin);
  tolua_constant(tolua_S,"tmNoRight",tmNoRight);
  tolua_constant(tolua_S,"tmCreateGuildSucc",tmCreateGuildSucc);
  tolua_constant(tolua_S,"tmCreateGuildNameErr",tmCreateGuildNameErr);
  tolua_constant(tolua_S,"tmCreateGuildNameInUse",tmCreateGuildNameInUse);
  tolua_constant(tolua_S,"tmCreateGuildInterErr",tmCreateGuildInterErr);
  tolua_constant(tolua_S,"tmJoinApplyHasInGuild",tmJoinApplyHasInGuild);
  tolua_constant(tolua_S,"tmNoThisGuild",tmNoThisGuild);
  tolua_constant(tolua_S,"tmNotInGuild",tmNotInGuild);
  tolua_constant(tolua_S,"tmChangeLeaderSucc",tmChangeLeaderSucc);
  tolua_constant(tolua_S,"tmGuildPosLimit",tmGuildPosLimit);
  tolua_constant(tolua_S,"tmMaxMemberCount",tmMaxMemberCount);
  tolua_constant(tolua_S,"tmUpdateMemoSucc",tmUpdateMemoSucc);
  tolua_constant(tolua_S,"tmApplySubmit",tmApplySubmit);
  tolua_constant(tolua_S,"tmLeaderCanNotLeft",tmLeaderCanNotLeft);
  tolua_constant(tolua_S,"tmInSbkWar",tmInSbkWar);
  tolua_constant(tolua_S,"tmGuildObjHasBeenPos",tmGuildObjHasBeenPos);
  tolua_constant(tolua_S,"tmGuildCoinLimit",tmGuildCoinLimit);
  tolua_constant(tolua_S,"tmGuildBuildLvLimit",tmGuildBuildLvLimit);
  tolua_constant(tolua_S,"tmGuildMainBuildLvLimit",tmGuildMainBuildLvLimit);
  tolua_constant(tolua_S,"tmActorInGuild",tmActorInGuild);
  tolua_constant(tolua_S,"tmTeamApplySuccess",tmTeamApplySuccess);
  tolua_constant(tolua_S,"tmLeftGuild",tmLeftGuild);
  tolua_constant(tolua_S,"tmGuildFlftAndClearGx",tmGuildFlftAndClearGx);
  tolua_constant(tolua_S,"tmGuildEventCreate",tmGuildEventCreate);
  tolua_constant(tolua_S,"tmGuildEventMemberJoin",tmGuildEventMemberJoin);
  tolua_constant(tolua_S,"tmGuildEventMemberLeft",tmGuildEventMemberLeft);
  tolua_constant(tolua_S,"tmGuildEventTickMember",tmGuildEventTickMember);
  tolua_constant(tolua_S,"tmGuildEventLeaderChange",tmGuildEventLeaderChange);
  tolua_constant(tolua_S,"tmGuildEventAddOfficer",tmGuildEventAddOfficer);
  tolua_constant(tolua_S,"tmGuildEventDelOfficer",tmGuildEventDelOfficer);
  tolua_constant(tolua_S,"tmGuildEventlevelUp",tmGuildEventlevelUp);
  tolua_constant(tolua_S,"tmGuildEventImpeach",tmGuildEventImpeach);
  tolua_constant(tolua_S,"tmGuildJoinApplyAlready",tmGuildJoinApplyAlready);
  tolua_constant(tolua_S,"tmNearAttackSkillName",tmNearAttackSkillName);
  tolua_constant(tolua_S,"tmSkillKillEntity",tmSkillKillEntity);
  tolua_constant(tolua_S,"tmBeSkilled",tmBeSkilled);
  tolua_constant(tolua_S,"tmBeSkilledByOther",tmBeSkilledByOther);
  tolua_constant(tolua_S,"tmAgreeJoin",tmAgreeJoin);
  tolua_constant(tolua_S,"tmNotPeaceful",tmNotPeaceful);
  tolua_constant(tolua_S,"tmDeclareWarNotice",tmDeclareWarNotice);
  tolua_constant(tolua_S,"tmDeclareSucc",tmDeclareSucc);
  tolua_constant(tolua_S,"tmOnWarNotice",tmOnWarNotice);
  tolua_constant(tolua_S,"tmNoMoreGuildCoin",tmNoMoreGuildCoin);
  tolua_constant(tolua_S,"tmIsUnionDecare",tmIsUnionDecare);
  tolua_constant(tolua_S,"tmBeLeader",tmBeLeader);
  tolua_constant(tolua_S,"tmGuildImpeachObjOnline",tmGuildImpeachObjOnline);
  tolua_constant(tolua_S,"tmGuildImpeachSelf",tmGuildImpeachSelf);
  tolua_constant(tolua_S,"tmGuildImpeachMemberPosErr",tmGuildImpeachMemberPosErr);
  tolua_constant(tolua_S,"tmGuildImpeachEvent",tmGuildImpeachEvent);
  tolua_constant(tolua_S,"tmGuildInProtectDay",tmGuildInProtectDay);
  tolua_constant(tolua_S,"tmGuildEventStart",tmGuildEventStart);
  tolua_constant(tolua_S,"tmAddToGuildEvent",tmAddToGuildEvent);
  tolua_constant(tolua_S,"tmLeftGuildEvent",tmLeftGuildEvent);
  tolua_constant(tolua_S,"tmUpGuildPosEvent",tmUpGuildPosEvent);
  tolua_constant(tolua_S,"tmDownGuildPosEvent",tmDownGuildPosEvent);
  tolua_constant(tolua_S,"tmGuildHead",tmGuildHead);
  tolua_constant(tolua_S,"tmGuildAssistLeader",tmGuildAssistLeader);
  tolua_constant(tolua_S,"tmGuildTangZhu",tmGuildTangZhu);
  tolua_constant(tolua_S,"tmGuildElite",tmGuildElite);
  tolua_constant(tolua_S,"tmGuildMember",tmGuildMember);
  tolua_constant(tolua_S,"tmChangeGuildLeaderEvent",tmChangeGuildLeaderEvent);
  tolua_constant(tolua_S,"tmDeleteMemEvent",tmDeleteMemEvent);
  tolua_constant(tolua_S,"tmCreateGuildEvent",tmCreateGuildEvent);
  tolua_constant(tolua_S,"tmGuildEventCoin",tmGuildEventCoin);
  tolua_constant(tolua_S,"tmDisableOperator",tmDisableOperator);
  tolua_constant(tolua_S,"tmKilledByActor",tmKilledByActor);
  tolua_constant(tolua_S,"tmGuildBeKillTips",tmGuildBeKillTips);
  tolua_constant(tolua_S,"tmGuildSecLeaderBeKilledTips",tmGuildSecLeaderBeKilledTips);
  tolua_constant(tolua_S,"tmSbkGuildLeaderBeKilledtips",tmSbkGuildLeaderBeKilledtips);
  tolua_constant(tolua_S,"tmBagIsFull",tmBagIsFull);
  tolua_constant(tolua_S,"tmLeftBagNumNotEnough",tmLeftBagNumNotEnough);
  tolua_constant(tolua_S,"tmCircleNotEnough",tmCircleNotEnough);
  tolua_constant(tolua_S,"tmApplyFriendSuccess",tmApplyFriendSuccess);
  tolua_constant(tolua_S,"tmComPoseLimit",tmComPoseLimit);
  tolua_constant(tolua_S,"tmGuildDonateLimitTimes",tmGuildDonateLimitTimes);
  tolua_constant(tolua_S,"tmActorForgeItem",tmActorForgeItem);
  tolua_constant(tolua_S,"tmPKMod_1",tmPKMod_1);
  tolua_constant(tolua_S,"tmPKMod_2",tmPKMod_2);
  tolua_constant(tolua_S,"tmPKMod_3",tmPKMod_3);
  tolua_constant(tolua_S,"tmPKMod_4",tmPKMod_4);
  tolua_constant(tolua_S,"tmPKMod_5",tmPKMod_5);
  tolua_constant(tolua_S,"tmPKMod_6",tmPKMod_6);
  tolua_constant(tolua_S,"tmConsiFull",tmConsiFull);
  tolua_constant(tolua_S,"tmConsignLevelLimit",tmConsignLevelLimit);
  tolua_constant(tolua_S,"tmConsignHaveNotItem",tmConsignHaveNotItem);
  tolua_constant(tolua_S,"tmConsignItemNotCount",tmConsignItemNotCount);
  tolua_constant(tolua_S,"tmConsiItemBinded",tmConsiItemBinded);
  tolua_constant(tolua_S,"tmConsiItemCantSell",tmConsiItemCantSell);
  tolua_constant(tolua_S,"tmConsiItemPriveInvalid",tmConsiItemPriveInvalid);
  tolua_constant(tolua_S,"tmConsignItemNotItem",tmConsignItemNotItem);
  tolua_constant(tolua_S,"tmConsignBuyPriceError",tmConsignBuyPriceError);
  tolua_constant(tolua_S,"tmConsignCantGetNotYou",tmConsignCantGetNotYou);
  tolua_constant(tolua_S,"tmConsiBagFullCannotOp",tmConsiBagFullCannotOp);
  tolua_constant(tolua_S,"tmConsignItemOffShelf",tmConsignItemOffShelf);
  tolua_constant(tolua_S,"tmConsignItemActorBuy",tmConsignItemActorBuy);
  tolua_constant(tolua_S,"tmConsiNoYuanbaoToBuy",tmConsiNoYuanbaoToBuy);
  tolua_constant(tolua_S,"tmConsignBuyItemCountexceed",tmConsignBuyItemCountexceed);
  tolua_constant(tolua_S,"tmConsiBuySuccAddToBag",tmConsiBuySuccAddToBag);
  tolua_constant(tolua_S,"tmConsignAddIncomeMailTitle",tmConsignAddIncomeMailTitle);
  tolua_constant(tolua_S,"tmConsignAddIncomeMailContent",tmConsignAddIncomeMailContent);
  tolua_constant(tolua_S,"tmConsignSearchNothing",tmConsignSearchNothing);
  tolua_constant(tolua_S,"tmConsignCantBuyMySelf",tmConsignCantBuyMySelf);
  tolua_constant(tolua_S,"tmConsignItemOnSell",tmConsignItemOnSell);
  tolua_constant(tolua_S,"tmNoSafeAreaNoGet",tmNoSafeAreaNoGet);
  tolua_constant(tolua_S,"tmMailForceIsFull",tmMailForceIsFull);
  tolua_constant(tolua_S,"tmMailError",tmMailError);
  tolua_constant(tolua_S,"tmDelMailSuccess",tmDelMailSuccess);
  tolua_constant(tolua_S,"tmNoSafeAreaGetMail",tmNoSafeAreaGetMail);
  tolua_constant(tolua_S,"tmMailHasItem",tmMailHasItem);
  tolua_constant(tolua_S,"tmMailGetItemSuccess",tmMailGetItemSuccess);
  tolua_constant(tolua_S,"tmNoMoreBindCoin",tmNoMoreBindCoin);
  tolua_constant(tolua_S,"tmNomoreBindYubao",tmNomoreBindYubao);
  tolua_constant(tolua_S,"tmYouAreDealingNow",tmYouAreDealingNow);
  tolua_constant(tolua_S,"tmDealTargetNotExists",tmDealTargetNotExists);
  tolua_constant(tolua_S,"tmTargetIsDealing",tmTargetIsDealing);
  tolua_constant(tolua_S,"tmAlreadyInvaiteDeal",tmAlreadyInvaiteDeal);
  tolua_constant(tolua_S,"tmTargetDoNotDealWithYou",tmTargetDoNotDealWithYou);
  tolua_constant(tolua_S,"tmDealRequesterHasLeaved",tmDealRequesterHasLeaved);
  tolua_constant(tolua_S,"tmDealBlankWasFull",tmDealBlankWasFull);
  tolua_constant(tolua_S,"tmYouMustLockDealFirst",tmYouMustLockDealFirst);
  tolua_constant(tolua_S,"tmDealCanceledOfMyBagWasFull",tmDealCanceledOfMyBagWasFull);
  tolua_constant(tolua_S,"tmDealcanceldOfTargetBagWasFull",tmDealcanceldOfTargetBagWasFull);
  tolua_constant(tolua_S,"tmDealDataValidateFailure",tmDealDataValidateFailure);
  tolua_constant(tolua_S,"tmDealTargetConfimed",tmDealTargetConfimed);
  tolua_constant(tolua_S,"tmTargetHasLockedDeal",tmTargetHasLockedDeal);
  tolua_constant(tolua_S,"tmYouMayClickDealBtnNow",tmYouMayClickDealBtnNow);
  tolua_constant(tolua_S,"tmWaitTargetLockDeal",tmWaitTargetLockDeal);
  tolua_constant(tolua_S,"tmItemNoDeal",tmItemNoDeal);
  tolua_constant(tolua_S,"tmDealTargetTooFar",tmDealTargetTooFar);
  tolua_constant(tolua_S,"tmDealHasLocked",tmDealHasLocked);
  tolua_constant(tolua_S,"tmTargetMoneyIsFull",tmTargetMoneyIsFull);
  tolua_constant(tolua_S,"tmSelfMoneryIsFull",tmSelfMoneryIsFull);
  tolua_constant(tolua_S,"tmAreaCannotTrade",tmAreaCannotTrade);
  tolua_constant(tolua_S,"tmDealTargetLevelLimit",tmDealTargetLevelLimit);
  tolua_constant(tolua_S,"tmDealApplyCdLimit",tmDealApplyCdLimit);
  tolua_constant(tolua_S,"tmDealSelfLevelLimit",tmDealSelfLevelLimit);
  tolua_constant(tolua_S,"tmGuildDonateNotEnough",tmGuildDonateNotEnough);
  tolua_constant(tolua_S,"tmMailFullCantAdd",tmMailFullCantAdd);
  tolua_constant(tolua_S,"tmMailItemGetReady",tmMailItemGetReady);
  tolua_constant(tolua_S,"tmFlyShoesError",tmFlyShoesError);
  tolua_constant(tolua_S,"tmLevelExceednoenter",tmLevelExceednoenter);
  tolua_constant(tolua_S,"tmLevelLowernoenter",tmLevelLowernoenter);
  tolua_constant(tolua_S,"tmMailNOItem",tmMailNOItem);
  tolua_constant(tolua_S,"tmTagetDistanceTooFar",tmTagetDistanceTooFar);
  tolua_constant(tolua_S,"tmDealNotAtSeafArea",tmDealNotAtSeafArea);
  tolua_constant(tolua_S,"tmItemIsQuestItem",tmItemIsQuestItem);
  tolua_constant(tolua_S,"tmDealCancel",tmDealCancel);
  tolua_constant(tolua_S,"tmDealApplyTooMuch",tmDealApplyTooMuch);
  tolua_constant(tolua_S,"tmDealComplete",tmDealComplete);
  tolua_constant(tolua_S,"tmLogDealWith",tmLogDealWith);
  tolua_constant(tolua_S,"tmDealNumTooLarge",tmDealNumTooLarge);
  tolua_constant(tolua_S,"tmMeridiansMaxLv",tmMeridiansMaxLv);
  tolua_constant(tolua_S,"tmItemRegionCanNotUseItem",tmItemRegionCanNotUseItem);
  tolua_constant(tolua_S,"tmDealItemExist",tmDealItemExist);
  tolua_constant(tolua_S,"tmQuotaNoEnough",tmQuotaNoEnough);
  tolua_constant(tolua_S,"tmYbTaxRateGet",tmYbTaxRateGet);
  tolua_constant(tolua_S,"tmCoinTaxRateGet",tmCoinTaxRateGet);
  tolua_constant(tolua_S,"tmGuildRequireLvLimit",tmGuildRequireLvLimit);
  tolua_constant(tolua_S,"tmYbLimitNoImpeach",tmYbLimitNoImpeach);
  tolua_constant(tolua_S,"tmImpeachOfficeError",tmImpeachOfficeError);
  tolua_constant(tolua_S,"tmItemIsSellOrTimeOut",tmItemIsSellOrTimeOut);
  tolua_constant(tolua_S,"tmBlessAddValue",tmBlessAddValue);
  tolua_constant(tolua_S,"tmServerConsiFull",tmServerConsiFull);
  tolua_constant(tolua_S,"tmTriggerExpLmt_1",tmTriggerExpLmt_1);
  tolua_constant(tolua_S,"tmTriggerExpLmt_2",tmTriggerExpLmt_2);
  tolua_constant(tolua_S,"tmTriggerExpLmt_3",tmTriggerExpLmt_3);
  tolua_constant(tolua_S,"tmGetExpMulti",tmGetExpMulti);
  tolua_constant(tolua_S,"tmBlessNoAddValue",tmBlessNoAddValue);
  tolua_constant(tolua_S,"______palceholder",______palceholder);
  tolua_constant(tolua_S,"tmCircleSoul",tmCircleSoul);
  tolua_constant(tolua_S,"tmBroatNum",tmBroatNum);
  tolua_constant(tolua_S,"tmFlyShoeNum",tmFlyShoeNum);
  tolua_constant(tolua_S,"tmGuildDonate",tmGuildDonate);
  tolua_constant(tolua_S,"tmNotInSafeArea",tmNotInSafeArea);
  tolua_constant(tolua_S,"tmMultiExpExhaust",tmMultiExpExhaust);
  tolua_constant(tolua_S,"tmAddExpGeneral",tmAddExpGeneral);
  tolua_constant(tolua_S,"tmAddExpBasic",tmAddExpBasic);
  tolua_constant(tolua_S,"tmAchieveLimitCondition",tmAchieveLimitCondition);
  tolua_constant(tolua_S,"tmUseItemAddExpGeneral",tmUseItemAddExpGeneral);
  tolua_constant(tolua_S,"tmAchieveAwardIsGet",tmAchieveAwardIsGet);
  tolua_constant(tolua_S,"tmMedalTouchTopLevel",tmMedalTouchTopLevel);
  tolua_constant(tolua_S,"tmMedalLvUpFail",tmMedalLvUpFail);
  tolua_constant(tolua_S,"tmMedalLvUpSuccess",tmMedalLvUpSuccess);
  tolua_constant(tolua_S,"tmdoubleExpFull",tmdoubleExpFull);
  tolua_constant(tolua_S,"tmCircleToMaxLv",tmCircleToMaxLv);
  tolua_constant(tolua_S,"tmBlessSubValue",tmBlessSubValue);
  tolua_constant(tolua_S,"tmAppraisalNoItem",tmAppraisalNoItem);
  tolua_constant(tolua_S,"tmAppraisalNoTimes",tmAppraisalNoTimes);
  tolua_constant(tolua_S,"tmAppraisalMaxLevel",tmAppraisalMaxLevel);
  tolua_constant(tolua_S,"tmNoPrestigeNum",tmNoPrestigeNum);
  tolua_constant(tolua_S,"tmNoActivityValue",tmNoActivityValue);
  tolua_constant(tolua_S,"tmMoreCoin",tmMoreCoin);
  tolua_constant(tolua_S,"tmNoTimes",tmNoTimes);
  tolua_constant(tolua_S,"tmUnreachOpenServer",tmUnreachOpenServer);
  tolua_constant(tolua_S,"tmMapLimitTeleport",tmMapLimitTeleport);
  tolua_constant(tolua_S,"tmActorOffLine",tmActorOffLine);
  tolua_constant(tolua_S,"tmBindYuanbaoFull",tmBindYuanbaoFull);
  tolua_constant(tolua_S,"tmYuanbaoFull",tmYuanbaoFull);
  tolua_constant(tolua_S,"tmBindCoinFull",tmBindCoinFull);
  tolua_constant(tolua_S,"tmCoinFull",tmCoinFull);
  tolua_constant(tolua_S,"tmNoOpen",tmNoOpen);
  tolua_constant(tolua_S,"tmThisChanalForbit",tmThisChanalForbit);
  tolua_constant(tolua_S,"tmGetSpeedAwardSucess",tmGetSpeedAwardSucess);
  tolua_constant(tolua_S,"tmSbkCityName",tmSbkCityName);
  tolua_constant(tolua_S,"tmAddExpbyPaoDian",tmAddExpbyPaoDian);
  tolua_constant(tolua_S,"tmKillMonsterNotEnouth",tmKillMonsterNotEnouth);
  tolua_constant(tolua_S,"tmGetChuangGuanGiftSucc",tmGetChuangGuanGiftSucc);
  tolua_constant(tolua_S,"tmGetChuangGuanGiftYet",tmGetChuangGuanGiftYet);
  tolua_constant(tolua_S,"tmGetSpeedAwardYet",tmGetSpeedAwardYet);
  tolua_constant(tolua_S,"tmGetDuoBaoGiftSucc",tmGetDuoBaoGiftSucc);
  tolua_constant(tolua_S,"tmGetDuoBaoGiftYet",tmGetDuoBaoGiftYet);
  tolua_constant(tolua_S,"tmActivityTimeUnReach",tmActivityTimeUnReach);
  tolua_constant(tolua_S,"tmActivityUnReachsongbaoTime",tmActivityUnReachsongbaoTime);
  tolua_constant(tolua_S,"tmSongBaoSuccess",tmSongBaoSuccess);
  tolua_constant(tolua_S,"tmSongBaoYet",tmSongBaoYet);
  tolua_constant(tolua_S,"tmkillMonsterEnoughYet",tmkillMonsterEnoughYet);
  tolua_constant(tolua_S,"tmNeedItemNotEnough",tmNeedItemNotEnough);
  tolua_constant(tolua_S,"tmNoInOpenTime",tmNoInOpenTime);
  tolua_constant(tolua_S,"tmChangeNameNotOpen",tmChangeNameNotOpen);
  tolua_constant(tolua_S,"tmNoChangeNameItem",tmNoChangeNameItem);
  tolua_constant(tolua_S,"tmChangeNameSuc",tmChangeNameSuc);
  tolua_constant(tolua_S,"tmNeInvalidName",tmNeInvalidName);
  tolua_constant(tolua_S,"tmNeNameinuse",tmNeNameinuse);
  tolua_constant(tolua_S,"tmTelePortLimitActivity",tmTelePortLimitActivity);
  tolua_constant(tolua_S,"tmTelePortTimeUnopen",tmTelePortTimeUnopen);
  tolua_constant(tolua_S,"tmBossDeath",tmBossDeath);
  tolua_constant(tolua_S,"tmBossGwSuccess",tmBossGwSuccess);
  tolua_constant(tolua_S,"tmMailGuild",tmMailGuild);
  tolua_constant(tolua_S,"tmAddGuidMail",tmAddGuidMail);
  tolua_constant(tolua_S,"tmDeathDropMail",tmDeathDropMail);
  tolua_constant(tolua_S,"tmDeathDropEqMail",tmDeathDropEqMail);
  tolua_constant(tolua_S,"tmPoint",tmPoint);
  tolua_constant(tolua_S,"tmEquipName1",tmEquipName1);
  tolua_constant(tolua_S,"tmEquipName2",tmEquipName2);
  tolua_constant(tolua_S,"tmEquipName3",tmEquipName3);
  tolua_constant(tolua_S,"tmEquipName4",tmEquipName4);
  tolua_constant(tolua_S,"tmEquipName5",tmEquipName5);
  tolua_constant(tolua_S,"tmEquipName6",tmEquipName6);
  tolua_constant(tolua_S,"tmEquipName7",tmEquipName7);
  tolua_constant(tolua_S,"tmEquipName8",tmEquipName8);
  tolua_constant(tolua_S,"tmEquipName9",tmEquipName9);
  tolua_constant(tolua_S,"tmEquipName10",tmEquipName10);
  tolua_constant(tolua_S,"tmEquipName11",tmEquipName11);
  tolua_constant(tolua_S,"tmEquipName12",tmEquipName12);
  tolua_constant(tolua_S,"tmEquipName13",tmEquipName13);
  tolua_constant(tolua_S,"tmEquipName14",tmEquipName14);
  tolua_constant(tolua_S,"tmDeathDropMailTitle",tmDeathDropMailTitle);
  tolua_constant(tolua_S,"tmDefNoBagNum",tmDefNoBagNum);
  tolua_constant(tolua_S,"tmEquipNoBagNum",tmEquipNoBagNum);
  tolua_constant(tolua_S,"tmRecoverNoBagNum",tmRecoverNoBagNum);
  tolua_constant(tolua_S,"tmForgeNoBagNum",tmForgeNoBagNum);
  tolua_constant(tolua_S,"tmTenForgeNoBagNum",tmTenForgeNoBagNum);
  tolua_constant(tolua_S,"tmGiftNoBagNum",tmGiftNoBagNum);
  tolua_constant(tolua_S,"tmActivateSuit",tmActivateSuit);
  tolua_constant(tolua_S,"tmInvalidSuit",tmInvalidSuit);
  tolua_constant(tolua_S,"______palceholder1",______palceholder1);
  tolua_constant(tolua_S,"______palceholder2",______palceholder2);
  tolua_constant(tolua_S,"tmGuaJiJuanZhouOnUse",tmGuaJiJuanZhouOnUse);
  tolua_constant(tolua_S,"tmGuaJiJuanZhouUseSucc",tmGuaJiJuanZhouUseSucc);
  tolua_constant(tolua_S,"tmSZBossDeath",tmSZBossDeath);
  tolua_constant(tolua_S,"tmItemLimitSZBossTime",tmItemLimitSZBossTime);
  tolua_constant(tolua_S,"tmGetNewTitleNotice",tmGetNewTitleNotice);
  tolua_constant(tolua_S,"tmSelfGetNewTitleNotice",tmSelfGetNewTitleNotice);
  tolua_constant(tolua_S,"tmFCMOpened",tmFCMOpened);
  tolua_constant(tolua_S,"tmFcmHalfExp",tmFcmHalfExp);
  tolua_constant(tolua_S,"tmFcmZeroExp",tmFcmZeroExp);
  tolua_constant(tolua_S,"tmFcmPerHour",tmFcmPerHour);
  tolua_constant(tolua_S,"tmWarPointNoEnough",tmWarPointNoEnough);
  tolua_constant(tolua_S,"tmSelfItemNotEnough",tmSelfItemNotEnough);
  tolua_constant(tolua_S,"tmBanChat",tmBanChat);
  tolua_constant(tolua_S,"tmItemSplitBagFail",tmItemSplitBagFail);
  tolua_constant(tolua_S,"tmCannotCatchPetMore",tmCannotCatchPetMore);
  tolua_constant(tolua_S,"tmDaYaoYueKaGongGao",tmDaYaoYueKaGongGao);
  tolua_constant(tolua_S,"tmYongHengGongGao",tmYongHengGongGao);
  tolua_constant(tolua_S,"tmFollwerMaxCount",tmFollwerMaxCount);
  tolua_constant(tolua_S,"tmBlackMaxCount",tmBlackMaxCount);
  tolua_constant(tolua_S,"tmRefiningReplace",tmRefiningReplace);
  tolua_constant(tolua_S,"tmComposeBagLimit",tmComposeBagLimit);
  tolua_constant(tolua_S,"tmChallengBossSucess",tmChallengBossSucess);
  tolua_constant(tolua_S,"tmFXTransportYuanBaoNotEnough",tmFXTransportYuanBaoNotEnough);
  tolua_constant(tolua_S,"tmDB1",tmDB1);
  tolua_constant(tolua_S,"tmDB2",tmDB2);
  tolua_constant(tolua_S,"tmBaiKaGongGao",tmBaiKaGongGao);
  tolua_constant(tolua_S,"tmLvKaGongGao",tmLvKaGongGao);
  tolua_constant(tolua_S,"tmLanKaGongGao",tmLanKaGongGao);
  tolua_constant(tolua_S,"tmZiKaGongGao",tmZiKaGongGao);
  tolua_constant(tolua_S,"tmChengKaGongGao",tmChengKaGongGao);
  tolua_constant(tolua_S,"tmEquipName15",tmEquipName15);
  tolua_constant(tolua_S,"tmDeathMailTitle",tmDeathMailTitle);
  tolua_constant(tolua_S,"tmDeathMailContent",tmDeathMailContent);
  tolua_constant(tolua_S,"tmEquipName16",tmEquipName16);
  tolua_constant(tolua_S,"tmInActivityLimitOperate",tmInActivityLimitOperate);
  tolua_constant(tolua_S,"tmUpStarFailDownStar",tmUpStarFailDownStar);
  tolua_constant(tolua_S,"tmItemUpMaxStar1",tmItemUpMaxStar1);
  tolua_constant(tolua_S,"tmItemUpMaxStar2",tmItemUpMaxStar2);
  tolua_constant(tolua_S,"tmUpCircleTips",tmUpCircleTips);
  tolua_constant(tolua_S,"tmGhost",tmGhost);
  tolua_constant(tolua_S,"tmNoBindCoin2City",tmNoBindCoin2City);
  tolua_constant(tolua_S,"______palceholder3",______palceholder3);
  tolua_constant(tolua_S,"tmExclusiveTips",tmExclusiveTips);
  tolua_constant(tolua_S,"tmRankTips",tmRankTips);
  tolua_constant(tolua_S,"tmRankPowerTips",tmRankPowerTips);
  tolua_constant(tolua_S,"tmRankNum1",tmRankNum1);
  tolua_constant(tolua_S,"tmRankNum2",tmRankNum2);
  tolua_constant(tolua_S,"tmRankNum3",tmRankNum3);
  tolua_constant(tolua_S,"tmActorJob1",tmActorJob1);
  tolua_constant(tolua_S,"tmActorJob2",tmActorJob2);
  tolua_constant(tolua_S,"tmActorJob3",tmActorJob3);
  tolua_constant(tolua_S,"tmActorPower1",tmActorPower1);
  tolua_constant(tolua_S,"tmActorPower2",tmActorPower2);
  tolua_constant(tolua_S,"tmActorPower3",tmActorPower3);
  tolua_constant(tolua_S,"tmSbkTips",tmSbkTips);
  tolua_constant(tolua_S,"tmGhostTips",tmGhostTips);
  tolua_constant(tolua_S,"tmFrenzyReOpen",tmFrenzyReOpen);
  tolua_constant(tolua_S,"tmFrenzyOpenSucc",tmFrenzyOpenSucc);
  tolua_constant(tolua_S,"tmEquipQuality0",tmEquipQuality0);
  tolua_constant(tolua_S,"tmEquipQuality1",tmEquipQuality1);
  tolua_constant(tolua_S,"tmEquipQuality2",tmEquipQuality2);
  tolua_constant(tolua_S,"tmEquipQuality3",tmEquipQuality3);
  tolua_constant(tolua_S,"tmEquipQuality4",tmEquipQuality4);
  tolua_constant(tolua_S,"tmEquipQuality5",tmEquipQuality5);
  tolua_constant(tolua_S,"tmInDonateRank",tmInDonateRank);
  tolua_constant(tolua_S,"tmDonateRankNoDonate",tmDonateRankNoDonate);
  tolua_constant(tolua_S,"tmDonateRanksuccess",tmDonateRanksuccess);
  tolua_constant(tolua_S,"tmkuangbaolimir",tmkuangbaolimir);
  tolua_constant(tolua_S,"tmghostlimit",tmghostlimit);
  tolua_constant(tolua_S,"tmTeamCallNotEnough",tmTeamCallNotEnough);
  tolua_constant(tolua_S,"tmGuildCallNotEnough",tmGuildCallNotEnough);
  tolua_constant(tolua_S,"tmCallSuccWait",tmCallSuccWait);
  tolua_constant(tolua_S,"tmGuildCallLimit",tmGuildCallLimit);
  tolua_constant(tolua_S,"tmSceneCallLimit",tmSceneCallLimit);
  tolua_constant(tolua_S,"tmCallNoTeam",tmCallNoTeam);
  tolua_constant(tolua_S,"tmLootNotOwner",tmLootNotOwner);
  tolua_constant(tolua_S,"tmLootParamError",tmLootParamError);
  tolua_constant(tolua_S,"tmLootExpired",tmLootExpired);
  tolua_constant(tolua_S,"tmLootPosError",tmLootPosError);
  tolua_constant(tolua_S,"tmLootCanPickUpTime",tmLootCanPickUpTime);
  tolua_constant(tolua_S,"tmLootPicked",tmLootPicked);
  tolua_constant(tolua_S,"tmFriendnotaddSelf",tmFriendnotaddSelf);
  tolua_constant(tolua_S,"tmChatnotaddSelf",tmChatnotaddSelf);
  tolua_constant(tolua_S,"tmUpgreadOffice",tmUpgreadOffice);
  tolua_constant(tolua_S,"tmMaxOffice",tmMaxOffice);
  tolua_constant(tolua_S,"tmOfficeBroad",tmOfficeBroad);
  tolua_constant(tolua_S,"tmLimitConsignment",tmLimitConsignment);
  tolua_constant(tolua_S,"tmLimitDeal",tmLimitDeal);
  tolua_constant(tolua_S,"tmComPoseOfficeLimit",tmComPoseOfficeLimit);
  tolua_constant(tolua_S,"tmComPoseVipLimit",tmComPoseVipLimit);
  tolua_constant(tolua_S,"______palceholder4",______palceholder4);
  tolua_constant(tolua_S,"______palceholder5",______palceholder5);
  tolua_constant(tolua_S,"______palceholder6",______palceholder6);
  tolua_constant(tolua_S,"______palceholder7",______palceholder7);
  tolua_constant(tolua_S,"tmDescribeStr1",tmDescribeStr1);
  tolua_constant(tolua_S,"tmDescribeStr2",tmDescribeStr2);
  tolua_constant(tolua_S,"tmDropMonsterBroadItem",tmDropMonsterBroadItem);
  tolua_constant(tolua_S,"tmItemCanNotPutDepot",tmItemCanNotPutDepot);
  tolua_constant(tolua_S,"tmdepotBagIsFull",tmdepotBagIsFull);
  tolua_constant(tolua_S,"tmChgVocInCD",tmChgVocInCD);
  tolua_constant(tolua_S,"tmdepotLvLimit",tmdepotLvLimit);
  tolua_constant(tolua_S,"tmdepotCardLvLimit",tmdepotCardLvLimit);
  tolua_constant(tolua_S,"tmCircleLvLimit",tmCircleLvLimit);
  tolua_constant(tolua_S,"tmBag2Deport",tmBag2Deport);
  tolua_constant(tolua_S,"tmDeport2Bag",tmDeport2Bag);
  tolua_constant(tolua_S,"tmConsigmentCanGet",tmConsigmentCanGet);
  tolua_constant(tolua_S,"tmActivity10017Limit",tmActivity10017Limit);
  tolua_constant(tolua_S,"tmActivity10017LimitTimes",tmActivity10017LimitTimes);
  tolua_constant(tolua_S,"tmActivity10017LimitBags",tmActivity10017LimitBags);
  tolua_constant(tolua_S,"tmActivity10017OperateSuccess",tmActivity10017OperateSuccess);
  tolua_constant(tolua_S,"tmItemQuality0",tmItemQuality0);
  tolua_constant(tolua_S,"tmItemQuality1",tmItemQuality1);
  tolua_constant(tolua_S,"tmItemQuality2",tmItemQuality2);
  tolua_constant(tolua_S,"tmItemQuality3",tmItemQuality3);
  tolua_constant(tolua_S,"tmItemQuality4",tmItemQuality4);
  tolua_constant(tolua_S,"tmItemQuality5",tmItemQuality5);
  tolua_constant(tolua_S,"______palceholder8",______palceholder8);
  tolua_constant(tolua_S,"______palceholder9",______palceholder9);
  tolua_constant(tolua_S,"______palceholder10",______palceholder10);
  tolua_constant(tolua_S,"______palceholder11",______palceholder11);
  tolua_constant(tolua_S,"______palceholder12",______palceholder12);
  tolua_constant(tolua_S,"tmOpenDayLimitCircle",tmOpenDayLimitCircle);
  tolua_constant(tolua_S,"tmBaiKaLiaoTianXiTongGongGao",tmBaiKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmLvKaLiaoTianXiTongGongGao",tmLvKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmLanKaLiaoTianXiTongGongGao",tmLanKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmZiKaLiaoTianXiTongGongGao",tmZiKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmChengKaLiaoTianXiTongGongGao",tmChengKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmRankNum4",tmRankNum4);
  tolua_constant(tolua_S,"tmRankNum5",tmRankNum5);
  tolua_constant(tolua_S,"tmRankNum6",tmRankNum6);
  tolua_constant(tolua_S,"tmRankNum7",tmRankNum7);
  tolua_constant(tolua_S,"tmRankNum8",tmRankNum8);
  tolua_constant(tolua_S,"tmRankNum9",tmRankNum9);
  tolua_constant(tolua_S,"tmRankNum10",tmRankNum10);
  tolua_constant(tolua_S,"tmChatVipLimit",tmChatVipLimit);
  tolua_constant(tolua_S,"tmChatVipLeftTimes",tmChatVipLeftTimes);
  tolua_constant(tolua_S,"tmUseItemOpenDaylimit",tmUseItemOpenDaylimit);
  tolua_constant(tolua_S,"______palceholder13",______palceholder13);
  tolua_constant(tolua_S,"______palceholder14",______palceholder14);
  tolua_constant(tolua_S,"______palceholder15",______palceholder15);
  tolua_constant(tolua_S,"tmZLMoneyNoEnough",tmZLMoneyNoEnough);
  tolua_constant(tolua_S,"tmUseRecoverItem",tmUseRecoverItem);
  tolua_constant(tolua_S,"______palceholder16",______palceholder16);
  tolua_constant(tolua_S,"tmNeedLv",tmNeedLv);
  tolua_constant(tolua_S,"tmAtv14Tips",tmAtv14Tips);
  tolua_constant(tolua_S,"tmNull",tmNull);
  tolua_constant(tolua_S,"tmChengXinGongGao",tmChengXinGongGao);
  tolua_constant(tolua_S,"tmChengXinLiaoTianXiTongGongGao",tmChengXinLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmKuaFuBossPkWin",tmKuaFuBossPkWin);
  tolua_constant(tolua_S,"tmKuaFuBossPkLost",tmKuaFuBossPkLost);
  tolua_constant(tolua_S,"tmKuaFuDimensionalKeyNotEnough",tmKuaFuDimensionalKeyNotEnough);
  tolua_constant(tolua_S,"tmKilledByActorCs",tmKilledByActorCs);
  tolua_constant(tolua_S,"tmKuaFuBossTipsCs",tmKuaFuBossTipsCs);
  tolua_constant(tolua_S,"tmActorLoginKuafu",tmActorLoginKuafu);
  tolua_constant(tolua_S,"tmInternalWorkLevelLimit",tmInternalWorkLevelLimit);
  tolua_constant(tolua_S,"tmInternalWorkLevelNotEnough",tmInternalWorkLevelNotEnough);
  tolua_constant(tolua_S,"tmLootPetMaturity",tmLootPetMaturity);
  tolua_constant(tolua_S,"tmGuildFunctionNotOpen",tmGuildFunctionNotOpen);
  tolua_constant(tolua_S,"tmUseItemUselimit",tmUseItemUselimit);
  tolua_constant(tolua_S,"tmChengYueGongGao",tmChengYueGongGao);
  tolua_constant(tolua_S,"tmChengYueLiaoTianXiTongGongGao",tmChengYueLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmtmFrenzyCardLvLimit",tmtmFrenzyCardLvLimit);
  tolua_constant(tolua_S,"tmGuildLevelLimit",tmGuildLevelLimit);
  tolua_module(tolua_S,"DataPack",0);
  tolua_beginmodule(tolua_S,"DataPack");
   tolua_function(tolua_S,"allocPacket",tolua_server_DataPack_allocPacket00);
   tolua_function(tolua_S,"flush",tolua_server_DataPack_flush00);
   tolua_function(tolua_S,"flushCs",tolua_server_DataPack_flushCs00);
   tolua_function(tolua_S,"writeString",tolua_server_DataPack_writeString00);
   tolua_function(tolua_S,"readString",tolua_server_DataPack_readString00);
   tolua_function(tolua_S,"readByte",tolua_server_DataPack_readByte00);
   tolua_function(tolua_S,"readChar",tolua_server_DataPack_readChar00);
   tolua_function(tolua_S,"readWord",tolua_server_DataPack_readWord00);
   tolua_function(tolua_S,"readShort",tolua_server_DataPack_readShort00);
   tolua_function(tolua_S,"readInt",tolua_server_DataPack_readInt00);
   tolua_function(tolua_S,"readUInt",tolua_server_DataPack_readUInt00);
   tolua_function(tolua_S,"readUint64",tolua_server_DataPack_readUint6400);
   tolua_function(tolua_S,"readInt64",tolua_server_DataPack_readInt6400);
   tolua_function(tolua_S,"readData",tolua_server_DataPack_readData00);
   tolua_function(tolua_S,"writeByte",tolua_server_DataPack_writeByte00);
   tolua_function(tolua_S,"writeChar",tolua_server_DataPack_writeChar00);
   tolua_function(tolua_S,"writeWord",tolua_server_DataPack_writeWord00);
   tolua_function(tolua_S,"writeShort",tolua_server_DataPack_writeShort00);
   tolua_function(tolua_S,"writeInt",tolua_server_DataPack_writeInt00);
   tolua_function(tolua_S,"writeUInt",tolua_server_DataPack_writeUInt00);
   tolua_function(tolua_S,"writeUint64",tolua_server_DataPack_writeUint6400);
   tolua_function(tolua_S,"writeInt64",tolua_server_DataPack_writeInt6400);
   tolua_function(tolua_S,"writeData",tolua_server_DataPack_writeData00);
   tolua_function(tolua_S,"allocPacketEx",tolua_server_DataPack_allocPacketEx00);
   tolua_function(tolua_S,"freePacketEx",tolua_server_DataPack_freePacketEx00);
   tolua_function(tolua_S,"broadcastScene",tolua_server_DataPack_broadcastScene00);
   tolua_function(tolua_S,"broadcasetWorld",tolua_server_DataPack_broadcasetWorld00);
   tolua_function(tolua_S,"broadGuild",tolua_server_DataPack_broadGuild00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"TeamFun",0);
  tolua_beginmodule(tolua_S,"TeamFun");
   tolua_function(tolua_S,"getTeamCaptain",tolua_server_TeamFun_getTeamCaptain00);
   tolua_function(tolua_S,"getTeamCaptain",tolua_server_TeamFun_getTeamCaptain01);
   tolua_function(tolua_S,"getChallenge",tolua_server_TeamFun_getChallenge00);
   tolua_function(tolua_S,"setChallenge",tolua_server_TeamFun_setChallenge00);
   tolua_function(tolua_S,"setTeamFubenId",tolua_server_TeamFun_setTeamFubenId00);
   tolua_function(tolua_S,"getDyanmicVar",tolua_server_TeamFun_getDyanmicVar00);
   tolua_function(tolua_S,"setTeamTimer",tolua_server_TeamFun_setTeamTimer00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Ranking",0);
  tolua_beginmodule(tolua_S,"Ranking");
   tolua_function(tolua_S,"addRef",tolua_server_Ranking_addRef00);
   tolua_function(tolua_S,"release",tolua_server_Ranking_release00);
   tolua_function(tolua_S,"getRef",tolua_server_Ranking_getRef00);
   tolua_function(tolua_S,"getRanking",tolua_server_Ranking_getRanking00);
   tolua_function(tolua_S,"add",tolua_server_Ranking_add00);
   tolua_function(tolua_S,"load",tolua_server_Ranking_load00);
   tolua_function(tolua_S,"save",tolua_server_Ranking_save00);
   tolua_function(tolua_S,"addColumn",tolua_server_Ranking_addColumn00);
   tolua_function(tolua_S,"setColumnTitle",tolua_server_Ranking_setColumnTitle00);
   tolua_function(tolua_S,"addItem",tolua_server_Ranking_addItem00);
   tolua_function(tolua_S,"getItemIndexFromId",tolua_server_Ranking_getItemIndexFromId00);
   tolua_function(tolua_S,"getItemPtrFromId",tolua_server_Ranking_getItemPtrFromId00);
   tolua_function(tolua_S,"updateItem",tolua_server_Ranking_updateItem00);
   tolua_function(tolua_S,"setItem",tolua_server_Ranking_setItem00);
   tolua_function(tolua_S,"setColumnDisplay",tolua_server_Ranking_setColumnDisplay00);
   tolua_function(tolua_S,"setSub",tolua_server_Ranking_setSub00);
   tolua_function(tolua_S,"removeRanking",tolua_server_Ranking_removeRanking00);
   tolua_function(tolua_S,"getRankItemCount",tolua_server_Ranking_getRankItemCount00);
   tolua_function(tolua_S,"getRankItemCountByLimit",tolua_server_Ranking_getRankItemCountByLimit00);
   tolua_function(tolua_S,"getPoint",tolua_server_Ranking_getPoint00);
   tolua_function(tolua_S,"getId",tolua_server_Ranking_getId00);
   tolua_function(tolua_S,"getIndexFromPtr",tolua_server_Ranking_getIndexFromPtr00);
   tolua_function(tolua_S,"getSub",tolua_server_Ranking_getSub00);
   tolua_function(tolua_S,"clearRanking",tolua_server_Ranking_clearRanking00);
   tolua_function(tolua_S,"getItemFromIndex",tolua_server_Ranking_getItemFromIndex00);
   tolua_function(tolua_S,"setDisplayName",tolua_server_Ranking_setDisplayName00);
   tolua_function(tolua_S,"setIdTitle",tolua_server_Ranking_setIdTitle00);
   tolua_function(tolua_S,"setPointTitle",tolua_server_Ranking_setPointTitle00);
   tolua_function(tolua_S,"removeId",tolua_server_Ranking_removeId00);
   tolua_function(tolua_S,"UpdateCsRank",tolua_server_Ranking_UpdateCsRank00);
   tolua_function(tolua_S,"setRankPropConfig",tolua_server_Ranking_setRankPropConfig00);
   tolua_function(tolua_S,"GetRankColumnCount",tolua_server_Ranking_GetRankColumnCount00);
   tolua_function(tolua_S,"forceSave",tolua_server_Ranking_forceSave00);
   tolua_function(tolua_S,"CheckActorIdInRank",tolua_server_Ranking_CheckActorIdInRank00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CBaseScriptExportObject","CBaseScriptExportObject","",NULL);
  tolua_beginmodule(tolua_S,"CBaseScriptExportObject");
   tolua_function(tolua_S,"addRef",tolua_server_CBaseScriptExportObject_addRef00);
   tolua_function(tolua_S,"release",tolua_server_CBaseScriptExportObject_release00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CBoxDrop","CBoxDrop","CBaseScriptExportObject",NULL);
  tolua_beginmodule(tolua_S,"CBoxDrop");
   tolua_function(tolua_S,"load",tolua_server_CBoxDrop_load00);
   tolua_function(tolua_S,"drop",tolua_server_CBoxDrop_drop00);
   tolua_function(tolua_S,"proabilityDrop",tolua_server_CBoxDrop_proabilityDrop00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CBoxDropMgr","CBoxDropMgr","",NULL);
  tolua_beginmodule(tolua_S,"CBoxDropMgr");
   tolua_function(tolua_S,"getSingleton",tolua_server_CBoxDropMgr_getSingleton00);
   tolua_function(tolua_S,"createBoxDrop",tolua_server_CBoxDropMgr_createBoxDrop00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"DropItemInfo","DropItemInfo","",tolua_collect_DropItemInfo);
  #else
  tolua_cclass(tolua_S,"DropItemInfo","DropItemInfo","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"DropItemInfo");
   tolua_variable(tolua_S,"btAwardType",tolua_get_DropItemInfo_unsigned_btAwardType,tolua_set_DropItemInfo_unsigned_btAwardType);
   tolua_variable(tolua_S,"wItemId",tolua_get_DropItemInfo_unsigned_wItemId,tolua_set_DropItemInfo_unsigned_wItemId);
   tolua_variable(tolua_S,"btQuality",tolua_get_DropItemInfo_unsigned_btQuality,tolua_set_DropItemInfo_unsigned_btQuality);
   tolua_variable(tolua_S,"btStrong",tolua_get_DropItemInfo_unsigned_btStrong,tolua_set_DropItemInfo_unsigned_btStrong);
   tolua_variable(tolua_S,"btBind",tolua_get_DropItemInfo_unsigned_btBind,tolua_set_DropItemInfo_unsigned_btBind);
   tolua_variable(tolua_S,"btCount",tolua_get_DropItemInfo_btCount,tolua_set_DropItemInfo_btCount);
   tolua_variable(tolua_S,"btAuxParam",tolua_get_DropItemInfo_unsigned_btAuxParam,tolua_set_DropItemInfo_unsigned_btAuxParam);
   tolua_variable(tolua_S,"nTime",tolua_get_DropItemInfo_unsigned_nTime,tolua_set_DropItemInfo_unsigned_nTime);
   tolua_variable(tolua_S,"nQualityDataIndex",tolua_get_DropItemInfo_unsigned_nQualityDataIndex,tolua_set_DropItemInfo_unsigned_nQualityDataIndex);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"DropItemList","DropItemList","",tolua_collect_DropItemList);
  #else
  tolua_cclass(tolua_S,"DropItemList","DropItemList","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"DropItemList");
   tolua_variable(tolua_S,"moneyCount",tolua_get_DropItemList_unsigned_moneyCount,tolua_set_DropItemList_unsigned_moneyCount);
   tolua_variable(tolua_S,"itemCount",tolua_get_DropItemList_unsigned_itemCount,tolua_set_DropItemList_unsigned_itemCount);
   tolua_array(tolua_S,"itemList",tolua_get_server_DropItemList_itemList,tolua_set_server_DropItemList_itemList);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"ScoreRecorder",0);
  tolua_beginmodule(tolua_S,"ScoreRecorder");
   tolua_function(tolua_S,"create",tolua_server_ScoreRecorder_create00);
   tolua_function(tolua_S,"addRef",tolua_server_ScoreRecorder_addRef00);
   tolua_function(tolua_S,"release",tolua_server_ScoreRecorder_release00);
   tolua_function(tolua_S,"joinTeam",tolua_server_ScoreRecorder_joinTeam00);
   tolua_function(tolua_S,"joinGuild",tolua_server_ScoreRecorder_joinGuild00);
   tolua_function(tolua_S,"joinCamp",tolua_server_ScoreRecorder_joinCamp00);
   tolua_function(tolua_S,"joinFuBen",tolua_server_ScoreRecorder_joinFuBen00);
   tolua_function(tolua_S,"leave",tolua_server_ScoreRecorder_leave00);
   tolua_function(tolua_S,"stop",tolua_server_ScoreRecorder_stop00);
   tolua_function(tolua_S,"incScore",tolua_server_ScoreRecorder_incScore00);
   tolua_function(tolua_S,"setScore",tolua_server_ScoreRecorder_setScore00);
   tolua_function(tolua_S,"getScore",tolua_server_ScoreRecorder_getScore00);
   tolua_function(tolua_S,"itemExists",tolua_server_ScoreRecorder_itemExists00);
   tolua_function(tolua_S,"getScoreData",tolua_server_ScoreRecorder_getScoreData00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Guild",0);
  tolua_beginmodule(tolua_S,"Guild");
   tolua_function(tolua_S,"getGuildOnlineMemberList",tolua_server_Guild_getGuildOnlineMemberList00);
   tolua_function(tolua_S,"getGuildMemberIdList",tolua_server_Guild_getGuildMemberIdList00);
   tolua_function(tolua_S,"getGuildMemberBasicData",tolua_server_Guild_getGuildMemberBasicData00);
   tolua_function(tolua_S,"getGuildPtr",tolua_server_Guild_getGuildPtr00);
   tolua_function(tolua_S,"getGuildName",tolua_server_Guild_getGuildName00);
   tolua_function(tolua_S,"getGuildLeader",tolua_server_Guild_getGuildLeader00);
   tolua_function(tolua_S,"getGuildLeaderId",tolua_server_Guild_getGuildLeaderId00);
   tolua_function(tolua_S,"changeGuildFr",tolua_server_Guild_changeGuildFr00);
   tolua_function(tolua_S,"changeGuildCoin",tolua_server_Guild_changeGuildCoin00);
   tolua_function(tolua_S,"getGuildLeaderName",tolua_server_Guild_getGuildLeaderName00);
   tolua_function(tolua_S,"getGuildMemberNum",tolua_server_Guild_getGuildMemberNum00);
   tolua_function(tolua_S,"guildBroadCastMsg",tolua_server_Guild_guildBroadCastMsg00);
   tolua_function(tolua_S,"getCityOwnMasterId",tolua_server_Guild_getCityOwnMasterId00);
   tolua_function(tolua_S,"getThunderPower",tolua_server_Guild_getThunderPower00);
   tolua_function(tolua_S,"setThunderPower",tolua_server_Guild_setThunderPower00);
   tolua_function(tolua_S,"getFillThunderTimes",tolua_server_Guild_getFillThunderTimes00);
   tolua_function(tolua_S,"setFillThunderTimes",tolua_server_Guild_setFillThunderTimes00);
   tolua_function(tolua_S,"isGuildSiegeStart",tolua_server_Guild_isGuildSiegeStart00);
   tolua_function(tolua_S,"sendGuildSiegeCmdPanel",tolua_server_Guild_sendGuildSiegeCmdPanel00);
   tolua_function(tolua_S,"setGuildSiegeCommand",tolua_server_Guild_setGuildSiegeCommand00);
   tolua_function(tolua_S,"getGuildSiegeCommandTime",tolua_server_Guild_getGuildSiegeCommandTime00);
   tolua_function(tolua_S,"autoSignGuildSiege",tolua_server_Guild_autoSignGuildSiege00);
   tolua_function(tolua_S,"resetSignGuildsiege",tolua_server_Guild_resetSignGuildsiege00);
   tolua_function(tolua_S,"clearGuildSiegeCommand",tolua_server_Guild_clearGuildSiegeCommand00);
   tolua_function(tolua_S,"isGuildSiegeTodayOpen",tolua_server_Guild_isGuildSiegeTodayOpen00);
   tolua_function(tolua_S,"startGuildSiege",tolua_server_Guild_startGuildSiege00);
   tolua_function(tolua_S,"guildSiegeEnd",tolua_server_Guild_guildSiegeEnd00);
   tolua_function(tolua_S,"getCityPostionInfo",tolua_server_Guild_getCityPostionInfo00);
   tolua_function(tolua_S,"setCityOwnGuildId",tolua_server_Guild_setCityOwnGuildId00);
   tolua_function(tolua_S,"getPalaceOccoupyTime",tolua_server_Guild_getPalaceOccoupyTime00);
   tolua_function(tolua_S,"getCityOwnGuildId",tolua_server_Guild_getCityOwnGuildId00);
   tolua_function(tolua_S,"clearGuildSiegeData",tolua_server_Guild_clearGuildSiegeData00);
   tolua_function(tolua_S,"isLimitGuildCoin",tolua_server_Guild_isLimitGuildCoin00);
   tolua_function(tolua_S,"getCityPostionById",tolua_server_Guild_getCityPostionById00);
   tolua_function(tolua_S,"sendGuildMsg",tolua_server_Guild_sendGuildMsg00);
   tolua_function(tolua_S,"getUpgradeItemCount",tolua_server_Guild_getUpgradeItemCount00);
   tolua_function(tolua_S,"setUpgradeItemCount",tolua_server_Guild_setUpgradeItemCount00);
   tolua_function(tolua_S,"getGuildTreeData",tolua_server_Guild_getGuildTreeData00);
   tolua_function(tolua_S,"setGuildTreeData",tolua_server_Guild_setGuildTreeData00);
   tolua_function(tolua_S,"getGuildTreeFruitTime",tolua_server_Guild_getGuildTreeFruitTime00);
   tolua_function(tolua_S,"setGuildTreeFruitTime",tolua_server_Guild_setGuildTreeFruitTime00);
   tolua_function(tolua_S,"getGuildFruitData",tolua_server_Guild_getGuildFruitData00);
   tolua_function(tolua_S,"setGuildFruitData",tolua_server_Guild_setGuildFruitData00);
   tolua_function(tolua_S,"procGuildTreeToSapling",tolua_server_Guild_procGuildTreeToSapling00);
   tolua_function(tolua_S,"procGuildDailyData",tolua_server_Guild_procGuildDailyData00);
   tolua_function(tolua_S,"getGuildTaskData",tolua_server_Guild_getGuildTaskData00);
   tolua_function(tolua_S,"getDailyGuildCoinDonated",tolua_server_Guild_getDailyGuildCoinDonated00);
   tolua_function(tolua_S,"addDailyGuildCoinDonated",tolua_server_Guild_addDailyGuildCoinDonated00);
   tolua_function(tolua_S,"sendMemberList",tolua_server_Guild_sendMemberList00);
   tolua_function(tolua_S,"setSbkGuildId",tolua_server_Guild_setSbkGuildId00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"Pet",0);
  tolua_beginmodule(tolua_S,"Pet");
   tolua_function(tolua_S,"addPet",tolua_server_Pet_addPet00);
   tolua_function(tolua_S,"getPetCountByConfigId",tolua_server_Pet_getPetCountByConfigId00);
   tolua_function(tolua_S,"getPetName",tolua_server_Pet_getPetName00);
   tolua_function(tolua_S,"delPetById",tolua_server_Pet_delPetById00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"enDefaultEntitySystemID",enDefaultEntitySystemID);
  tolua_constant(tolua_S,"enMoveSystemID",enMoveSystemID);
  tolua_constant(tolua_S,"enPropertySystemID",enPropertySystemID);
  tolua_constant(tolua_S,"enObserverSystemID",enObserverSystemID);
  tolua_constant(tolua_S,"enBuffSystemID",enBuffSystemID);
  tolua_constant(tolua_S,"enSkillSystemID",enSkillSystemID);
  tolua_constant(tolua_S,"enQuestSystemID",enQuestSystemID);
  tolua_constant(tolua_S,"enEuipSystemID",enEuipSystemID);
  tolua_constant(tolua_S,"enBagSystemID",enBagSystemID);
  tolua_constant(tolua_S,"enChatSystemID",enChatSystemID);
  tolua_constant(tolua_S,"enGuildSystemID",enGuildSystemID);
  tolua_constant(tolua_S,"enStaticCountSystemID",enStaticCountSystemID);
  tolua_constant(tolua_S,"enStoreSystemID",enStoreSystemID);
  tolua_constant(tolua_S,"enDealSystemID",enDealSystemID);
  tolua_constant(tolua_S,"enActorVarSystemID",enActorVarSystemID);
  tolua_constant(tolua_S,"enLootSystemID",enLootSystemID);
  tolua_constant(tolua_S,"enTeamSystemID",enTeamSystemID);
  tolua_constant(tolua_S,"enGameSetsSystemID",enGameSetsSystemID);
  tolua_constant(tolua_S,"enTreasureSystem",enTreasureSystem);
  tolua_constant(tolua_S,"enBasicFunctionsSystemID",enBasicFunctionsSystemID);
  tolua_constant(tolua_S,"enFubenSystemID",enFubenSystemID);
  tolua_constant(tolua_S,"enInteractionID",enInteractionID);
  tolua_constant(tolua_S,"enMsgSystemID",enMsgSystemID);
  tolua_constant(tolua_S,"enDepotSystemID",enDepotSystemID);
  tolua_constant(tolua_S,"enPkSystemID",enPkSystemID);
  tolua_constant(tolua_S,"enActivityID",enActivityID);
  tolua_constant(tolua_S,"enMiscSystemID",enMiscSystemID);
  tolua_constant(tolua_S,"enConsignmentSystemID",enConsignmentSystemID);
  tolua_constant(tolua_S,"enAchieveSystemID",enAchieveSystemID);
  tolua_constant(tolua_S,"enStrengthenSystemID",enStrengthenSystemID);
  tolua_constant(tolua_S,"enEffectSystemID",enEffectSystemID);
  tolua_constant(tolua_S,"enGhostSystemID",enGhostSystemID);
  tolua_constant(tolua_S,"enPlatforMwelfareID",enPlatforMwelfareID);
  tolua_constant(tolua_S,"enCrossServerSystemID",enCrossServerSystemID);
  tolua_constant(tolua_S,"enPetSystemID",enPetSystemID);
  tolua_constant(tolua_S,"enLootPetSystemID",enLootPetSystemID);
  tolua_constant(tolua_S,"enRebateSystemID",enRebateSystemID);
  tolua_constant(tolua_S,"en_ID37",en_ID37);
  tolua_constant(tolua_S,"en_ID38",en_ID38);
  tolua_constant(tolua_S,"enStallSystemID",enStallSystemID);
  tolua_constant(tolua_S,"en_ID40",en_ID40);
  tolua_constant(tolua_S,"enFriendLogicSystemID",enFriendLogicSystemID);
  tolua_constant(tolua_S,"en_ID42",en_ID42);
  tolua_constant(tolua_S,"en_ID43",en_ID43);
  tolua_constant(tolua_S,"enHeroSystemId",enHeroSystemId);
  tolua_constant(tolua_S,"en_ID15",en_ID15);
  tolua_constant(tolua_S,"en_ID46",en_ID46);
  tolua_constant(tolua_S,"en_ID47",en_ID47);
  tolua_constant(tolua_S,"en_ID48",en_ID48);
  tolua_constant(tolua_S,"enBossSystemID",enBossSystemID);
  tolua_constant(tolua_S,"enMailSystemID",enMailSystemID);
  tolua_constant(tolua_S,"enAlmirahSystemID",enAlmirahSystemID);
  tolua_constant(tolua_S,"enCheckSpeedSystemID",enCheckSpeedSystemID);
  tolua_constant(tolua_S,"en_ID53",en_ID53);
  tolua_constant(tolua_S,"enNewTitleSystemID",enNewTitleSystemID);
  tolua_constant(tolua_S,"en_ID55",en_ID55);
  tolua_constant(tolua_S,"en_ID56",en_ID56);
  tolua_constant(tolua_S,"enCombatSystemID",enCombatSystemID);
  tolua_constant(tolua_S,"enHallowsSystemID",enHallowsSystemID);
  tolua_constant(tolua_S,"enReviveDurationSystemID",enReviveDurationSystemID);
  tolua_constant(tolua_S,"enRedPoint",enRedPoint);
  tolua_constant(tolua_S,"enSystemCount",enSystemCount);
  tolua_constant(tolua_S,"enLoginSystemId",enLoginSystemId);
  tolua_constant(tolua_S,"cGetActorInfo",cGetActorInfo);
  tolua_constant(tolua_S,"cFcmExitGame",cFcmExitGame);
  tolua_constant(tolua_S,"cRankingData",cRankingData);
  tolua_constant(tolua_S,"cGetServerTime",cGetServerTime);
  tolua_constant(tolua_S,"CSetQQBlueDiamond",CSetQQBlueDiamond);
  tolua_constant(tolua_S,"CGetQQBlueDiamond",CGetQQBlueDiamond);
  tolua_constant(tolua_S,"CGetQQBlueDiamondGift",CGetQQBlueDiamondGift);
  tolua_constant(tolua_S,"cEveryDayCheck",cEveryDayCheck);
  tolua_constant(tolua_S,"cSaveGameSetData",cSaveGameSetData);
  tolua_constant(tolua_S,"cLoginBYLoginTools",cLoginBYLoginTools);
  tolua_constant(tolua_S,"cGetActorBuffData",cGetActorBuffData);
  tolua_constant(tolua_S,"cChangeNameOp",cChangeNameOp);
  tolua_constant(tolua_S,"cGetNearActor",cGetNearActor);
  tolua_constant(tolua_S,"cCircleCount",cCircleCount);
  tolua_constant(tolua_S,"cGetActorIdInRank",cGetActorIdInRank);
  tolua_constant(tolua_S,"cGetActorInfoByNameFuzzy",cGetActorInfoByNameFuzzy);
  tolua_constant(tolua_S,"cBuyMonthCard",cBuyMonthCard);
  tolua_constant(tolua_S,"cGetMonthCardAward",cGetMonthCardAward);
  tolua_constant(tolua_S,"cUseCdkey",cUseCdkey);
  tolua_constant(tolua_S,"cBuyFrenzy",cBuyFrenzy);
  tolua_constant(tolua_S,"cGetMoBaiInfo",cGetMoBaiInfo);
  tolua_constant(tolua_S,"cGetsbkOfflineInfo",cGetsbkOfflineInfo);
  tolua_constant(tolua_S,"cUpgreadOffice",cUpgreadOffice);
  tolua_constant(tolua_S,"cLuckyTree",cLuckyTree);
  tolua_constant(tolua_S,"cGetLuckyMoney",cGetLuckyMoney);
  tolua_constant(tolua_S,"cGetOnlineTime",cGetOnlineTime);
  tolua_constant(tolua_S,"cGetOnlineAward",cGetOnlineAward);
  tolua_constant(tolua_S,"cGetSbkRank",cGetSbkRank);
  tolua_constant(tolua_S,"cGetCenterMoBaiInfo",cGetCenterMoBaiInfo);
  tolua_constant(tolua_S,"cUseNewCdkey",cUseNewCdkey);
  tolua_constant(tolua_S,"sSendActorInfo",sSendActorInfo);
  tolua_constant(tolua_S,"sWriteFcmInfo",sWriteFcmInfo);
  tolua_constant(tolua_S,"sFcm3Hour",sFcm3Hour);
  tolua_constant(tolua_S,"sFcmLogin",sFcmLogin);
  tolua_constant(tolua_S,"sRankingUpdate",sRankingUpdate);
  tolua_constant(tolua_S,"sRankList",sRankList);
  tolua_constant(tolua_S,"sRankData",sRankData);
  tolua_constant(tolua_S,"sSendServerTime",sSendServerTime);
  tolua_constant(tolua_S,"sSendAreaBuffData",sSendAreaBuffData);
  tolua_constant(tolua_S,"sCountDown",sCountDown);
  tolua_constant(tolua_S,"sCreateScoreRecorder",sCreateScoreRecorder);
  tolua_constant(tolua_S,"sSetScoreRecorderItems",sSetScoreRecorderItems);
  tolua_constant(tolua_S,"sDeleteScoreRecorder",sDeleteScoreRecorder);
  tolua_constant(tolua_S,"sAddSlave",sAddSlave);
  tolua_constant(tolua_S,"sRemoveSlave",sRemoveSlave);
  tolua_constant(tolua_S,"sScrEffect",sScrEffect);
  tolua_constant(tolua_S,"sScrEffectCode",sScrEffectCode);
  tolua_constant(tolua_S,"sNoticeExpChange",sNoticeExpChange);
  tolua_constant(tolua_S,"sChangeEntityModel",sChangeEntityModel);
  tolua_constant(tolua_S,"sSendOpenServerDays",sSendOpenServerDays);
  tolua_constant(tolua_S,"sSendGetacivityAwardTips",sSendGetacivityAwardTips);
  tolua_constant(tolua_S,"sSendGameSetData",sSendGameSetData);
  tolua_constant(tolua_S,"sDeleteSceneEffect",sDeleteSceneEffect);
  tolua_constant(tolua_S,"sSendActorBuffData",sSendActorBuffData);
  tolua_constant(tolua_S,"sSendCombineActGift",sSendCombineActGift);
  tolua_constant(tolua_S,"sSendCombineFirstCharge",sSendCombineFirstCharge);
  tolua_constant(tolua_S,"sSendCombineConsumeRank",sSendCombineConsumeRank);
  tolua_constant(tolua_S,"sSendMysticShopItem",sSendMysticShopItem);
  tolua_constant(tolua_S,"sSendBuyMysticResult",sSendBuyMysticResult);
  tolua_constant(tolua_S,"sSendBuyMysticRecord",sSendBuyMysticRecord);
  tolua_constant(tolua_S,"sSendCombineSbkInfo",sSendCombineSbkInfo);
  tolua_constant(tolua_S,"sSendCombineHuntCount",sSendCombineHuntCount);
  tolua_constant(tolua_S,"sOpenOldPlayerBack",sOpenOldPlayerBack);
  tolua_constant(tolua_S,"sGetNearActor",sGetNearActor);
  tolua_constant(tolua_S,"sCircleCount",sCircleCount);
  tolua_constant(tolua_S,"sGetActorIdInRank",sGetActorIdInRank);
  tolua_constant(tolua_S,"sBeforeAuctionList",sBeforeAuctionList);
  tolua_constant(tolua_S,"sAfterAuctionList",sAfterAuctionList);
  tolua_constant(tolua_S,"sSendAskJoinPool",sSendAskJoinPool);
  tolua_constant(tolua_S,"sSendHotAuctionTime",sSendHotAuctionTime);
  tolua_constant(tolua_S,"sSendCustomEffect",sSendCustomEffect);
  tolua_constant(tolua_S,"sSendTurnOnOffIconFlag",sSendTurnOnOffIconFlag);
  tolua_constant(tolua_S,"sSendActorInfoByNameFuzzy",sSendActorInfoByNameFuzzy);
  tolua_constant(tolua_S,"sGetMoBaiInfo",sGetMoBaiInfo);
  tolua_constant(tolua_S,"sGetsbkOfflineInfo",sGetsbkOfflineInfo);
  tolua_constant(tolua_S,"sWorldLevel",sWorldLevel);
  tolua_constant(tolua_S,"sWorldLevelClose",sWorldLevelClose);
  tolua_constant(tolua_S,"sSendLackItem",sSendLackItem);
  tolua_constant(tolua_S,"sVestName",sVestName);
  tolua_constant(tolua_S,"sSendPkValueWashCount",sSendPkValueWashCount);
  tolua_constant(tolua_S,"sSendChangeNameResult",sSendChangeNameResult);
  tolua_constant(tolua_S,"sUseCdkey",sUseCdkey);
  tolua_constant(tolua_S,"sCrossAtvArea",sCrossAtvArea);
  tolua_constant(tolua_S,"sGetQQBlueDiamond",sGetQQBlueDiamond);
  tolua_constant(tolua_S,"sLuckyTree",sLuckyTree);
  tolua_constant(tolua_S,"sGetLuckyMoney",sGetLuckyMoney);
  tolua_constant(tolua_S,"sGetOnlineTime",sGetOnlineTime);
  tolua_constant(tolua_S,"sGetSbkRank",sGetSbkRank);
  tolua_constant(tolua_S,"sGetCenterMoBaiInfo",sGetCenterMoBaiInfo);
  tolua_constant(tolua_S,"sFcmUseOnline",sFcmUseOnline);
  tolua_constant(tolua_S,"sFcmUseOffline",sFcmUseOffline);
  tolua_constant(tolua_S,"sFcmUseHeatbeat",sFcmUseHeatbeat);
  tolua_constant(tolua_S,"sFcmAllUseHeatbeat",sFcmAllUseHeatbeat);
  tolua_constant(tolua_S,"sFcmClientTip",sFcmClientTip);
  tolua_constant(tolua_S,"cRequestBossInfo",cRequestBossInfo);
  tolua_constant(tolua_S,"cTeleToBoss",cTeleToBoss);
  tolua_constant(tolua_S,"sSendBossInfo",sSendBossInfo);
  tolua_constant(tolua_S,"sTeleToBoss",sTeleToBoss);
  tolua_constant(tolua_S,"sBossBelong",sBossBelong);
  tolua_constant(tolua_S,"sBossTimes",sBossTimes);
  tolua_constant(tolua_S,"sSendCurPlayerNum",sSendCurPlayerNum);
  tolua_constant(tolua_S,"sSendBossResult",sSendBossResult);
  tolua_constant(tolua_S,"cTakeOnEquip",cTakeOnEquip);
  tolua_constant(tolua_S,"cTakeOffEquipWithGuid",cTakeOffEquipWithGuid);
  tolua_constant(tolua_S,"cGetEquip",cGetEquip);
  tolua_constant(tolua_S,"cGetOtherEquip",cGetOtherEquip);
  tolua_constant(tolua_S,"cSetHideFationCloth",cSetHideFationCloth);
  tolua_constant(tolua_S,"cGetRankOtherEquip",cGetRankOtherEquip);
  tolua_constant(tolua_S,"cGetCenterRankOtherEquip",cGetCenterRankOtherEquip);
  tolua_constant(tolua_S,"sTakeOnEquip",sTakeOnEquip);
  tolua_constant(tolua_S,"sTakeOffEquip",sTakeOffEquip);
  tolua_constant(tolua_S,"sGetUserEquip",sGetUserEquip);
  tolua_constant(tolua_S,"sEquipDataChage",sEquipDataChage);
  tolua_constant(tolua_S,"sGetOtherEqip",sGetOtherEqip);
  tolua_constant(tolua_S,"sDelEquip",sDelEquip);
  tolua_constant(tolua_S,"sGetRankOtherEquip",sGetRankOtherEquip);
  tolua_constant(tolua_S,"sGetCenterRankOtherEquip",sGetCenterRankOtherEquip);
  tolua_constant(tolua_S,"sCannotRecoverEquip",sCannotRecoverEquip);
  tolua_constant(tolua_S,"sViewOfflineUserHero",sViewOfflineUserHero);
  tolua_constant(tolua_S,"sSendRingCd",sSendRingCd);
  tolua_constant(tolua_S,"sSendReliveRingCd",sSendReliveRingCd);
  tolua_constant(tolua_S,"cGuildInfo",cGuildInfo);
  tolua_constant(tolua_S,"cGuildMember",cGuildMember);
  tolua_constant(tolua_S,"cGuildList",cGuildList);
  tolua_constant(tolua_S,"cAddGuild",cAddGuild);
  tolua_constant(tolua_S,"cDelGuild",cDelGuild);
  tolua_constant(tolua_S,"cJoinApplyMsgList",cJoinApplyMsgList);
  tolua_constant(tolua_S,"cGuildBuilds",cGuildBuilds);
  tolua_constant(tolua_S,"cUpdateMemo",cUpdateMemo);
  tolua_constant(tolua_S,"cGuildDonate",cGuildDonate);
  tolua_constant(tolua_S,"cJoinApply",cJoinApply);
  tolua_constant(tolua_S,"cDeleteMember",cDeleteMember);
  tolua_constant(tolua_S,"cChangeGuildPos",cChangeGuildPos);
  tolua_constant(tolua_S,"cLeaderChange",cLeaderChange);
  tolua_constant(tolua_S,"cLeftGuild",cLeftGuild);
  tolua_constant(tolua_S,"cSetAddMemberFlag",cSetAddMemberFlag);
  tolua_constant(tolua_S,"cGuildUpdateBuild",cGuildUpdateBuild);
  tolua_constant(tolua_S,"cDealGuildApply",cDealGuildApply);
  tolua_constant(tolua_S,"cImpeachGuildMember",cImpeachGuildMember);
  tolua_constant(tolua_S,"cDeclareWar",cDeclareWar);
  tolua_constant(tolua_S,"cGuildDonateInfo",cGuildDonateInfo);
  tolua_constant(tolua_S,"cGuildWarList",cGuildWarList);
  tolua_constant(tolua_S,"cGuildLog",cGuildLog);
  tolua_constant(tolua_S,"cGuildGetSbkAward",cGuildGetSbkAward);
  tolua_constant(tolua_S,"cGuildGetSbkInfo",cGuildGetSbkInfo);
  tolua_constant(tolua_S,"sGuildInfo",sGuildInfo);
  tolua_constant(tolua_S,"sGuildMember",sGuildMember);
  tolua_constant(tolua_S,"sGuildList",sGuildList);
  tolua_constant(tolua_S,"sAddGuild",sAddGuild);
  tolua_constant(tolua_S,"sDelGuild",sDelGuild);
  tolua_constant(tolua_S,"sJoinApplyMsgList",sJoinApplyMsgList);
  tolua_constant(tolua_S,"sGuildBuilds",sGuildBuilds);
  tolua_constant(tolua_S,"sUpdateMemo",sUpdateMemo);
  tolua_constant(tolua_S,"sGuildDonate",sGuildDonate);
  tolua_constant(tolua_S,"sJoinApply",sJoinApply);
  tolua_constant(tolua_S,"sDeleteMember",sDeleteMember);
  tolua_constant(tolua_S,"sChangeGuildPos",sChangeGuildPos);
  tolua_constant(tolua_S,"sLeaderChange",sLeaderChange);
  tolua_constant(tolua_S,"sLeftGuild",sLeftGuild);
  tolua_constant(tolua_S,"sSetAddMemberFlag",sSetAddMemberFlag);
  tolua_constant(tolua_S,"sGuildUpdateBuild",sGuildUpdateBuild);
  tolua_constant(tolua_S,"sDealGuildApply",sDealGuildApply);
  tolua_constant(tolua_S,"sImpeachGuildMember",sImpeachGuildMember);
  tolua_constant(tolua_S,"sDeclareWar",sDeclareWar);
  tolua_constant(tolua_S,"sApplyReslut",sApplyReslut);
  tolua_constant(tolua_S,"sGuildDonateInfo",sGuildDonateInfo);
  tolua_constant(tolua_S,"sGuildWarList",sGuildWarList);
  tolua_constant(tolua_S,"sGuildLog",sGuildLog);
  tolua_constant(tolua_S,"sGuildRedPoint",sGuildRedPoint);
  tolua_constant(tolua_S,"sGuildGetSbkAward",sGuildGetSbkAward);
  tolua_constant(tolua_S,"sGuildGetSbkInfo",sGuildGetSbkInfo);
  tolua_constant(tolua_S,"cEnterFuben",cEnterFuben);
  tolua_constant(tolua_S,"cExitFuben",cExitFuben);
  tolua_constant(tolua_S,"cGetFubenAward",cGetFubenAward);
  tolua_constant(tolua_S,"sFubenResult",sFubenResult);
  tolua_constant(tolua_S,"sFubenRestTime",sFubenRestTime);
  tolua_constant(tolua_S,"sFubenSchedule",sFubenSchedule);
  tolua_constant(tolua_S,"cStoreSystemShopInfo",cStoreSystemShopInfo);
  tolua_constant(tolua_S,"cStoreSystemBuyShop",cStoreSystemBuyShop);
  tolua_constant(tolua_S,"sStoreSystemShopInfo",sStoreSystemShopInfo);
  tolua_constant(tolua_S,"sStoreSystemBuyShop",sStoreSystemBuyShop);
  tolua_constant(tolua_S,"sOpenStore",sOpenStore);
  tolua_constant(tolua_S,"cMove",cMove);
  tolua_constant(tolua_S,"cRun",cRun);
  tolua_constant(tolua_S,"cJump",cJump);
  tolua_constant(tolua_S,"cTurnAround",cTurnAround);
  tolua_constant(tolua_S,"cFlyShoes",cFlyShoes);
  tolua_constant(tolua_S,"cNpcTransform",cNpcTransform);
  tolua_constant(tolua_S,"sAutoPath",sAutoPath);
  tolua_constant(tolua_S,"sFlyShoes",sFlyShoes);
  tolua_constant(tolua_S,"sNpcTransform",sNpcTransform);
  tolua_constant(tolua_S,"cLogin",cLogin);
  tolua_constant(tolua_S,"cHeartbeat",cHeartbeat);
  tolua_constant(tolua_S,"cSetTargetEntity",cSetTargetEntity);
  tolua_constant(tolua_S,"cSetMousePos",cSetMousePos);
  tolua_constant(tolua_S,"cNpcTalk",cNpcTalk);
  tolua_constant(tolua_S,"cMessageBox",cMessageBox);
  tolua_constant(tolua_S,"cTestHeartBeat",cTestHeartBeat);
  tolua_constant(tolua_S,"cClientGetLoginDays",cClientGetLoginDays);
  tolua_constant(tolua_S,"cCommonTelePort",cCommonTelePort);
  tolua_constant(tolua_S,"cAppKeepAlive",cAppKeepAlive);
  tolua_constant(tolua_S,"cCheckTime",cCheckTime);
  tolua_constant(tolua_S,"cChooseRelive",cChooseRelive);
  tolua_constant(tolua_S,"cReqRankData",cReqRankData);
  tolua_constant(tolua_S,"cClientSendfcmInfo",cClientSendfcmInfo);
  tolua_constant(tolua_S,"cYYLogin",cYYLogin);
  tolua_constant(tolua_S,"cCallMember",cCallMember);
  tolua_constant(tolua_S,"cAgreeCall",cAgreeCall);
  tolua_constant(tolua_S,"cChangeVoc",cChangeVoc);
  tolua_constant(tolua_S,"cGetPcClientDownLoadGift",cGetPcClientDownLoadGift);
  tolua_constant(tolua_S,"c360Login",c360Login);
  tolua_constant(tolua_S,"c7GameLogin",c7GameLogin);
  tolua_constant(tolua_S,"c37GameLogin",c37GameLogin);
  tolua_constant(tolua_S,"sUserLogin",sUserLogin);
  tolua_constant(tolua_S,"sEntityAppear",sEntityAppear);
  tolua_constant(tolua_S,"sCreateMainActor",sCreateMainActor);
  tolua_constant(tolua_S,"sOtherActorAppear",sOtherActorAppear);
  tolua_constant(tolua_S,"sEntityDisappear",sEntityDisappear);
  tolua_constant(tolua_S,"sEntityPropertyChange",sEntityPropertyChange);
  tolua_constant(tolua_S,"sMainactorPropertyChange",sMainactorPropertyChange);
  tolua_constant(tolua_S,"sResetMainActorPos",sResetMainActorPos);
  tolua_constant(tolua_S,"sOtherEntityMove",sOtherEntityMove);
  tolua_constant(tolua_S,"sHeartbeat",sHeartbeat);
  tolua_constant(tolua_S,"sNpcTalk",sNpcTalk);
  tolua_constant(tolua_S,"sOpenDlg",sOpenDlg);
  tolua_constant(tolua_S,"sEnterScene",sEnterScene);
  tolua_constant(tolua_S,"sActorTransport",sActorTransport);
  tolua_constant(tolua_S,"sOtherEntityRun",sOtherEntityRun);
  tolua_constant(tolua_S,"sStartSingSpell",sStartSingSpell);
  tolua_constant(tolua_S,"sEndSingSpell",sEndSingSpell);
  tolua_constant(tolua_S,"sStartSpellSkill",sStartSpellSkill);
  tolua_constant(tolua_S,"sAddEffect",sAddEffect);
  tolua_constant(tolua_S,"sSkillHit",sSkillHit);
  tolua_constant(tolua_S,"sWarGuildList",sWarGuildList);
  tolua_constant(tolua_S,"sMessageBox",sMessageBox);
  tolua_constant(tolua_S,"sEntityJump",sEntityJump);
  tolua_constant(tolua_S,"sOperatorResult",sOperatorResult);
  tolua_constant(tolua_S,"sTurnAround",sTurnAround);
  tolua_constant(tolua_S,"sNearAttack",sNearAttack);
  tolua_constant(tolua_S,"sInstatnceMove",sInstatnceMove);
  tolua_constant(tolua_S,"sChangeVocResult",sChangeVocResult);
  tolua_constant(tolua_S,"sDoDge",sDoDge);
  tolua_constant(tolua_S,"sRapidMove",sRapidMove);
  tolua_constant(tolua_S,"sReuse",sReuse);
  tolua_constant(tolua_S,"sAddSceneEffect",sAddSceneEffect);
  tolua_constant(tolua_S,"sNPCQuestState",sNPCQuestState);
  tolua_constant(tolua_S,"sLostTarget",sLostTarget);
  tolua_constant(tolua_S,"sEntityDeath",sEntityDeath);
  tolua_constant(tolua_S,"sGather",sGather);
  tolua_constant(tolua_S,"sUpdateActorNameClr",sUpdateActorNameClr);
  tolua_constant(tolua_S,"sConsecutiveKillCDChanged",sConsecutiveKillCDChanged);
  tolua_constant(tolua_S,"sDelEffect",sDelEffect);
  tolua_constant(tolua_S,"sChangeShowName",sChangeShowName);
  tolua_constant(tolua_S,"sSceneAreaAttri",sSceneAreaAttri);
  tolua_constant(tolua_S,"sScreenShake",sScreenShake);
  tolua_constant(tolua_S,"sBabyPropChange",sBabyPropChange);
  tolua_constant(tolua_S,"sBabyPosChange",sBabyPosChange);
  tolua_constant(tolua_S,"sChangeAttackType",sChangeAttackType);
  tolua_constant(tolua_S,"sTestHeartBeatAck",sTestHeartBeatAck);
  tolua_constant(tolua_S,"sBeatFly",sBeatFly);
  tolua_constant(tolua_S,"sStartTransmit",sStartTransmit);
  tolua_constant(tolua_S,"sOpenCommonServer",sOpenCommonServer);
  tolua_constant(tolua_S,"sSpecialEntityAppear",sSpecialEntityAppear);
  tolua_constant(tolua_S,"sMoveAhead",sMoveAhead);
  tolua_constant(tolua_S,"sMoveBack",sMoveBack);
  tolua_constant(tolua_S,"sResetOtherEntityPos",sResetOtherEntityPos);
  tolua_constant(tolua_S,"sSendCultureInfo",sSendCultureInfo);
  tolua_constant(tolua_S,"sFoundTarget",sFoundTarget);
  tolua_constant(tolua_S,"sDogDeath",sDogDeath);
  tolua_constant(tolua_S,"sHeadCountDown",sHeadCountDown);
  tolua_constant(tolua_S,"sTargetRapidMove",sTargetRapidMove);
  tolua_constant(tolua_S,"sNoticeBuyItems",sNoticeBuyItems);
  tolua_constant(tolua_S,"sSendShortCutMsg",sSendShortCutMsg);
  tolua_constant(tolua_S,"sNotEnoughAward",sNotEnoughAward);
  tolua_constant(tolua_S,"sSendLoginDays",sSendLoginDays);
  tolua_constant(tolua_S,"sEnterSceneEffect",sEnterSceneEffect);
  tolua_constant(tolua_S,"sMonsterAppear",sMonsterAppear);
  tolua_constant(tolua_S,"sPetAppear",sPetAppear);
  tolua_constant(tolua_S,"sNPCAppear",sNPCAppear);
  tolua_constant(tolua_S,"sMoneyChange",sMoneyChange);
  tolua_constant(tolua_S,"sSendRankData",sSendRankData);
  tolua_constant(tolua_S,"sActorReliveInfo",sActorReliveInfo);
  tolua_constant(tolua_S,"sActorRelive",sActorRelive);
  tolua_constant(tolua_S,"sMemberCall",sMemberCall);
  tolua_constant(tolua_S,"sPcClientDownLoadState",sPcClientDownLoadState);
  tolua_constant(tolua_S,"sActorForbid",sActorForbid);
  tolua_constant(tolua_S,"sKictout",sKictout);
  tolua_constant(tolua_S,"sCheckTimeBack",sCheckTimeBack);
  tolua_constant(tolua_S,"sPrintDebugText",sPrintDebugText);
  tolua_constant(tolua_S,"sFcmKictout",sFcmKictout);
  tolua_constant(tolua_S,"sAddBuff",sAddBuff);
  tolua_constant(tolua_S,"sDelBuff",sDelBuff);
  tolua_constant(tolua_S,"sDelBuffType",sDelBuffType);
  tolua_constant(tolua_S,"sInitMainActorBuffData",sInitMainActorBuffData);
  tolua_constant(tolua_S,"sChangeBuffVallue",sChangeBuffVallue);
  tolua_constant(tolua_S,"sChangeBuffCdTime",sChangeBuffCdTime);
  tolua_constant(tolua_S,"cSendChat",cSendChat);
  tolua_constant(tolua_S,"cShowChat",cShowChat);
  tolua_constant(tolua_S,"cGmBroadCast",cGmBroadCast);
  tolua_constant(tolua_S,"cGetChatShowItem",cGetChatShowItem);
  tolua_constant(tolua_S,"cSendHelp",cSendHelp);
  tolua_constant(tolua_S,"cSendReqCsChat",cSendReqCsChat);
  tolua_constant(tolua_S,"cSendClearMsgRefresh",cSendClearMsgRefresh);
  tolua_constant(tolua_S,"sSendChat",sSendChat);
  tolua_constant(tolua_S,"sSendTipmsg",sSendTipmsg);
  tolua_constant(tolua_S,"scShowChat",scShowChat);
  tolua_constant(tolua_S,"sChatResult",sChatResult);
  tolua_constant(tolua_S,"sGetChatShowItem",sGetChatShowItem);
  tolua_constant(tolua_S,"sNonPlayerChatNear",sNonPlayerChatNear);
  tolua_constant(tolua_S,"sGmBroadCast",sGmBroadCast);
  tolua_constant(tolua_S,"sSendSubmitResult",sSendSubmitResult);
  tolua_constant(tolua_S,"sSendReqCsChat",sSendReqCsChat);
  tolua_constant(tolua_S,"sSendClearMsg",sSendClearMsg);
  tolua_constant(tolua_S,"cQueryQuest",cQueryQuest);
  tolua_constant(tolua_S,"cChangetQuestState",cChangetQuestState);
  tolua_constant(tolua_S,"cQuestTel",cQuestTel);
  tolua_constant(tolua_S,"sQueryQuest",sQueryQuest);
  tolua_constant(tolua_S,"sChangetQuestState",sChangetQuestState);
  tolua_constant(tolua_S,"sDeleteQuest",sDeleteQuest);
  tolua_constant(tolua_S,"sAddQuest",sAddQuest);
  tolua_constant(tolua_S,"sQuestTel",sQuestTel);
  tolua_constant(tolua_S,"sChangeQuestState",sChangeQuestState);
  tolua_constant(tolua_S,"enBagSystemcAddItem",enBagSystemcAddItem);
  tolua_constant(tolua_S,"enBagSystemcQueryItem",enBagSystemcQueryItem);
  tolua_constant(tolua_S,"enBagSystemcDelItem",enBagSystemcDelItem);
  tolua_constant(tolua_S,"enBagSystemcBagSplit",enBagSystemcBagSplit);
  tolua_constant(tolua_S,"enBagSystemcBagMerge",enBagSystemcBagMerge);
  tolua_constant(tolua_S,"enBagSystemscArrangeBagOver",enBagSystemscArrangeBagOver);
  tolua_constant(tolua_S,"enBagSystemcUseItem",enBagSystemcUseItem);
  tolua_constant(tolua_S,"encExChangeMoney",encExChangeMoney);
  tolua_constant(tolua_S,"enRecoverItem",enRecoverItem);
  tolua_constant(tolua_S,"enBagSystemcBatchUseItem",enBagSystemcBatchUseItem);
  tolua_constant(tolua_S,"cBagSystemQueryItemsExtraInfo",cBagSystemQueryItemsExtraInfo);
  tolua_constant(tolua_S,"cBagSystemQueryItemsExtraInfoOne",cBagSystemQueryItemsExtraInfoOne);
  tolua_constant(tolua_S,"enBagSystemcMaxBagCodeID",enBagSystemcMaxBagCodeID);
  tolua_constant(tolua_S,"enBagSystemsAddItem",enBagSystemsAddItem);
  tolua_constant(tolua_S,"enBagSystemsInitBagItem",enBagSystemsInitBagItem);
  tolua_constant(tolua_S,"enBagSystemsDelItem",enBagSystemsDelItem);
  tolua_constant(tolua_S,"enBagSystemsItemCountChange",enBagSystemsItemCountChange);
  tolua_constant(tolua_S,"enBagSystemsSendBagEnlargeFee",enBagSystemsSendBagEnlargeFee);
  tolua_constant(tolua_S,"enBagSystemsItemInfoChange",enBagSystemsItemInfoChange);
  tolua_constant(tolua_S,"enBagSystemsUseItemResult",enBagSystemsUseItemResult);
  tolua_constant(tolua_S,"enBagSystemsItemTimeUp",enBagSystemsItemTimeUp);
  tolua_constant(tolua_S,"enBagSystemsBagGetNewItem",enBagSystemsBagGetNewItem);
  tolua_constant(tolua_S,"enBagSystemsArrangeBagOver",enBagSystemsArrangeBagOver);
  tolua_constant(tolua_S,"enBagSystemsRecoverResult",enBagSystemsRecoverResult);
  tolua_constant(tolua_S,"sBagSystemQueryItemsExtraInfo",sBagSystemQueryItemsExtraInfo);
  tolua_constant(tolua_S,"sBagSystemQueryItemsExtraInfoOne",sBagSystemQueryItemsExtraInfoOne);
  tolua_constant(tolua_S,"sInitUserSkill",sInitUserSkill);
  tolua_constant(tolua_S,"sTrainSkillResult",sTrainSkillResult);
  tolua_constant(tolua_S,"sLearnMiji",sLearnMiji);
  tolua_constant(tolua_S,"sSkillExpChange",sSkillExpChange);
  tolua_constant(tolua_S,"sSendSkillCd",sSendSkillCd);
  tolua_constant(tolua_S,"sAttackByActor",sAttackByActor);
  tolua_constant(tolua_S,"sSelfDamageOther",sSelfDamageOther);
  tolua_constant(tolua_S,"sTargetAbsort",sTargetAbsort);
  tolua_constant(tolua_S,"sSetSkillOpen",sSetSkillOpen);
  tolua_constant(tolua_S,"sDeleteMiji",sDeleteMiji);
  tolua_constant(tolua_S,"sForgetSkill",sForgetSkill);
  tolua_constant(tolua_S,"sSetSkillCdTime",sSetSkillCdTime);
  tolua_constant(tolua_S,"sSetSkillSingTime",sSetSkillSingTime);
  tolua_constant(tolua_S,"sGatherMonsterProgress",sGatherMonsterProgress);
  tolua_constant(tolua_S,"sPlayGuide",sPlayGuide);
  tolua_constant(tolua_S,"sSoldierSoulSkillStateChange",sSoldierSoulSkillStateChange);
  tolua_constant(tolua_S,"sSkillSystemPetCountChange",sSkillSystemPetCountChange);
  tolua_constant(tolua_S,"cGetSkill",cGetSkill);
  tolua_constant(tolua_S,"cUseSkill",cUseSkill);
  tolua_constant(tolua_S,"cTrainSkill",cTrainSkill);
  tolua_constant(tolua_S,"cGetCd",cGetCd);
  tolua_constant(tolua_S,"cSetDefaultSkill",cSetDefaultSkill);
  tolua_constant(tolua_S,"cNearAttack",cNearAttack);
  tolua_constant(tolua_S,"cStartSing",cStartSing);
  tolua_constant(tolua_S,"cStartGather",cStartGather);
  tolua_constant(tolua_S,"cDeleteMiji",cDeleteMiji);
  tolua_constant(tolua_S,"cSetSkillOpen",cSetSkillOpen);
  tolua_constant(tolua_S,"cLearnMiji",cLearnMiji);
  tolua_constant(tolua_S,"cAddSkillExp",cAddSkillExp);
  tolua_constant(tolua_S,"cOpenSkill",cOpenSkill);
  tolua_constant(tolua_S,"cCloseSkill",cCloseSkill);
  tolua_constant(tolua_S,"cMaxSkillCodeCount",cMaxSkillCodeCount);
  tolua_constant(tolua_S,"cDealSystemRequestDeal",cDealSystemRequestDeal);
  tolua_constant(tolua_S,"cDealSystemReplyDeal",cDealSystemReplyDeal);
  tolua_constant(tolua_S,"cDealSystemAddDealItem",cDealSystemAddDealItem);
  tolua_constant(tolua_S,"cDealSystemAddNumber",cDealSystemAddNumber);
  tolua_constant(tolua_S,"cDealSystemLockDeal",cDealSystemLockDeal);
  tolua_constant(tolua_S,"cDealSystemCancelDeal",cDealSystemCancelDeal);
  tolua_constant(tolua_S,"cDealSystemConfimDeal",cDealSystemConfimDeal);
  tolua_constant(tolua_S,"sDealSystemDealRequest",sDealSystemDealRequest);
  tolua_constant(tolua_S,"sDealSystemDealRefused",sDealSystemDealRefused);
  tolua_constant(tolua_S,"sDealSystemStartDeal",sDealSystemStartDeal);
  tolua_constant(tolua_S,"sDealSystemAddDealItemRet",sDealSystemAddDealItemRet);
  tolua_constant(tolua_S,"sDealSystemTargetAddDealItem",sDealSystemTargetAddDealItem);
  tolua_constant(tolua_S,"sDealSystemChangeDealCoinRet",sDealSystemChangeDealCoinRet);
  tolua_constant(tolua_S,"sDealSystemTargetChgDealCoin",sDealSystemTargetChgDealCoin);
  tolua_constant(tolua_S,"sDealSystemLockDeal",sDealSystemLockDeal);
  tolua_constant(tolua_S,"sDealSystemDealCanceled",sDealSystemDealCanceled);
  tolua_constant(tolua_S,"sDealSystemDealComplete",sDealSystemDealComplete);
  tolua_constant(tolua_S,"cLootItem",cLootItem);
  tolua_constant(tolua_S,"cLootMoney",cLootMoney);
  tolua_constant(tolua_S,"cLootAll",cLootAll);
  tolua_constant(tolua_S,"cQueryDropBag",cQueryDropBag);
  tolua_constant(tolua_S,"cRollItem",cRollItem);
  tolua_constant(tolua_S,"cStartRollItem",cStartRollItem);
  tolua_constant(tolua_S,"cCaptinAssignedItem",cCaptinAssignedItem);
  tolua_constant(tolua_S,"cCloseDropBag",cCloseDropBag);
  tolua_constant(tolua_S,"cLootDropItem",cLootDropItem);
  tolua_constant(tolua_S,"cPetLootDropItem",cPetLootDropItem);
  tolua_constant(tolua_S,"sAddDropBag",sAddDropBag);
  tolua_constant(tolua_S,"sDeleteDropBag",sDeleteDropBag);
  tolua_constant(tolua_S,"sDeleteDropBagMoney",sDeleteDropBagMoney);
  tolua_constant(tolua_S,"sDeleteDropBagItem",sDeleteDropBagItem);
  tolua_constant(tolua_S,"sSendDropBagInfo",sSendDropBagInfo);
  tolua_constant(tolua_S,"sDeleteQuestItem",sDeleteQuestItem);
  tolua_constant(tolua_S,"sDropBagStateChange",sDropBagStateChange);
  tolua_constant(tolua_S,"sDropItemStateChange",sDropItemStateChange);
  tolua_constant(tolua_S,"sOpenLootDialog",sOpenLootDialog);
  tolua_constant(tolua_S,"sDropItemAppear",sDropItemAppear);
  tolua_constant(tolua_S,"sDropItemDisAppear",sDropItemDisAppear);
  tolua_constant(tolua_S,"sLootDropItem",sLootDropItem);
  tolua_constant(tolua_S,"sPetLootDropItem",sPetLootDropItem);
  tolua_constant(tolua_S,"enTeamSyetemcGetMemberData",enTeamSyetemcGetMemberData);
  tolua_constant(tolua_S,"enTeamSystemcInviteJoinTeam",enTeamSystemcInviteJoinTeam);
  tolua_constant(tolua_S,"enTeamSystemcLeaveTeam",enTeamSystemcLeaveTeam);
  tolua_constant(tolua_S,"enTeamSystemcApplyJoinTeam",enTeamSystemcApplyJoinTeam);
  tolua_constant(tolua_S,"enTeamSystemcSetCaptin",enTeamSystemcSetCaptin);
  tolua_constant(tolua_S,"enTeamSystemcKickMember",enTeamSystemcKickMember);
  tolua_constant(tolua_S,"enTeamSystemcDestroyTeam",enTeamSystemcDestroyTeam);
  tolua_constant(tolua_S,"enTeamSystemcApplyJoinTeamReply",enTeamSystemcApplyJoinTeamReply);
  tolua_constant(tolua_S,"enTeamSystemcGetAllowTeam",enTeamSystemcGetAllowTeam);
  tolua_constant(tolua_S,"enTeamsystemcIsAutoTeam",enTeamsystemcIsAutoTeam);
  tolua_constant(tolua_S,"enTeamSystemcAskNearTeamInfo",enTeamSystemcAskNearTeamInfo);
  tolua_constant(tolua_S,"enTeamSystemsInitTeam",enTeamSystemsInitTeam);
  tolua_constant(tolua_S,"enTeamSystemsAddMember",enTeamSystemsAddMember);
  tolua_constant(tolua_S,"enTeamSystemsDelMember",enTeamSystemsDelMember);
  tolua_constant(tolua_S,"enTeamSystemsApplyJoinTeam",enTeamSystemsApplyJoinTeam);
  tolua_constant(tolua_S,"enTeamSystemsSetCaptin",enTeamSystemsSetCaptin);
  tolua_constant(tolua_S,"enTeamSystemsMemberLogout",enTeamSystemsMemberLogout);
  tolua_constant(tolua_S,"enTeamSystemsDestroyTeam",enTeamSystemsDestroyTeam);
  tolua_constant(tolua_S,"enTeamSystemsGetAllowTeam",enTeamSystemsGetAllowTeam);
  tolua_constant(tolua_S,"enTeamSystemsSendNearTeamInfo",enTeamSystemsSendNearTeamInfo);
  tolua_constant(tolua_S,"enTeamSystemsMemOnlineState",enTeamSystemsMemOnlineState);
  tolua_constant(tolua_S,"enTeamSystemsUpdateMember",enTeamSystemsUpdateMember);
  tolua_constant(tolua_S,"enTeamSystemsSendNearActorInfo",enTeamSystemsSendNearActorInfo);
  tolua_constant(tolua_S,"enTeamSystemsSendBuffIds",enTeamSystemsSendBuffIds);
  tolua_constant(tolua_S,"enTeamSystemsMemberMove",enTeamSystemsMemberMove);
  tolua_constant(tolua_S,"cInviteMatch",cInviteMatch);
  tolua_constant(tolua_S,"cInviteResult",cInviteResult);
  tolua_constant(tolua_S,"cSetFreePkMode",cSetFreePkMode);
  tolua_constant(tolua_S,"cOnFriendIntercede",cOnFriendIntercede);
  tolua_constant(tolua_S,"cIntercedeMineral",cIntercedeMineral);
  tolua_constant(tolua_S,"sSendInvite",sSendInvite);
  tolua_constant(tolua_S,"sStartMatch",sStartMatch);
  tolua_constant(tolua_S,"sSetFreePkMode",sSetFreePkMode);
  tolua_constant(tolua_S,"sKillHe",sKillHe);
  tolua_constant(tolua_S,"cActivityCommonOperator",cActivityCommonOperator);
  tolua_constant(tolua_S,"cReqActivityData",cReqActivityData);
  tolua_constant(tolua_S,"cReqYYHallFreshManGift",cReqYYHallFreshManGift);
  tolua_constant(tolua_S,"cReqYYHallLoginGift",cReqYYHallLoginGift);
  tolua_constant(tolua_S,"cReqYYHallLevelGift",cReqYYHallLevelGift);
  tolua_constant(tolua_S,"cReqYYHallNobleGift",cReqYYHallNobleGift);
  tolua_constant(tolua_S,"cReqYYVIPNewSrvGift",cReqYYVIPNewSrvGift);
  tolua_constant(tolua_S,"cReqYYVIPDailyGift",cReqYYVIPDailyGift);
  tolua_constant(tolua_S,"cReqYYVIPWeeklyGift",cReqYYVIPWeeklyGift);
  tolua_constant(tolua_S,"cReqSuperVipV1_V3",cReqSuperVipV1_V3);
  tolua_constant(tolua_S,"cReqSuperVipDaily",cReqSuperVipDaily);
  tolua_constant(tolua_S,"cReqActorTypesScores",cReqActorTypesScores);
  tolua_constant(tolua_S,"sSendPersonActivity",sSendPersonActivity);
  tolua_constant(tolua_S,"sSendGlobalActivity",sSendGlobalActivity);
  tolua_constant(tolua_S,"sSendPersonActivityUpdate",sSendPersonActivityUpdate);
  tolua_constant(tolua_S,"sSendGlobalActivityUpdate",sSendGlobalActivityUpdate);
  tolua_constant(tolua_S,"sSendActivityEnd",sSendActivityEnd);
  tolua_constant(tolua_S,"sActivityOperator",sActivityOperator);
  tolua_constant(tolua_S,"SActivityResult",SActivityResult);
  tolua_constant(tolua_S,"SActivityPopup",SActivityPopup);
  tolua_constant(tolua_S,"sYYHallData",sYYHallData);
  tolua_constant(tolua_S,"sYYVipData",sYYVipData);
  tolua_constant(tolua_S,"sSupperVipData",sSupperVipData);
  tolua_constant(tolua_S,"sSendCompletPlayerNum",sSendCompletPlayerNum);
  tolua_constant(tolua_S,"sSendActorTypesScores",sSendActorTypesScores);
  tolua_constant(tolua_S,"cDeportGetItems",cDeportGetItems);
  tolua_constant(tolua_S,"cDeportItemBag2Deport",cDeportItemBag2Deport);
  tolua_constant(tolua_S,"cDeportItemDepot2Bag",cDeportItemDepot2Bag);
  tolua_constant(tolua_S,"cDepotRomove",cDepotRomove);
  tolua_constant(tolua_S,"cDepoBuy",cDepoBuy);
  tolua_constant(tolua_S,"cDeportArrangeBagOver",cDeportArrangeBagOver);
  tolua_constant(tolua_S,"cMaxDepotCodeID",cMaxDepotCodeID);
  tolua_constant(tolua_S,"sDeportSendItems",sDeportSendItems);
  tolua_constant(tolua_S,"sDeportAddItem",sDeportAddItem);
  tolua_constant(tolua_S,"sDeportDelItem",sDeportDelItem);
  tolua_constant(tolua_S,"sDeportItemCountChange",sDeportItemCountChange);
  tolua_constant(tolua_S,"sDepotSendGridNum",sDepotSendGridNum);
  tolua_constant(tolua_S,"sDeportArrangeBagOver",sDeportArrangeBagOver);
  tolua_constant(tolua_S,"cReadMsg",cReadMsg);
  tolua_constant(tolua_S,"sAddMsg",sAddMsg);
  tolua_constant(tolua_S,"sDeleteMsg",sDeleteMsg);
  tolua_constant(tolua_S,"sResultMsg",sResultMsg);
  tolua_constant(tolua_S,"sMoveToMsg",sMoveToMsg);
  tolua_constant(tolua_S,"cGetAchieveData",cGetAchieveData);
  tolua_constant(tolua_S,"cGetAchieveAwards",cGetAchieveAwards);
  tolua_constant(tolua_S,"cPushAchieveRedPoint",cPushAchieveRedPoint);
  tolua_constant(tolua_S,"sSendAchieveData",sSendAchieveData);
  tolua_constant(tolua_S,"sGetAchieveAwards",sGetAchieveAwards);
  tolua_constant(tolua_S,"sPushAchieveRedPoint",sPushAchieveRedPoint);
  tolua_constant(tolua_S,"cGetMedalData",cGetMedalData);
  tolua_constant(tolua_S,"cUpMedalLevel",cUpMedalLevel);
  tolua_constant(tolua_S,"sSendMedalData",sSendMedalData);
  tolua_constant(tolua_S,"sUpMedalLevelResult",sUpMedalLevelResult);
  tolua_constant(tolua_S,"cPetSetBattleState",cPetSetBattleState);
  tolua_constant(tolua_S,"cRecallPet",cRecallPet);
  tolua_constant(tolua_S,"cRemoveBattlePet",cRemoveBattlePet);
  tolua_constant(tolua_S,"sPetCount",sPetCount);
  tolua_constant(tolua_S,"cHeroGetList",cHeroGetList);
  tolua_constant(tolua_S,"cHeroStageUp",cHeroStageUp);
  tolua_constant(tolua_S,"cHeroSkillLevelUp",cHeroSkillLevelUp);
  tolua_constant(tolua_S,"cHeroChangeName",cHeroChangeName);
  tolua_constant(tolua_S,"cSetHeroState",cSetHeroState);
  tolua_constant(tolua_S,"cViewHero",cViewHero);
  tolua_constant(tolua_S,"sHeroList",sHeroList);
  tolua_constant(tolua_S,"sHeroSkillList",sHeroSkillList);
  tolua_constant(tolua_S,"sHeroUpdate",sHeroUpdate);
  tolua_constant(tolua_S,"sHeroSkillUpdate",sHeroSkillUpdate);
  tolua_constant(tolua_S,"sHeroStateChange",sHeroStateChange);
  tolua_constant(tolua_S,"sHeroExpChange",sHeroExpChange);
  tolua_constant(tolua_S,"sHeroView",sHeroView);
  tolua_constant(tolua_S,"sHeroOpResult",sHeroOpResult);
  tolua_constant(tolua_S,"cSearchMastersOrPupils",cSearchMastersOrPupils);
  tolua_constant(tolua_S,"cTeacherSysOpt",cTeacherSysOpt);
  tolua_constant(tolua_S,"cLoadTeacherInfo",cLoadTeacherInfo);
  tolua_constant(tolua_S,"cExchangeBonus",cExchangeBonus);
  tolua_constant(tolua_S,"cExtendPupilSlot",cExtendPupilSlot);
  tolua_constant(tolua_S,"sSendSearchResult",sSendSearchResult);
  tolua_constant(tolua_S,"sSendTeacherOptResult",sSendTeacherOptResult);
  tolua_constant(tolua_S,"sLoadTeacherList",sLoadTeacherList);
  tolua_constant(tolua_S,"sUpdateBonus",sUpdateBonus);
  tolua_constant(tolua_S,"sExtendPupilSlot",sExtendPupilSlot);
  tolua_constant(tolua_S,"cStartStall",cStartStall);
  tolua_constant(tolua_S,"cEndStall",cEndStall);
  tolua_constant(tolua_S,"cLeaveMsg",cLeaveMsg);
  tolua_constant(tolua_S,"cBuyStallItem",cBuyStallItem);
  tolua_constant(tolua_S,"cViewStall",cViewStall);
  tolua_constant(tolua_S,"cSendAd",cSendAd);
  tolua_constant(tolua_S,"cStallItemOpt",cStallItemOpt);
  tolua_constant(tolua_S,"cCanStall",cCanStall);
  tolua_constant(tolua_S,"sStallInfo",sStallInfo);
  tolua_constant(tolua_S,"sAddLeaveMsg",sAddLeaveMsg);
  tolua_constant(tolua_S,"sAddBuyLog",sAddBuyLog);
  tolua_constant(tolua_S,"sExtendGrid",sExtendGrid);
  tolua_constant(tolua_S,"sStallResult",sStallResult);
  tolua_constant(tolua_S,"sStallBroadCast",sStallBroadCast);
  tolua_constant(tolua_S,"sStallItemOpt",sStallItemOpt);
  tolua_constant(tolua_S,"sNoticeSaleItem",sNoticeSaleItem);
  tolua_constant(tolua_S,"sStallAreaResult",sStallAreaResult);
  tolua_constant(tolua_S,"cAddFriend",cAddFriend);
  tolua_constant(tolua_S,"cAddResult",cAddResult);
  tolua_constant(tolua_S,"cGetSocialList",cGetSocialList);
  tolua_constant(tolua_S,"cAddBackList",cAddBackList);
  tolua_constant(tolua_S,"cAddfollow",cAddfollow);
  tolua_constant(tolua_S,"cSetFollowColor",cSetFollowColor);
  tolua_constant(tolua_S,"cDeleteFriend",cDeleteFriend);
  tolua_constant(tolua_S,"cReportList",cReportList);
  tolua_constant(tolua_S,"cAllAcceptApply",cAllAcceptApply);
  tolua_constant(tolua_S,"sSendSocialList",sSendSocialList);
  tolua_constant(tolua_S,"sApplyFriend",sApplyFriend);
  tolua_constant(tolua_S,"sDeleteFriend",sDeleteFriend);
  tolua_constant(tolua_S,"sReportList",sReportList);
  tolua_constant(tolua_S,"cCheckUserPasswd",cCheckUserPasswd);
  tolua_constant(tolua_S,"cCreateAccount",cCreateAccount);
  tolua_constant(tolua_S,"cGetUserList",cGetUserList);
  tolua_constant(tolua_S,"cCreateActor",cCreateActor);
  tolua_constant(tolua_S,"cDeleteActor",cDeleteActor);
  tolua_constant(tolua_S,"cRandName",cRandName);
  tolua_constant(tolua_S,"cCheckSecondPsw",cCheckSecondPsw);
  tolua_constant(tolua_S,"cCreateSecondPsw",cCreateSecondPsw);
  tolua_constant(tolua_S,"cCrossServerInit",cCrossServerInit);
  tolua_constant(tolua_S,"cHeatBeat",cHeatBeat);
  tolua_constant(tolua_S,"sLoginErrorCode",sLoginErrorCode);
  tolua_constant(tolua_S,"sGetUserList",sGetUserList);
  tolua_constant(tolua_S,"sCreateActor",sCreateActor);
  tolua_constant(tolua_S,"sDeleteActor",sDeleteActor);
  tolua_constant(tolua_S,"sRandNameActor",sRandNameActor);
  tolua_constant(tolua_S,"sCheckSecondPswResult",sCheckSecondPswResult);
  tolua_constant(tolua_S,"sCreateSecondPswRessult",sCreateSecondPswRessult);
  tolua_constant(tolua_S,"sOtherLoginGame",sOtherLoginGame);
  tolua_constant(tolua_S,"sCrossServerInit",sCrossServerInit);
  tolua_constant(tolua_S,"cMailSystemMailOpt",cMailSystemMailOpt);
  tolua_constant(tolua_S,"cMailSystemDeleteMails",cMailSystemDeleteMails);
  tolua_constant(tolua_S,"cMailSystemGetMailItems",cMailSystemGetMailItems);
  tolua_constant(tolua_S,"cMailSystemDeleteMailAll",cMailSystemDeleteMailAll);
  tolua_constant(tolua_S,"cMailSystemGetMailItemsAll",cMailSystemGetMailItemsAll);
  tolua_constant(tolua_S,"cMailSystemSomeMails",cMailSystemSomeMails);
  tolua_constant(tolua_S,"sMailSystemSendAllMail",sMailSystemSendAllMail);
  tolua_constant(tolua_S,"sMailSystemNewMail",sMailSystemNewMail);
  tolua_constant(tolua_S,"sMailSystemDeleteMails",sMailSystemDeleteMails);
  tolua_constant(tolua_S,"sMailSystemSendMailItems",sMailSystemSendMailItems);
  tolua_constant(tolua_S,"sMailSystemSomeMails",sMailSystemSomeMails);
  tolua_constant(tolua_S,"cSendSpeedTimeData",cSendSpeedTimeData);
  tolua_constant(tolua_S,"sSendSpeedTimeData",sSendSpeedTimeData);
  tolua_constant(tolua_S,"cClientGetNewTitleData",cClientGetNewTitleData);
  tolua_constant(tolua_S,"cClientCutOverNewTitle",cClientCutOverNewTitle);
  tolua_constant(tolua_S,"cClientGetCustomTitleData",cClientGetCustomTitleData);
  tolua_constant(tolua_S,"cClientCutOverCustomTitle",cClientCutOverCustomTitle);
  tolua_constant(tolua_S,"sSendNewTitleData",sSendNewTitleData);
  tolua_constant(tolua_S,"sSendAddNewTitleData",sSendAddNewTitleData);
  tolua_constant(tolua_S,"sSendDelNewTitleData",sSendDelNewTitleData);
  tolua_constant(tolua_S,"sSendAddTimeTitleData",sSendAddTimeTitleData);
  tolua_constant(tolua_S,"sSendCustomTitleData",sSendCustomTitleData);
  tolua_constant(tolua_S,"sSendAddCustomTitleData",sSendAddCustomTitleData);
  tolua_constant(tolua_S,"sSendDelCustomTitleData",sSendDelCustomTitleData);
  tolua_constant(tolua_S,"sSendAddTimeCustomTitleData",sSendAddTimeCustomTitleData);
  tolua_constant(tolua_S,"cGetInfo",cGetInfo);
  tolua_constant(tolua_S,"cTakeOnAndOff",cTakeOnAndOff);
  tolua_constant(tolua_S,"cActivation",cActivation);
  tolua_constant(tolua_S,"cUpdateFashion",cUpdateFashion);
  tolua_constant(tolua_S,"sSendInfo",sSendInfo);
  tolua_constant(tolua_S,"sTakeOnAndOff",sTakeOnAndOff);
  tolua_constant(tolua_S,"sActivation",sActivation);
  tolua_constant(tolua_S,"sUpdateFashion",sUpdateFashion);
  tolua_constant(tolua_S,"cConsignmentSystemGetAllConsign",cConsignmentSystemGetAllConsign);
  tolua_constant(tolua_S,"cConsignmentSystemGetMyConsign",cConsignmentSystemGetMyConsign);
  tolua_constant(tolua_S,"cConsignmentSystemBuyConsign",cConsignmentSystemBuyConsign);
  tolua_constant(tolua_S,"cConsignmentSystemAddConsign",cConsignmentSystemAddConsign);
  tolua_constant(tolua_S,"cConsignmentSystemGetSellItem",cConsignmentSystemGetSellItem);
  tolua_constant(tolua_S,"cConsignmentSystemGetMoney",cConsignmentSystemGetMoney);
  tolua_constant(tolua_S,"cConsignmentSystemAward",cConsignmentSystemAward);
  tolua_constant(tolua_S,"sConsignmentSystemGetAllConsign",sConsignmentSystemGetAllConsign);
  tolua_constant(tolua_S,"sConsignmentSystemGetMyConsign",sConsignmentSystemGetMyConsign);
  tolua_constant(tolua_S,"sConsignmentSystemBuyConsign",sConsignmentSystemBuyConsign);
  tolua_constant(tolua_S,"sConsignmentSystemAddConsign",sConsignmentSystemAddConsign);
  tolua_constant(tolua_S,"sConsignmentSystemGetSellItem",sConsignmentSystemGetSellItem);
  tolua_constant(tolua_S,"sConsignmentSystemGetMoney",sConsignmentSystemGetMoney);
  tolua_constant(tolua_S,"sConsignmentSystemAward",sConsignmentSystemAward);
  tolua_constant(tolua_S,"sConsignmentSystemRedPoint",sConsignmentSystemRedPoint);
  tolua_constant(tolua_S,"cGetCombatInfo",cGetCombatInfo);
  tolua_constant(tolua_S,"cSelectCombatPayer",cSelectCombatPayer);
  tolua_constant(tolua_S,"cCombatStart",cCombatStart);
  tolua_constant(tolua_S,"cClearCooldown",cClearCooldown);
  tolua_constant(tolua_S,"cRechargeAwrad",cRechargeAwrad);
  tolua_constant(tolua_S,"cGetCombatLog",cGetCombatLog);
  tolua_constant(tolua_S,"cGetCombatRank",cGetCombatRank);
  tolua_constant(tolua_S,"cGetShopInfo",cGetShopInfo);
  tolua_constant(tolua_S,"sSendCombatInfo",sSendCombatInfo);
  tolua_constant(tolua_S,"sSendSelectResult",sSendSelectResult);
  tolua_constant(tolua_S,"sCombatResult",sCombatResult);
  tolua_constant(tolua_S,"sClearResult",sClearResult);
  tolua_constant(tolua_S,"sRechargeResult",sRechargeResult);
  tolua_constant(tolua_S,"sSendCombatLog",sSendCombatLog);
  tolua_constant(tolua_S,"sSendCombatRank",sSendCombatRank);
  tolua_constant(tolua_S,"sSendShopInfo",sSendShopInfo);
  tolua_constant(tolua_S,"neSuccess",neSuccess);
  tolua_constant(tolua_S,"enDefaultTelePort",enDefaultTelePort);
  tolua_constant(tolua_S,"enQuestTelePort",enQuestTelePort);
  tolua_constant(tolua_S,"enRecommendedUpgrade",enRecommendedUpgrade);
  tolua_constant(tolua_S,"cGetGameSetsInfo",cGetGameSetsInfo);
  tolua_constant(tolua_S,"cUpdateKeyBoards",cUpdateKeyBoards);
  tolua_constant(tolua_S,"cDiscardKeyBoards",cDiscardKeyBoards);
  tolua_constant(tolua_S,"cSetGameCheck",cSetGameCheck);
  tolua_constant(tolua_S,"cSetGameValue",cSetGameValue);
  tolua_constant(tolua_S,"cSetGameReset",cSetGameReset);
  tolua_constant(tolua_S,"cGameSetOneKeyItem",cGameSetOneKeyItem);
  tolua_constant(tolua_S,"cGetAppGameSetsInfo",cGetAppGameSetsInfo);
  tolua_constant(tolua_S,"cUpdateAppKeyBoards",cUpdateAppKeyBoards);
  tolua_constant(tolua_S,"cDiscardAppKeyBoards",cDiscardAppKeyBoards);
  tolua_constant(tolua_S,"sSendGameKeyBoardnfo",sSendGameKeyBoardnfo);
  tolua_constant(tolua_S,"sSendKeyBoardsInfo",sSendKeyBoardsInfo);
  tolua_constant(tolua_S,"sSendGameSetInfo",sSendGameSetInfo);
  tolua_constant(tolua_S,"sSendOneGameSetInfo",sSendOneGameSetInfo);
  tolua_constant(tolua_S,"sSendAppGameKeyBoardsInfo",sSendAppGameKeyBoardsInfo);
  tolua_constant(tolua_S,"sSendAppKeyBoardsInfo",sSendAppKeyBoardsInfo);
  tolua_constant(tolua_S,"enStaticCountSystemcExchangeCount",enStaticCountSystemcExchangeCount);
  tolua_constant(tolua_S,"enStaticCountSystemcUpCircle",enStaticCountSystemcUpCircle);
  tolua_constant(tolua_S,"enStaticCountSystemcExchangeSoul",enStaticCountSystemcExchangeSoul);
  tolua_constant(tolua_S,"enStaticCountSystemcMeridiansUPLv",enStaticCountSystemcMeridiansUPLv);
  tolua_constant(tolua_S,"enStaticCountSystemExchangeCount",enStaticCountSystemExchangeCount);
  tolua_constant(tolua_S,"enStaticCountSystemsUpCircle",enStaticCountSystemsUpCircle);
  tolua_constant(tolua_S,"enStaticCountSystemsExchangeSoul",enStaticCountSystemsExchangeSoul);
  tolua_constant(tolua_S,"enStaticCountSystemsMeridiansUPLv",enStaticCountSystemsMeridiansUPLv);
  tolua_constant(tolua_S,"encompostItem",encompostItem);
  tolua_constant(tolua_S,"enForgeItem",enForgeItem);
  tolua_constant(tolua_S,"enForgeItemId",enForgeItemId);
  tolua_constant(tolua_S,"enRefining",enRefining);
  tolua_constant(tolua_S,"enRefiningReplace",enRefiningReplace);
  tolua_constant(tolua_S,"enYBRecover",enYBRecover);
  tolua_constant(tolua_S,"enYBRecoverInfo",enYBRecoverInfo);
  tolua_constant(tolua_S,"enItemUpStar",enItemUpStar);
  tolua_constant(tolua_S,"enCompostResult",enCompostResult);
  tolua_constant(tolua_S,"enForgeResult",enForgeResult);
  tolua_constant(tolua_S,"enForgeItemIdResult",enForgeItemIdResult);
  tolua_constant(tolua_S,"enRefiningResult",enRefiningResult);
  tolua_constant(tolua_S,"enRefiningReplaceResult",enRefiningReplaceResult);
  tolua_constant(tolua_S,"enYBRecoverResult",enYBRecoverResult);
  tolua_constant(tolua_S,"enYBRecoverInfoResult",enYBRecoverInfoResult);
  tolua_constant(tolua_S,"enItemUpStarResult",enItemUpStarResult);
  tolua_constant(tolua_S,"encBless",encBless);
  tolua_constant(tolua_S,"ensBless",ensBless);
  tolua_constant(tolua_S,"cGetStrengthenSystemInfo",cGetStrengthenSystemInfo);
  tolua_constant(tolua_S,"cUpStrengthenSystemInfo",cUpStrengthenSystemInfo);
  tolua_constant(tolua_S,"sGetStrengthenSystemInfo",sGetStrengthenSystemInfo);
  tolua_constant(tolua_S,"sUpStrengthenSystemInfo",sUpStrengthenSystemInfo);
  tolua_constant(tolua_S,"cGetHallowshenSystemInfo",cGetHallowshenSystemInfo);
  tolua_constant(tolua_S,"cUpHallowshenSystemInfo",cUpHallowshenSystemInfo);
  tolua_constant(tolua_S,"cRefiningHallowsSystemInfo",cRefiningHallowsSystemInfo);
  tolua_constant(tolua_S,"cRefiningReplaceHallowsSystemInfo",cRefiningReplaceHallowsSystemInfo);
  tolua_constant(tolua_S,"sGetHallowshenSystemInfo",sGetHallowshenSystemInfo);
  tolua_constant(tolua_S,"sUpHallowshenSystemInfo",sUpHallowshenSystemInfo);
  tolua_constant(tolua_S,"sRefiningHallowsSystemInfo",sRefiningHallowsSystemInfo);
  tolua_constant(tolua_S,"sRefiningReplaceHallowsSystemInfo",sRefiningReplaceHallowsSystemInfo);
  tolua_constant(tolua_S,"cGetGHostInfos",cGetGHostInfos);
  tolua_constant(tolua_S,"cUpGhostLv",cUpGhostLv);
  tolua_constant(tolua_S,"sGetGHostInfos",sGetGHostInfos);
  tolua_constant(tolua_S,"sUpGhostLv",sUpGhostLv);
  tolua_constant(tolua_S,"cGet4366Infos",cGet4366Infos);
  tolua_constant(tolua_S,"cGet4366LoginAward",cGet4366LoginAward);
  tolua_constant(tolua_S,"cGet4366PhoneAward",cGet4366PhoneAward);
  tolua_constant(tolua_S,"cGet4366IdCardAward",cGet4366IdCardAward);
  tolua_constant(tolua_S,"c4366LoginType",c4366LoginType);
  tolua_constant(tolua_S,"c4366LoginTypeGift",c4366LoginTypeGift);
  tolua_constant(tolua_S,"cGetQQHallInfos",cGetQQHallInfos);
  tolua_constant(tolua_S,"cGetQQHallRegisteAward",cGetQQHallRegisteAward);
  tolua_constant(tolua_S,"cGetQQqHallLevelAward",cGetQQqHallLevelAward);
  tolua_constant(tolua_S,"cGetQQqHallActiveAward",cGetQQqHallActiveAward);
  tolua_constant(tolua_S,"cReq360UserPrivilegeGift",cReq360UserPrivilegeGift);
  tolua_constant(tolua_S,"cMasterLuLogin",cMasterLuLogin);
  tolua_constant(tolua_S,"cReqMasterLuAward",cReqMasterLuAward);
  tolua_constant(tolua_S,"cReq360Gift",cReq360Gift);
  tolua_constant(tolua_S,"c37Logon",c37Logon);
  tolua_constant(tolua_S,"cUse37DownloadBox",cUse37DownloadBox);
  tolua_constant(tolua_S,"cUse37GiftFCM",cUse37GiftFCM);
  tolua_constant(tolua_S,"cUse37GiftPhone",cUse37GiftPhone);
  tolua_constant(tolua_S,"cUse37GiftDaily",cUse37GiftDaily);
  tolua_constant(tolua_S,"cUse37LevelDaily",cUse37LevelDaily);
  tolua_constant(tolua_S,"cSogouLogon",cSogouLogon);
  tolua_constant(tolua_S,"cSogouGiftSkin",cSogouGiftSkin);
  tolua_constant(tolua_S,"cSogouGiftRookie",cSogouGiftRookie);
  tolua_constant(tolua_S,"cSogouGiftLogin",cSogouGiftLogin);
  tolua_constant(tolua_S,"cSogouGiftLevel",cSogouGiftLevel);
  tolua_constant(tolua_S,"cSogouGiftPhone",cSogouGiftPhone);
  tolua_constant(tolua_S,"cReqku25Login",cReqku25Login);
  tolua_constant(tolua_S,"cReqku25Gift",cReqku25Gift);
  tolua_constant(tolua_S,"cReqQiDianLogin",cReqQiDianLogin);
  tolua_constant(tolua_S,"cReqQiDianGift",cReqQiDianGift);
  tolua_constant(tolua_S,"cReqAiQiYiLogin",cReqAiQiYiLogin);
  tolua_constant(tolua_S,"cReqAiQiYiGift",cReqAiQiYiGift);
  tolua_constant(tolua_S,"cReqYaoDouLogin",cReqYaoDouLogin);
  tolua_constant(tolua_S,"cReqYaoDouGift",cReqYaoDouGift);
  tolua_constant(tolua_S,"cReqTanWanLogin",cReqTanWanLogin);
  tolua_constant(tolua_S,"cReqTanWanGift",cReqTanWanGift);
  tolua_constant(tolua_S,"cReqGame2Login",cReqGame2Login);
  tolua_constant(tolua_S,"cReqGame2Gift",cReqGame2Gift);
  tolua_constant(tolua_S,"cReq2144Login",cReq2144Login);
  tolua_constant(tolua_S,"cReq2144Gift",cReq2144Gift);
  tolua_constant(tolua_S,"cReqKuaiWanLogin",cReqKuaiWanLogin);
  tolua_constant(tolua_S,"cReqKuaiWanGift",cReqKuaiWanGift);
  tolua_constant(tolua_S,"cReqSWLogin",cReqSWLogin);
  tolua_constant(tolua_S,"cReqSWGift",cReqSWGift);
  tolua_constant(tolua_S,"cReqXunWanLogin",cReqXunWanLogin);
  tolua_constant(tolua_S,"cReqXunWanGift",cReqXunWanGift);
  tolua_constant(tolua_S,"sGet4366Infos",sGet4366Infos);
  tolua_constant(tolua_S,"sGetQQhallInfos",sGetQQhallInfos);
  tolua_constant(tolua_S,"sSend360UserPrivilegeData",sSend360UserPrivilegeData);
  tolua_constant(tolua_S,"sSend7GameGitfData",sSend7GameGitfData);
  tolua_constant(tolua_S,"sSendMasterLuGitfData",sSendMasterLuGitfData);
  tolua_constant(tolua_S,"sSend37GameGitfData",sSend37GameGitfData);
  tolua_constant(tolua_S,"sUse37DownloadBox",sUse37DownloadBox);
  tolua_constant(tolua_S,"sUse37GiftFCM",sUse37GiftFCM);
  tolua_constant(tolua_S,"sUse37GiftPhone",sUse37GiftPhone);
  tolua_constant(tolua_S,"sUse37GiftDaily",sUse37GiftDaily);
  tolua_constant(tolua_S,"sUse37LevelDaily",sUse37LevelDaily);
  tolua_constant(tolua_S,"sSogouLogonData",sSogouLogonData);
  tolua_constant(tolua_S,"sSogouGiftSkin",sSogouGiftSkin);
  tolua_constant(tolua_S,"sSogouGiftRookie",sSogouGiftRookie);
  tolua_constant(tolua_S,"sSogouGiftLogin",sSogouGiftLogin);
  tolua_constant(tolua_S,"sSogouGiftLevel",sSogouGiftLevel);
  tolua_constant(tolua_S,"sSogouGiftPhone",sSogouGiftPhone);
  tolua_constant(tolua_S,"sSendku25UserData",sSendku25UserData);
  tolua_constant(tolua_S,"sSendQiDianUserData",sSendQiDianUserData);
  tolua_constant(tolua_S,"sSendAiQiYiUserData",sSendAiQiYiUserData);
  tolua_constant(tolua_S,"sSendYaoDouUserData",sSendYaoDouUserData);
  tolua_constant(tolua_S,"cSendTanWanGift",cSendTanWanGift);
  tolua_constant(tolua_S,"cSendTaGame2Gift",cSendTaGame2Gift);
  tolua_constant(tolua_S,"cSend2144UserData",cSend2144UserData);
  tolua_constant(tolua_S,"cSendKuaiWanUserData",cSendKuaiWanUserData);
  tolua_constant(tolua_S,"cSendSWUserData",cSendSWUserData);
  tolua_constant(tolua_S,"cSendXunWanUserData",cSendXunWanUserData);
  tolua_constant(tolua_S,"cReqInit",cReqInit);
  tolua_constant(tolua_S,"cReqLogin",cReqLogin);
  tolua_constant(tolua_S,"sReqInit",sReqInit);
  tolua_constant(tolua_S,"sReqLogin",sReqLogin);
  tolua_constant(tolua_S,"cClientGetAllLootPets",cClientGetAllLootPets);
  tolua_constant(tolua_S,"cClientEquiptLootPet",cClientEquiptLootPet);
  tolua_constant(tolua_S,"sClientGetAllLootPets",sClientGetAllLootPets);
  tolua_constant(tolua_S,"sClientAddLootPet",sClientAddLootPet);
  tolua_constant(tolua_S,"sSendDelLootPetData",sSendDelLootPetData);
  tolua_constant(tolua_S,"sSendAddLootPetTimeData",sSendAddLootPetTimeData);
  tolua_constant(tolua_S,"ActivityType_Normal",ActivityType_Normal);
  tolua_constant(tolua_S,"CommonActivity_MAX",CommonActivity_MAX);
  tolua_module(tolua_S,"Hero",0);
  tolua_beginmodule(tolua_S,"Hero");
   tolua_function(tolua_S,"addHero",tolua_server_Hero_addHero00);
   tolua_function(tolua_S,"canAddHero",tolua_server_Hero_canAddHero00);
   tolua_function(tolua_S,"StageUp",tolua_server_Hero_StageUp00);
   tolua_function(tolua_S,"getHeroProperty",tolua_server_Hero_getHeroProperty00);
   tolua_function(tolua_S,"setHeroProperty",tolua_server_Hero_setHeroProperty00);
   tolua_function(tolua_S,"learnSkill",tolua_server_Hero_learnSkill00);
   tolua_function(tolua_S,"skillLevelUp",tolua_server_Hero_skillLevelUp00);
   tolua_function(tolua_S,"getSkillLevel",tolua_server_Hero_getSkillLevel00);
   tolua_function(tolua_S,"getBattleHeroId",tolua_server_Hero_getBattleHeroId00);
   tolua_function(tolua_S,"sendHeroOpResult",tolua_server_Hero_sendHeroOpResult00);
   tolua_function(tolua_S,"setHeroBattle",tolua_server_Hero_setHeroBattle00);
   tolua_function(tolua_S,"getHeroName",tolua_server_Hero_getHeroName00);
   tolua_function(tolua_S,"getHeroCount",tolua_server_Hero_getHeroCount00);
   tolua_function(tolua_S,"addExp",tolua_server_Hero_addExp00);
   tolua_function(tolua_S,"addExpByHeroId",tolua_server_Hero_addExpByHeroId00);
   tolua_function(tolua_S,"CallBackHero",tolua_server_Hero_CallBackHero00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"tmNoError",tmNoError);
  tolua_constant(tolua_S,"tmNoMoreCoin",tmNoMoreCoin);
  tolua_constant(tolua_S,"tmNomoreYubao",tmNomoreYubao);
  tolua_constant(tolua_S,"tmMpLimited",tmMpLimited);
  tolua_constant(tolua_S,"tmLevelLimited",tmLevelLimited);
  tolua_constant(tolua_S,"tmExpLimited",tmExpLimited);
  tolua_constant(tolua_S,"tmCommonCDLimited",tmCommonCDLimited);
  tolua_constant(tolua_S,"tmDistanceLimited",tmDistanceLimited);
  tolua_constant(tolua_S,"tmGetGold",tmGetGold);
  tolua_constant(tolua_S,"tmGetYB",tmGetYB);
  tolua_constant(tolua_S,"tmGetBindYB",tmGetBindYB);
  tolua_constant(tolua_S,"tmLostGold",tmLostGold);
  tolua_constant(tolua_S,"tmLostYB",tmLostYB);
  tolua_constant(tolua_S,"tmLostBindYB",tmLostBindYB);
  tolua_constant(tolua_S,"tmGetExp",tmGetExp);
  tolua_constant(tolua_S,"tmTarCantAttack",tmTarCantAttack);
  tolua_constant(tolua_S,"tmInSkillCD",tmInSkillCD);
  tolua_constant(tolua_S,"tmLvlCantLearnSkill",tmLvlCantLearnSkill);
  tolua_constant(tolua_S,"tmVocCantLearnSkill",tmVocCantLearnSkill);
  tolua_constant(tolua_S,"tmCirCantLearnSkill",tmCirCantLearnSkill);
  tolua_constant(tolua_S,"tmItemCantLearnSkill",tmItemCantLearnSkill);
  tolua_constant(tolua_S,"tmSuccLearnSkill",tmSuccLearnSkill);
  tolua_constant(tolua_S,"tmSuccUpgrSkill",tmSuccUpgrSkill);
  tolua_constant(tolua_S,"tmOpenSkill_3",tmOpenSkill_3);
  tolua_constant(tolua_S,"tmCloseSkill_3",tmCloseSkill_3);
  tolua_constant(tolua_S,"tmOpenSkill_4",tmOpenSkill_4);
  tolua_constant(tolua_S,"tmCloseSkill_4",tmCloseSkill_4);
  tolua_constant(tolua_S,"tmPrepSkill_6",tmPrepSkill_6);
  tolua_constant(tolua_S,"tmPrepSkill_8",tmPrepSkill_8);
  tolua_constant(tolua_S,"tmToxicosis",tmToxicosis);
  tolua_constant(tolua_S,"tmDefenceUPAtTime",tmDefenceUPAtTime);
  tolua_constant(tolua_S,"tmDefenceRevert",tmDefenceRevert);
  tolua_constant(tolua_S,"tmchatLevelLimit",tmchatLevelLimit);
  tolua_constant(tolua_S,"tmchatCDLimit",tmchatCDLimit);
  tolua_constant(tolua_S,"tmchaToLength",tmchaToLength);
  tolua_constant(tolua_S,"tmchatillegal",tmchatillegal);
  tolua_constant(tolua_S,"tmBoratNotEnough",tmBoratNotEnough);
  tolua_constant(tolua_S,"tmBoratNotEnough_2",tmBoratNotEnough_2);
  tolua_constant(tolua_S,"tmBoratNotEnough_3",tmBoratNotEnough_3);
  tolua_constant(tolua_S,"tmBoratNotEnough_4",tmBoratNotEnough_4);
  tolua_constant(tolua_S,"tmBoratNotEnough_5",tmBoratNotEnough_5);
  tolua_constant(tolua_S,"tmchatIsBan",tmchatIsBan);
  tolua_constant(tolua_S,"tmflyshoesNotEnough",tmflyshoesNotEnough);
  tolua_constant(tolua_S,"tmChatDisabledInArea",tmChatDisabledInArea);
  tolua_constant(tolua_S,"tmpChatTargetOffLine",tmpChatTargetOffLine);
  tolua_constant(tolua_S,"tmAddFriendLevel",tmAddFriendLevel);
  tolua_constant(tolua_S,"tmFriendMaxCount",tmFriendMaxCount);
  tolua_constant(tolua_S,"tmTagetFriendToMax",tmTagetFriendToMax);
  tolua_constant(tolua_S,"tmHaveBeYourFriend",tmHaveBeYourFriend);
  tolua_constant(tolua_S,"tmAddEnamySuccess",tmAddEnamySuccess);
  tolua_constant(tolua_S,"tmAddFriendNotice",tmAddFriendNotice);
  tolua_constant(tolua_S,"tmItemCanNotDelete",tmItemCanNotDelete);
  tolua_constant(tolua_S,"tmFailForDealing",tmFailForDealing);
  tolua_constant(tolua_S,"tmDropMonsterBroad",tmDropMonsterBroad);
  tolua_constant(tolua_S,"tmTargetOffLine",tmTargetOffLine);
  tolua_constant(tolua_S,"tmTeamLevelLimited",tmTeamLevelLimited);
  tolua_constant(tolua_S,"tmOtherTeamLevelLimited",tmOtherTeamLevelLimited);
  tolua_constant(tolua_S,"tmTeamOpOfflineUser",tmTeamOpOfflineUser);
  tolua_constant(tolua_S,"tmTeamIsFull",tmTeamIsFull);
  tolua_constant(tolua_S,"tmTeamIsInTeam",tmTeamIsInTeam);
  tolua_constant(tolua_S,"tmTeamCreated",tmTeamCreated);
  tolua_constant(tolua_S,"tmTeamJoinTeam",tmTeamJoinTeam);
  tolua_constant(tolua_S,"tmTeamApplyOfflineUser",tmTeamApplyOfflineUser);
  tolua_constant(tolua_S,"tmTeamApplyNotTeamUser",tmTeamApplyNotTeamUser);
  tolua_constant(tolua_S,"tmTeamNeedCaptin",tmTeamNeedCaptin);
  tolua_constant(tolua_S,"tmTeamNotInTeam",tmTeamNotInTeam);
  tolua_constant(tolua_S,"tmTeamOfflineUserCannotCaptin",tmTeamOfflineUserCannotCaptin);
  tolua_constant(tolua_S,"tmTeamRefuseApply",tmTeamRefuseApply);
  tolua_constant(tolua_S,"tmTeamSelfIsInTeam",tmTeamSelfIsInTeam);
  tolua_constant(tolua_S,"tmTeamChatFail",tmTeamChatFail);
  tolua_constant(tolua_S,"tmSetNewCaptin",tmSetNewCaptin);
  tolua_constant(tolua_S,"tmOtherRefuseJoinTeam",tmOtherRefuseJoinTeam);
  tolua_constant(tolua_S,"tmCanNotOPOnSelf",tmCanNotOPOnSelf);
  tolua_constant(tolua_S,"tmNoTeam",tmNoTeam);
  tolua_constant(tolua_S,"tmInviteOtherInFuben",tmInviteOtherInFuben);
  tolua_constant(tolua_S,"tmTeamInFubenCanNotAddMember",tmTeamInFubenCanNotAddMember);
  tolua_constant(tolua_S,"tmInFubenCanNotJoinTeam",tmInFubenCanNotJoinTeam);
  tolua_constant(tolua_S,"tmInChallengeCannotChangeCaptin",tmInChallengeCannotChangeCaptin);
  tolua_constant(tolua_S,"tmInChallengeCannotDelMember",tmInChallengeCannotDelMember);
  tolua_constant(tolua_S,"tmInChallengeCannotLeft",tmInChallengeCannotLeft);
  tolua_constant(tolua_S,"tmInChallengeCannotJoin",tmInChallengeCannotJoin);
  tolua_constant(tolua_S,"tmInFuben",tmInFuben);
  tolua_constant(tolua_S,"tmNotTeamFubenCaptain",tmNotTeamFubenCaptain);
  tolua_constant(tolua_S,"tmHasCreateFubenTeam",tmHasCreateFubenTeam);
  tolua_constant(tolua_S,"tmInputIsForbid",tmInputIsForbid);
  tolua_constant(tolua_S,"tmSelfAddTeam",tmSelfAddTeam);
  tolua_constant(tolua_S,"tmAddTeamMember",tmAddTeamMember);
  tolua_constant(tolua_S,"tmSelfLeavTeam",tmSelfLeavTeam);
  tolua_constant(tolua_S,"tmDelTeamMember",tmDelTeamMember);
  tolua_constant(tolua_S,"tmHasFubenTeam",tmHasFubenTeam);
  tolua_constant(tolua_S,"tmCoinNotEnough",tmCoinNotEnough);
  tolua_constant(tolua_S,"tmItemNotExist",tmItemNotExist);
  tolua_constant(tolua_S,"tmCircleMaxLevelLimit",tmCircleMaxLevelLimit);
  tolua_constant(tolua_S,"tmCircleOpenServerDayLimit",tmCircleOpenServerDayLimit);
  tolua_constant(tolua_S,"tmCircleLevelLimit",tmCircleLevelLimit);
  tolua_constant(tolua_S,"tmCircleLastNumLimit",tmCircleLastNumLimit);
  tolua_constant(tolua_S,"tmCircleSoulNotEnough",tmCircleSoulNotEnough);
  tolua_constant(tolua_S,"tmDataError",tmDataError);
  tolua_constant(tolua_S,"tmCircleLimtiTimes",tmCircleLimtiTimes);
  tolua_constant(tolua_S,"tmItemNotEnough",tmItemNotEnough);
  tolua_constant(tolua_S,"tmItemCanNotUse",tmItemCanNotUse);
  tolua_constant(tolua_S,"tmItemInCd",tmItemInCd);
  tolua_constant(tolua_S,"tmItemUseSuccess",tmItemUseSuccess);
  tolua_constant(tolua_S,"tmItemCanNotUseNow",tmItemCanNotUseNow);
  tolua_constant(tolua_S,"tmAddInegral",tmAddInegral);
  tolua_constant(tolua_S,"tmPointNotEnough",tmPointNotEnough);
  tolua_constant(tolua_S,"tmOperSucc",tmOperSucc);
  tolua_constant(tolua_S,"tmApplyLimiltLevel",tmApplyLimiltLevel);
  tolua_constant(tolua_S,"tmGetGuildGx",tmGetGuildGx);
  tolua_constant(tolua_S,"tmDelGuildGx",tmDelGuildGx);
  tolua_constant(tolua_S,"tmInGuildDart",tmInGuildDart);
  tolua_constant(tolua_S,"tmGuildInfuben",tmGuildInfuben);
  tolua_constant(tolua_S,"tmMeInFuben",tmMeInFuben);
  tolua_constant(tolua_S,"tmNoDelGuildInfuben",tmNoDelGuildInfuben);
  tolua_constant(tolua_S,"tmCreateGuildErrorLevel",tmCreateGuildErrorLevel);
  tolua_constant(tolua_S,"tmCreateGuildHasInGuild",tmCreateGuildHasInGuild);
  tolua_constant(tolua_S,"tmLeftGuildCanNotJoin",tmLeftGuildCanNotJoin);
  tolua_constant(tolua_S,"tmNoRight",tmNoRight);
  tolua_constant(tolua_S,"tmCreateGuildSucc",tmCreateGuildSucc);
  tolua_constant(tolua_S,"tmCreateGuildNameErr",tmCreateGuildNameErr);
  tolua_constant(tolua_S,"tmCreateGuildNameInUse",tmCreateGuildNameInUse);
  tolua_constant(tolua_S,"tmCreateGuildInterErr",tmCreateGuildInterErr);
  tolua_constant(tolua_S,"tmJoinApplyHasInGuild",tmJoinApplyHasInGuild);
  tolua_constant(tolua_S,"tmNoThisGuild",tmNoThisGuild);
  tolua_constant(tolua_S,"tmNotInGuild",tmNotInGuild);
  tolua_constant(tolua_S,"tmChangeLeaderSucc",tmChangeLeaderSucc);
  tolua_constant(tolua_S,"tmGuildPosLimit",tmGuildPosLimit);
  tolua_constant(tolua_S,"tmMaxMemberCount",tmMaxMemberCount);
  tolua_constant(tolua_S,"tmUpdateMemoSucc",tmUpdateMemoSucc);
  tolua_constant(tolua_S,"tmApplySubmit",tmApplySubmit);
  tolua_constant(tolua_S,"tmLeaderCanNotLeft",tmLeaderCanNotLeft);
  tolua_constant(tolua_S,"tmInSbkWar",tmInSbkWar);
  tolua_constant(tolua_S,"tmGuildObjHasBeenPos",tmGuildObjHasBeenPos);
  tolua_constant(tolua_S,"tmGuildCoinLimit",tmGuildCoinLimit);
  tolua_constant(tolua_S,"tmGuildBuildLvLimit",tmGuildBuildLvLimit);
  tolua_constant(tolua_S,"tmGuildMainBuildLvLimit",tmGuildMainBuildLvLimit);
  tolua_constant(tolua_S,"tmActorInGuild",tmActorInGuild);
  tolua_constant(tolua_S,"tmTeamApplySuccess",tmTeamApplySuccess);
  tolua_constant(tolua_S,"tmLeftGuild",tmLeftGuild);
  tolua_constant(tolua_S,"tmGuildFlftAndClearGx",tmGuildFlftAndClearGx);
  tolua_constant(tolua_S,"tmGuildEventCreate",tmGuildEventCreate);
  tolua_constant(tolua_S,"tmGuildEventMemberJoin",tmGuildEventMemberJoin);
  tolua_constant(tolua_S,"tmGuildEventMemberLeft",tmGuildEventMemberLeft);
  tolua_constant(tolua_S,"tmGuildEventTickMember",tmGuildEventTickMember);
  tolua_constant(tolua_S,"tmGuildEventLeaderChange",tmGuildEventLeaderChange);
  tolua_constant(tolua_S,"tmGuildEventAddOfficer",tmGuildEventAddOfficer);
  tolua_constant(tolua_S,"tmGuildEventDelOfficer",tmGuildEventDelOfficer);
  tolua_constant(tolua_S,"tmGuildEventlevelUp",tmGuildEventlevelUp);
  tolua_constant(tolua_S,"tmGuildEventImpeach",tmGuildEventImpeach);
  tolua_constant(tolua_S,"tmGuildJoinApplyAlready",tmGuildJoinApplyAlready);
  tolua_constant(tolua_S,"tmNearAttackSkillName",tmNearAttackSkillName);
  tolua_constant(tolua_S,"tmSkillKillEntity",tmSkillKillEntity);
  tolua_constant(tolua_S,"tmBeSkilled",tmBeSkilled);
  tolua_constant(tolua_S,"tmBeSkilledByOther",tmBeSkilledByOther);
  tolua_constant(tolua_S,"tmAgreeJoin",tmAgreeJoin);
  tolua_constant(tolua_S,"tmNotPeaceful",tmNotPeaceful);
  tolua_constant(tolua_S,"tmDeclareWarNotice",tmDeclareWarNotice);
  tolua_constant(tolua_S,"tmDeclareSucc",tmDeclareSucc);
  tolua_constant(tolua_S,"tmOnWarNotice",tmOnWarNotice);
  tolua_constant(tolua_S,"tmNoMoreGuildCoin",tmNoMoreGuildCoin);
  tolua_constant(tolua_S,"tmIsUnionDecare",tmIsUnionDecare);
  tolua_constant(tolua_S,"tmBeLeader",tmBeLeader);
  tolua_constant(tolua_S,"tmGuildImpeachObjOnline",tmGuildImpeachObjOnline);
  tolua_constant(tolua_S,"tmGuildImpeachSelf",tmGuildImpeachSelf);
  tolua_constant(tolua_S,"tmGuildImpeachMemberPosErr",tmGuildImpeachMemberPosErr);
  tolua_constant(tolua_S,"tmGuildImpeachEvent",tmGuildImpeachEvent);
  tolua_constant(tolua_S,"tmGuildInProtectDay",tmGuildInProtectDay);
  tolua_constant(tolua_S,"tmGuildEventStart",tmGuildEventStart);
  tolua_constant(tolua_S,"tmAddToGuildEvent",tmAddToGuildEvent);
  tolua_constant(tolua_S,"tmLeftGuildEvent",tmLeftGuildEvent);
  tolua_constant(tolua_S,"tmUpGuildPosEvent",tmUpGuildPosEvent);
  tolua_constant(tolua_S,"tmDownGuildPosEvent",tmDownGuildPosEvent);
  tolua_constant(tolua_S,"tmGuildHead",tmGuildHead);
  tolua_constant(tolua_S,"tmGuildAssistLeader",tmGuildAssistLeader);
  tolua_constant(tolua_S,"tmGuildTangZhu",tmGuildTangZhu);
  tolua_constant(tolua_S,"tmGuildElite",tmGuildElite);
  tolua_constant(tolua_S,"tmGuildMember",tmGuildMember);
  tolua_constant(tolua_S,"tmChangeGuildLeaderEvent",tmChangeGuildLeaderEvent);
  tolua_constant(tolua_S,"tmDeleteMemEvent",tmDeleteMemEvent);
  tolua_constant(tolua_S,"tmCreateGuildEvent",tmCreateGuildEvent);
  tolua_constant(tolua_S,"tmGuildEventCoin",tmGuildEventCoin);
  tolua_constant(tolua_S,"tmDisableOperator",tmDisableOperator);
  tolua_constant(tolua_S,"tmKilledByActor",tmKilledByActor);
  tolua_constant(tolua_S,"tmGuildBeKillTips",tmGuildBeKillTips);
  tolua_constant(tolua_S,"tmGuildSecLeaderBeKilledTips",tmGuildSecLeaderBeKilledTips);
  tolua_constant(tolua_S,"tmSbkGuildLeaderBeKilledtips",tmSbkGuildLeaderBeKilledtips);
  tolua_constant(tolua_S,"tmBagIsFull",tmBagIsFull);
  tolua_constant(tolua_S,"tmLeftBagNumNotEnough",tmLeftBagNumNotEnough);
  tolua_constant(tolua_S,"tmCircleNotEnough",tmCircleNotEnough);
  tolua_constant(tolua_S,"tmApplyFriendSuccess",tmApplyFriendSuccess);
  tolua_constant(tolua_S,"tmComPoseLimit",tmComPoseLimit);
  tolua_constant(tolua_S,"tmGuildDonateLimitTimes",tmGuildDonateLimitTimes);
  tolua_constant(tolua_S,"tmActorForgeItem",tmActorForgeItem);
  tolua_constant(tolua_S,"tmPKMod_1",tmPKMod_1);
  tolua_constant(tolua_S,"tmPKMod_2",tmPKMod_2);
  tolua_constant(tolua_S,"tmPKMod_3",tmPKMod_3);
  tolua_constant(tolua_S,"tmPKMod_4",tmPKMod_4);
  tolua_constant(tolua_S,"tmPKMod_5",tmPKMod_5);
  tolua_constant(tolua_S,"tmPKMod_6",tmPKMod_6);
  tolua_constant(tolua_S,"tmConsiFull",tmConsiFull);
  tolua_constant(tolua_S,"tmConsignLevelLimit",tmConsignLevelLimit);
  tolua_constant(tolua_S,"tmConsignHaveNotItem",tmConsignHaveNotItem);
  tolua_constant(tolua_S,"tmConsignItemNotCount",tmConsignItemNotCount);
  tolua_constant(tolua_S,"tmConsiItemBinded",tmConsiItemBinded);
  tolua_constant(tolua_S,"tmConsiItemCantSell",tmConsiItemCantSell);
  tolua_constant(tolua_S,"tmConsiItemPriveInvalid",tmConsiItemPriveInvalid);
  tolua_constant(tolua_S,"tmConsignItemNotItem",tmConsignItemNotItem);
  tolua_constant(tolua_S,"tmConsignBuyPriceError",tmConsignBuyPriceError);
  tolua_constant(tolua_S,"tmConsignCantGetNotYou",tmConsignCantGetNotYou);
  tolua_constant(tolua_S,"tmConsiBagFullCannotOp",tmConsiBagFullCannotOp);
  tolua_constant(tolua_S,"tmConsignItemOffShelf",tmConsignItemOffShelf);
  tolua_constant(tolua_S,"tmConsignItemActorBuy",tmConsignItemActorBuy);
  tolua_constant(tolua_S,"tmConsiNoYuanbaoToBuy",tmConsiNoYuanbaoToBuy);
  tolua_constant(tolua_S,"tmConsignBuyItemCountexceed",tmConsignBuyItemCountexceed);
  tolua_constant(tolua_S,"tmConsiBuySuccAddToBag",tmConsiBuySuccAddToBag);
  tolua_constant(tolua_S,"tmConsignAddIncomeMailTitle",tmConsignAddIncomeMailTitle);
  tolua_constant(tolua_S,"tmConsignAddIncomeMailContent",tmConsignAddIncomeMailContent);
  tolua_constant(tolua_S,"tmConsignSearchNothing",tmConsignSearchNothing);
  tolua_constant(tolua_S,"tmConsignCantBuyMySelf",tmConsignCantBuyMySelf);
  tolua_constant(tolua_S,"tmConsignItemOnSell",tmConsignItemOnSell);
  tolua_constant(tolua_S,"tmNoSafeAreaNoGet",tmNoSafeAreaNoGet);
  tolua_constant(tolua_S,"tmMailForceIsFull",tmMailForceIsFull);
  tolua_constant(tolua_S,"tmMailError",tmMailError);
  tolua_constant(tolua_S,"tmDelMailSuccess",tmDelMailSuccess);
  tolua_constant(tolua_S,"tmNoSafeAreaGetMail",tmNoSafeAreaGetMail);
  tolua_constant(tolua_S,"tmMailHasItem",tmMailHasItem);
  tolua_constant(tolua_S,"tmMailGetItemSuccess",tmMailGetItemSuccess);
  tolua_constant(tolua_S,"tmNoMoreBindCoin",tmNoMoreBindCoin);
  tolua_constant(tolua_S,"tmNomoreBindYubao",tmNomoreBindYubao);
  tolua_constant(tolua_S,"tmYouAreDealingNow",tmYouAreDealingNow);
  tolua_constant(tolua_S,"tmDealTargetNotExists",tmDealTargetNotExists);
  tolua_constant(tolua_S,"tmTargetIsDealing",tmTargetIsDealing);
  tolua_constant(tolua_S,"tmAlreadyInvaiteDeal",tmAlreadyInvaiteDeal);
  tolua_constant(tolua_S,"tmTargetDoNotDealWithYou",tmTargetDoNotDealWithYou);
  tolua_constant(tolua_S,"tmDealRequesterHasLeaved",tmDealRequesterHasLeaved);
  tolua_constant(tolua_S,"tmDealBlankWasFull",tmDealBlankWasFull);
  tolua_constant(tolua_S,"tmYouMustLockDealFirst",tmYouMustLockDealFirst);
  tolua_constant(tolua_S,"tmDealCanceledOfMyBagWasFull",tmDealCanceledOfMyBagWasFull);
  tolua_constant(tolua_S,"tmDealcanceldOfTargetBagWasFull",tmDealcanceldOfTargetBagWasFull);
  tolua_constant(tolua_S,"tmDealDataValidateFailure",tmDealDataValidateFailure);
  tolua_constant(tolua_S,"tmDealTargetConfimed",tmDealTargetConfimed);
  tolua_constant(tolua_S,"tmTargetHasLockedDeal",tmTargetHasLockedDeal);
  tolua_constant(tolua_S,"tmYouMayClickDealBtnNow",tmYouMayClickDealBtnNow);
  tolua_constant(tolua_S,"tmWaitTargetLockDeal",tmWaitTargetLockDeal);
  tolua_constant(tolua_S,"tmItemNoDeal",tmItemNoDeal);
  tolua_constant(tolua_S,"tmDealTargetTooFar",tmDealTargetTooFar);
  tolua_constant(tolua_S,"tmDealHasLocked",tmDealHasLocked);
  tolua_constant(tolua_S,"tmTargetMoneyIsFull",tmTargetMoneyIsFull);
  tolua_constant(tolua_S,"tmSelfMoneryIsFull",tmSelfMoneryIsFull);
  tolua_constant(tolua_S,"tmAreaCannotTrade",tmAreaCannotTrade);
  tolua_constant(tolua_S,"tmDealTargetLevelLimit",tmDealTargetLevelLimit);
  tolua_constant(tolua_S,"tmDealApplyCdLimit",tmDealApplyCdLimit);
  tolua_constant(tolua_S,"tmDealSelfLevelLimit",tmDealSelfLevelLimit);
  tolua_constant(tolua_S,"tmGuildDonateNotEnough",tmGuildDonateNotEnough);
  tolua_constant(tolua_S,"tmMailFullCantAdd",tmMailFullCantAdd);
  tolua_constant(tolua_S,"tmMailItemGetReady",tmMailItemGetReady);
  tolua_constant(tolua_S,"tmFlyShoesError",tmFlyShoesError);
  tolua_constant(tolua_S,"tmLevelExceednoenter",tmLevelExceednoenter);
  tolua_constant(tolua_S,"tmLevelLowernoenter",tmLevelLowernoenter);
  tolua_constant(tolua_S,"tmMailNOItem",tmMailNOItem);
  tolua_constant(tolua_S,"tmTagetDistanceTooFar",tmTagetDistanceTooFar);
  tolua_constant(tolua_S,"tmDealNotAtSeafArea",tmDealNotAtSeafArea);
  tolua_constant(tolua_S,"tmItemIsQuestItem",tmItemIsQuestItem);
  tolua_constant(tolua_S,"tmDealCancel",tmDealCancel);
  tolua_constant(tolua_S,"tmDealApplyTooMuch",tmDealApplyTooMuch);
  tolua_constant(tolua_S,"tmDealComplete",tmDealComplete);
  tolua_constant(tolua_S,"tmLogDealWith",tmLogDealWith);
  tolua_constant(tolua_S,"tmDealNumTooLarge",tmDealNumTooLarge);
  tolua_constant(tolua_S,"tmMeridiansMaxLv",tmMeridiansMaxLv);
  tolua_constant(tolua_S,"tmItemRegionCanNotUseItem",tmItemRegionCanNotUseItem);
  tolua_constant(tolua_S,"tmDealItemExist",tmDealItemExist);
  tolua_constant(tolua_S,"tmQuotaNoEnough",tmQuotaNoEnough);
  tolua_constant(tolua_S,"tmYbTaxRateGet",tmYbTaxRateGet);
  tolua_constant(tolua_S,"tmCoinTaxRateGet",tmCoinTaxRateGet);
  tolua_constant(tolua_S,"tmGuildRequireLvLimit",tmGuildRequireLvLimit);
  tolua_constant(tolua_S,"tmYbLimitNoImpeach",tmYbLimitNoImpeach);
  tolua_constant(tolua_S,"tmImpeachOfficeError",tmImpeachOfficeError);
  tolua_constant(tolua_S,"tmItemIsSellOrTimeOut",tmItemIsSellOrTimeOut);
  tolua_constant(tolua_S,"tmBlessAddValue",tmBlessAddValue);
  tolua_constant(tolua_S,"tmServerConsiFull",tmServerConsiFull);
  tolua_constant(tolua_S,"tmTriggerExpLmt_1",tmTriggerExpLmt_1);
  tolua_constant(tolua_S,"tmTriggerExpLmt_2",tmTriggerExpLmt_2);
  tolua_constant(tolua_S,"tmTriggerExpLmt_3",tmTriggerExpLmt_3);
  tolua_constant(tolua_S,"tmGetExpMulti",tmGetExpMulti);
  tolua_constant(tolua_S,"tmBlessNoAddValue",tmBlessNoAddValue);
  tolua_constant(tolua_S,"______palceholder",______palceholder);
  tolua_constant(tolua_S,"tmCircleSoul",tmCircleSoul);
  tolua_constant(tolua_S,"tmBroatNum",tmBroatNum);
  tolua_constant(tolua_S,"tmFlyShoeNum",tmFlyShoeNum);
  tolua_constant(tolua_S,"tmGuildDonate",tmGuildDonate);
  tolua_constant(tolua_S,"tmNotInSafeArea",tmNotInSafeArea);
  tolua_constant(tolua_S,"tmMultiExpExhaust",tmMultiExpExhaust);
  tolua_constant(tolua_S,"tmAddExpGeneral",tmAddExpGeneral);
  tolua_constant(tolua_S,"tmAddExpBasic",tmAddExpBasic);
  tolua_constant(tolua_S,"tmAchieveLimitCondition",tmAchieveLimitCondition);
  tolua_constant(tolua_S,"tmUseItemAddExpGeneral",tmUseItemAddExpGeneral);
  tolua_constant(tolua_S,"tmAchieveAwardIsGet",tmAchieveAwardIsGet);
  tolua_constant(tolua_S,"tmMedalTouchTopLevel",tmMedalTouchTopLevel);
  tolua_constant(tolua_S,"tmMedalLvUpFail",tmMedalLvUpFail);
  tolua_constant(tolua_S,"tmMedalLvUpSuccess",tmMedalLvUpSuccess);
  tolua_constant(tolua_S,"tmdoubleExpFull",tmdoubleExpFull);
  tolua_constant(tolua_S,"tmCircleToMaxLv",tmCircleToMaxLv);
  tolua_constant(tolua_S,"tmBlessSubValue",tmBlessSubValue);
  tolua_constant(tolua_S,"tmAppraisalNoItem",tmAppraisalNoItem);
  tolua_constant(tolua_S,"tmAppraisalNoTimes",tmAppraisalNoTimes);
  tolua_constant(tolua_S,"tmAppraisalMaxLevel",tmAppraisalMaxLevel);
  tolua_constant(tolua_S,"tmNoPrestigeNum",tmNoPrestigeNum);
  tolua_constant(tolua_S,"tmNoActivityValue",tmNoActivityValue);
  tolua_constant(tolua_S,"tmMoreCoin",tmMoreCoin);
  tolua_constant(tolua_S,"tmNoTimes",tmNoTimes);
  tolua_constant(tolua_S,"tmUnreachOpenServer",tmUnreachOpenServer);
  tolua_constant(tolua_S,"tmMapLimitTeleport",tmMapLimitTeleport);
  tolua_constant(tolua_S,"tmActorOffLine",tmActorOffLine);
  tolua_constant(tolua_S,"tmBindYuanbaoFull",tmBindYuanbaoFull);
  tolua_constant(tolua_S,"tmYuanbaoFull",tmYuanbaoFull);
  tolua_constant(tolua_S,"tmBindCoinFull",tmBindCoinFull);
  tolua_constant(tolua_S,"tmCoinFull",tmCoinFull);
  tolua_constant(tolua_S,"tmNoOpen",tmNoOpen);
  tolua_constant(tolua_S,"tmThisChanalForbit",tmThisChanalForbit);
  tolua_constant(tolua_S,"tmGetSpeedAwardSucess",tmGetSpeedAwardSucess);
  tolua_constant(tolua_S,"tmSbkCityName",tmSbkCityName);
  tolua_constant(tolua_S,"tmAddExpbyPaoDian",tmAddExpbyPaoDian);
  tolua_constant(tolua_S,"tmKillMonsterNotEnouth",tmKillMonsterNotEnouth);
  tolua_constant(tolua_S,"tmGetChuangGuanGiftSucc",tmGetChuangGuanGiftSucc);
  tolua_constant(tolua_S,"tmGetChuangGuanGiftYet",tmGetChuangGuanGiftYet);
  tolua_constant(tolua_S,"tmGetSpeedAwardYet",tmGetSpeedAwardYet);
  tolua_constant(tolua_S,"tmGetDuoBaoGiftSucc",tmGetDuoBaoGiftSucc);
  tolua_constant(tolua_S,"tmGetDuoBaoGiftYet",tmGetDuoBaoGiftYet);
  tolua_constant(tolua_S,"tmActivityTimeUnReach",tmActivityTimeUnReach);
  tolua_constant(tolua_S,"tmActivityUnReachsongbaoTime",tmActivityUnReachsongbaoTime);
  tolua_constant(tolua_S,"tmSongBaoSuccess",tmSongBaoSuccess);
  tolua_constant(tolua_S,"tmSongBaoYet",tmSongBaoYet);
  tolua_constant(tolua_S,"tmkillMonsterEnoughYet",tmkillMonsterEnoughYet);
  tolua_constant(tolua_S,"tmNeedItemNotEnough",tmNeedItemNotEnough);
  tolua_constant(tolua_S,"tmNoInOpenTime",tmNoInOpenTime);
  tolua_constant(tolua_S,"tmChangeNameNotOpen",tmChangeNameNotOpen);
  tolua_constant(tolua_S,"tmNoChangeNameItem",tmNoChangeNameItem);
  tolua_constant(tolua_S,"tmChangeNameSuc",tmChangeNameSuc);
  tolua_constant(tolua_S,"tmNeInvalidName",tmNeInvalidName);
  tolua_constant(tolua_S,"tmNeNameinuse",tmNeNameinuse);
  tolua_constant(tolua_S,"tmTelePortLimitActivity",tmTelePortLimitActivity);
  tolua_constant(tolua_S,"tmTelePortTimeUnopen",tmTelePortTimeUnopen);
  tolua_constant(tolua_S,"tmBossDeath",tmBossDeath);
  tolua_constant(tolua_S,"tmBossGwSuccess",tmBossGwSuccess);
  tolua_constant(tolua_S,"tmMailGuild",tmMailGuild);
  tolua_constant(tolua_S,"tmAddGuidMail",tmAddGuidMail);
  tolua_constant(tolua_S,"tmDeathDropMail",tmDeathDropMail);
  tolua_constant(tolua_S,"tmDeathDropEqMail",tmDeathDropEqMail);
  tolua_constant(tolua_S,"tmPoint",tmPoint);
  tolua_constant(tolua_S,"tmEquipName1",tmEquipName1);
  tolua_constant(tolua_S,"tmEquipName2",tmEquipName2);
  tolua_constant(tolua_S,"tmEquipName3",tmEquipName3);
  tolua_constant(tolua_S,"tmEquipName4",tmEquipName4);
  tolua_constant(tolua_S,"tmEquipName5",tmEquipName5);
  tolua_constant(tolua_S,"tmEquipName6",tmEquipName6);
  tolua_constant(tolua_S,"tmEquipName7",tmEquipName7);
  tolua_constant(tolua_S,"tmEquipName8",tmEquipName8);
  tolua_constant(tolua_S,"tmEquipName9",tmEquipName9);
  tolua_constant(tolua_S,"tmEquipName10",tmEquipName10);
  tolua_constant(tolua_S,"tmEquipName11",tmEquipName11);
  tolua_constant(tolua_S,"tmEquipName12",tmEquipName12);
  tolua_constant(tolua_S,"tmEquipName13",tmEquipName13);
  tolua_constant(tolua_S,"tmEquipName14",tmEquipName14);
  tolua_constant(tolua_S,"tmDeathDropMailTitle",tmDeathDropMailTitle);
  tolua_constant(tolua_S,"tmDefNoBagNum",tmDefNoBagNum);
  tolua_constant(tolua_S,"tmEquipNoBagNum",tmEquipNoBagNum);
  tolua_constant(tolua_S,"tmRecoverNoBagNum",tmRecoverNoBagNum);
  tolua_constant(tolua_S,"tmForgeNoBagNum",tmForgeNoBagNum);
  tolua_constant(tolua_S,"tmTenForgeNoBagNum",tmTenForgeNoBagNum);
  tolua_constant(tolua_S,"tmGiftNoBagNum",tmGiftNoBagNum);
  tolua_constant(tolua_S,"tmActivateSuit",tmActivateSuit);
  tolua_constant(tolua_S,"tmInvalidSuit",tmInvalidSuit);
  tolua_constant(tolua_S,"______palceholder1",______palceholder1);
  tolua_constant(tolua_S,"______palceholder2",______palceholder2);
  tolua_constant(tolua_S,"tmGuaJiJuanZhouOnUse",tmGuaJiJuanZhouOnUse);
  tolua_constant(tolua_S,"tmGuaJiJuanZhouUseSucc",tmGuaJiJuanZhouUseSucc);
  tolua_constant(tolua_S,"tmSZBossDeath",tmSZBossDeath);
  tolua_constant(tolua_S,"tmItemLimitSZBossTime",tmItemLimitSZBossTime);
  tolua_constant(tolua_S,"tmGetNewTitleNotice",tmGetNewTitleNotice);
  tolua_constant(tolua_S,"tmSelfGetNewTitleNotice",tmSelfGetNewTitleNotice);
  tolua_constant(tolua_S,"tmFCMOpened",tmFCMOpened);
  tolua_constant(tolua_S,"tmFcmHalfExp",tmFcmHalfExp);
  tolua_constant(tolua_S,"tmFcmZeroExp",tmFcmZeroExp);
  tolua_constant(tolua_S,"tmFcmPerHour",tmFcmPerHour);
  tolua_constant(tolua_S,"tmWarPointNoEnough",tmWarPointNoEnough);
  tolua_constant(tolua_S,"tmSelfItemNotEnough",tmSelfItemNotEnough);
  tolua_constant(tolua_S,"tmBanChat",tmBanChat);
  tolua_constant(tolua_S,"tmItemSplitBagFail",tmItemSplitBagFail);
  tolua_constant(tolua_S,"tmCannotCatchPetMore",tmCannotCatchPetMore);
  tolua_constant(tolua_S,"tmDaYaoYueKaGongGao",tmDaYaoYueKaGongGao);
  tolua_constant(tolua_S,"tmYongHengGongGao",tmYongHengGongGao);
  tolua_constant(tolua_S,"tmFollwerMaxCount",tmFollwerMaxCount);
  tolua_constant(tolua_S,"tmBlackMaxCount",tmBlackMaxCount);
  tolua_constant(tolua_S,"tmRefiningReplace",tmRefiningReplace);
  tolua_constant(tolua_S,"tmComposeBagLimit",tmComposeBagLimit);
  tolua_constant(tolua_S,"tmChallengBossSucess",tmChallengBossSucess);
  tolua_constant(tolua_S,"tmFXTransportYuanBaoNotEnough",tmFXTransportYuanBaoNotEnough);
  tolua_constant(tolua_S,"tmDB1",tmDB1);
  tolua_constant(tolua_S,"tmDB2",tmDB2);
  tolua_constant(tolua_S,"tmBaiKaGongGao",tmBaiKaGongGao);
  tolua_constant(tolua_S,"tmLvKaGongGao",tmLvKaGongGao);
  tolua_constant(tolua_S,"tmLanKaGongGao",tmLanKaGongGao);
  tolua_constant(tolua_S,"tmZiKaGongGao",tmZiKaGongGao);
  tolua_constant(tolua_S,"tmChengKaGongGao",tmChengKaGongGao);
  tolua_constant(tolua_S,"tmEquipName15",tmEquipName15);
  tolua_constant(tolua_S,"tmDeathMailTitle",tmDeathMailTitle);
  tolua_constant(tolua_S,"tmDeathMailContent",tmDeathMailContent);
  tolua_constant(tolua_S,"tmEquipName16",tmEquipName16);
  tolua_constant(tolua_S,"tmInActivityLimitOperate",tmInActivityLimitOperate);
  tolua_constant(tolua_S,"tmUpStarFailDownStar",tmUpStarFailDownStar);
  tolua_constant(tolua_S,"tmItemUpMaxStar1",tmItemUpMaxStar1);
  tolua_constant(tolua_S,"tmItemUpMaxStar2",tmItemUpMaxStar2);
  tolua_constant(tolua_S,"tmUpCircleTips",tmUpCircleTips);
  tolua_constant(tolua_S,"tmGhost",tmGhost);
  tolua_constant(tolua_S,"tmNoBindCoin2City",tmNoBindCoin2City);
  tolua_constant(tolua_S,"______palceholder3",______palceholder3);
  tolua_constant(tolua_S,"tmExclusiveTips",tmExclusiveTips);
  tolua_constant(tolua_S,"tmRankTips",tmRankTips);
  tolua_constant(tolua_S,"tmRankPowerTips",tmRankPowerTips);
  tolua_constant(tolua_S,"tmRankNum1",tmRankNum1);
  tolua_constant(tolua_S,"tmRankNum2",tmRankNum2);
  tolua_constant(tolua_S,"tmRankNum3",tmRankNum3);
  tolua_constant(tolua_S,"tmActorJob1",tmActorJob1);
  tolua_constant(tolua_S,"tmActorJob2",tmActorJob2);
  tolua_constant(tolua_S,"tmActorJob3",tmActorJob3);
  tolua_constant(tolua_S,"tmActorPower1",tmActorPower1);
  tolua_constant(tolua_S,"tmActorPower2",tmActorPower2);
  tolua_constant(tolua_S,"tmActorPower3",tmActorPower3);
  tolua_constant(tolua_S,"tmSbkTips",tmSbkTips);
  tolua_constant(tolua_S,"tmGhostTips",tmGhostTips);
  tolua_constant(tolua_S,"tmFrenzyReOpen",tmFrenzyReOpen);
  tolua_constant(tolua_S,"tmFrenzyOpenSucc",tmFrenzyOpenSucc);
  tolua_constant(tolua_S,"tmEquipQuality0",tmEquipQuality0);
  tolua_constant(tolua_S,"tmEquipQuality1",tmEquipQuality1);
  tolua_constant(tolua_S,"tmEquipQuality2",tmEquipQuality2);
  tolua_constant(tolua_S,"tmEquipQuality3",tmEquipQuality3);
  tolua_constant(tolua_S,"tmEquipQuality4",tmEquipQuality4);
  tolua_constant(tolua_S,"tmEquipQuality5",tmEquipQuality5);
  tolua_constant(tolua_S,"tmInDonateRank",tmInDonateRank);
  tolua_constant(tolua_S,"tmDonateRankNoDonate",tmDonateRankNoDonate);
  tolua_constant(tolua_S,"tmDonateRanksuccess",tmDonateRanksuccess);
  tolua_constant(tolua_S,"tmkuangbaolimir",tmkuangbaolimir);
  tolua_constant(tolua_S,"tmghostlimit",tmghostlimit);
  tolua_constant(tolua_S,"tmTeamCallNotEnough",tmTeamCallNotEnough);
  tolua_constant(tolua_S,"tmGuildCallNotEnough",tmGuildCallNotEnough);
  tolua_constant(tolua_S,"tmCallSuccWait",tmCallSuccWait);
  tolua_constant(tolua_S,"tmGuildCallLimit",tmGuildCallLimit);
  tolua_constant(tolua_S,"tmSceneCallLimit",tmSceneCallLimit);
  tolua_constant(tolua_S,"tmCallNoTeam",tmCallNoTeam);
  tolua_constant(tolua_S,"tmLootNotOwner",tmLootNotOwner);
  tolua_constant(tolua_S,"tmLootParamError",tmLootParamError);
  tolua_constant(tolua_S,"tmLootExpired",tmLootExpired);
  tolua_constant(tolua_S,"tmLootPosError",tmLootPosError);
  tolua_constant(tolua_S,"tmLootCanPickUpTime",tmLootCanPickUpTime);
  tolua_constant(tolua_S,"tmLootPicked",tmLootPicked);
  tolua_constant(tolua_S,"tmFriendnotaddSelf",tmFriendnotaddSelf);
  tolua_constant(tolua_S,"tmChatnotaddSelf",tmChatnotaddSelf);
  tolua_constant(tolua_S,"tmUpgreadOffice",tmUpgreadOffice);
  tolua_constant(tolua_S,"tmMaxOffice",tmMaxOffice);
  tolua_constant(tolua_S,"tmOfficeBroad",tmOfficeBroad);
  tolua_constant(tolua_S,"tmLimitConsignment",tmLimitConsignment);
  tolua_constant(tolua_S,"tmLimitDeal",tmLimitDeal);
  tolua_constant(tolua_S,"tmComPoseOfficeLimit",tmComPoseOfficeLimit);
  tolua_constant(tolua_S,"tmComPoseVipLimit",tmComPoseVipLimit);
  tolua_constant(tolua_S,"______palceholder4",______palceholder4);
  tolua_constant(tolua_S,"______palceholder5",______palceholder5);
  tolua_constant(tolua_S,"______palceholder6",______palceholder6);
  tolua_constant(tolua_S,"______palceholder7",______palceholder7);
  tolua_constant(tolua_S,"tmDescribeStr1",tmDescribeStr1);
  tolua_constant(tolua_S,"tmDescribeStr2",tmDescribeStr2);
  tolua_constant(tolua_S,"tmDropMonsterBroadItem",tmDropMonsterBroadItem);
  tolua_constant(tolua_S,"tmItemCanNotPutDepot",tmItemCanNotPutDepot);
  tolua_constant(tolua_S,"tmdepotBagIsFull",tmdepotBagIsFull);
  tolua_constant(tolua_S,"tmChgVocInCD",tmChgVocInCD);
  tolua_constant(tolua_S,"tmdepotLvLimit",tmdepotLvLimit);
  tolua_constant(tolua_S,"tmdepotCardLvLimit",tmdepotCardLvLimit);
  tolua_constant(tolua_S,"tmCircleLvLimit",tmCircleLvLimit);
  tolua_constant(tolua_S,"tmBag2Deport",tmBag2Deport);
  tolua_constant(tolua_S,"tmDeport2Bag",tmDeport2Bag);
  tolua_constant(tolua_S,"tmConsigmentCanGet",tmConsigmentCanGet);
  tolua_constant(tolua_S,"tmActivity10017Limit",tmActivity10017Limit);
  tolua_constant(tolua_S,"tmActivity10017LimitTimes",tmActivity10017LimitTimes);
  tolua_constant(tolua_S,"tmActivity10017LimitBags",tmActivity10017LimitBags);
  tolua_constant(tolua_S,"tmActivity10017OperateSuccess",tmActivity10017OperateSuccess);
  tolua_constant(tolua_S,"tmItemQuality0",tmItemQuality0);
  tolua_constant(tolua_S,"tmItemQuality1",tmItemQuality1);
  tolua_constant(tolua_S,"tmItemQuality2",tmItemQuality2);
  tolua_constant(tolua_S,"tmItemQuality3",tmItemQuality3);
  tolua_constant(tolua_S,"tmItemQuality4",tmItemQuality4);
  tolua_constant(tolua_S,"tmItemQuality5",tmItemQuality5);
  tolua_constant(tolua_S,"______palceholder8",______palceholder8);
  tolua_constant(tolua_S,"______palceholder9",______palceholder9);
  tolua_constant(tolua_S,"______palceholder10",______palceholder10);
  tolua_constant(tolua_S,"______palceholder11",______palceholder11);
  tolua_constant(tolua_S,"______palceholder12",______palceholder12);
  tolua_constant(tolua_S,"tmOpenDayLimitCircle",tmOpenDayLimitCircle);
  tolua_constant(tolua_S,"tmBaiKaLiaoTianXiTongGongGao",tmBaiKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmLvKaLiaoTianXiTongGongGao",tmLvKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmLanKaLiaoTianXiTongGongGao",tmLanKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmZiKaLiaoTianXiTongGongGao",tmZiKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmChengKaLiaoTianXiTongGongGao",tmChengKaLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmRankNum4",tmRankNum4);
  tolua_constant(tolua_S,"tmRankNum5",tmRankNum5);
  tolua_constant(tolua_S,"tmRankNum6",tmRankNum6);
  tolua_constant(tolua_S,"tmRankNum7",tmRankNum7);
  tolua_constant(tolua_S,"tmRankNum8",tmRankNum8);
  tolua_constant(tolua_S,"tmRankNum9",tmRankNum9);
  tolua_constant(tolua_S,"tmRankNum10",tmRankNum10);
  tolua_constant(tolua_S,"tmChatVipLimit",tmChatVipLimit);
  tolua_constant(tolua_S,"tmChatVipLeftTimes",tmChatVipLeftTimes);
  tolua_constant(tolua_S,"tmUseItemOpenDaylimit",tmUseItemOpenDaylimit);
  tolua_constant(tolua_S,"______palceholder13",______palceholder13);
  tolua_constant(tolua_S,"______palceholder14",______palceholder14);
  tolua_constant(tolua_S,"______palceholder15",______palceholder15);
  tolua_constant(tolua_S,"tmZLMoneyNoEnough",tmZLMoneyNoEnough);
  tolua_constant(tolua_S,"tmUseRecoverItem",tmUseRecoverItem);
  tolua_constant(tolua_S,"______palceholder16",______palceholder16);
  tolua_constant(tolua_S,"tmNeedLv",tmNeedLv);
  tolua_constant(tolua_S,"tmAtv14Tips",tmAtv14Tips);
  tolua_constant(tolua_S,"tmNull",tmNull);
  tolua_constant(tolua_S,"tmChengXinGongGao",tmChengXinGongGao);
  tolua_constant(tolua_S,"tmChengXinLiaoTianXiTongGongGao",tmChengXinLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmKuaFuBossPkWin",tmKuaFuBossPkWin);
  tolua_constant(tolua_S,"tmKuaFuBossPkLost",tmKuaFuBossPkLost);
  tolua_constant(tolua_S,"tmKuaFuDimensionalKeyNotEnough",tmKuaFuDimensionalKeyNotEnough);
  tolua_constant(tolua_S,"tmKilledByActorCs",tmKilledByActorCs);
  tolua_constant(tolua_S,"tmKuaFuBossTipsCs",tmKuaFuBossTipsCs);
  tolua_constant(tolua_S,"tmActorLoginKuafu",tmActorLoginKuafu);
  tolua_constant(tolua_S,"tmInternalWorkLevelLimit",tmInternalWorkLevelLimit);
  tolua_constant(tolua_S,"tmInternalWorkLevelNotEnough",tmInternalWorkLevelNotEnough);
  tolua_constant(tolua_S,"tmLootPetMaturity",tmLootPetMaturity);
  tolua_constant(tolua_S,"tmGuildFunctionNotOpen",tmGuildFunctionNotOpen);
  tolua_constant(tolua_S,"tmUseItemUselimit",tmUseItemUselimit);
  tolua_constant(tolua_S,"tmChengYueGongGao",tmChengYueGongGao);
  tolua_constant(tolua_S,"tmChengYueLiaoTianXiTongGongGao",tmChengYueLiaoTianXiTongGongGao);
  tolua_constant(tolua_S,"tmtmFrenzyCardLvLimit",tmtmFrenzyCardLvLimit);
  tolua_constant(tolua_S,"tmGuildLevelLimit",tmGuildLevelLimit);
  tolua_module(tolua_S,"GameLog",0);
  tolua_beginmodule(tolua_S,"GameLog");
   tolua_constant(tolua_S,"Log_Recharge",GameLog::Log_Recharge);
   tolua_constant(tolua_S,"Log_RechargeCard",GameLog::Log_RechargeCard);
   tolua_constant(tolua_S,"Log_Deal",GameLog::Log_Deal);
   tolua_constant(tolua_S,"Log_BackStage",GameLog::Log_BackStage);
   tolua_constant(tolua_S,"Log_Consigment",GameLog::Log_Consigment);
   tolua_constant(tolua_S,"Log_CreateGuild",GameLog::Log_CreateGuild);
   tolua_constant(tolua_S,"Log_GuildDonate",GameLog::Log_GuildDonate);
   tolua_constant(tolua_S,"Log_GuildImpeach",GameLog::Log_GuildImpeach);
   tolua_constant(tolua_S,"Log_Loot",GameLog::Log_Loot);
   tolua_constant(tolua_S,"Log_MoneyExChange",GameLog::Log_MoneyExChange);
   tolua_constant(tolua_S,"Log_LearnSkill",GameLog::Log_LearnSkill);
   tolua_constant(tolua_S,"Log_Activity10002",GameLog::Log_Activity10002);
   tolua_constant(tolua_S,"Log_Activity4",GameLog::Log_Activity4);
   tolua_constant(tolua_S,"Log_Activity10009",GameLog::Log_Activity10009);
   tolua_constant(tolua_S,"Log_PickUp",GameLog::Log_PickUp);
   tolua_constant(tolua_S,"Log_Activity8",GameLog::Log_Activity8);
   tolua_constant(tolua_S,"Log_Relive",GameLog::Log_Relive);
   tolua_constant(tolua_S,"Log_Compose",GameLog::Log_Compose);
   tolua_constant(tolua_S,"Log_BossSystem",GameLog::Log_BossSystem);
   tolua_constant(tolua_S,"Log_WorldChat",GameLog::Log_WorldChat);
   tolua_constant(tolua_S,"Log_MeridiansUP",GameLog::Log_MeridiansUP);
   tolua_constant(tolua_S,"Log_Strengthen",GameLog::Log_Strengthen);
   tolua_constant(tolua_S,"Log_JoinFuben",GameLog::Log_JoinFuben);
   tolua_constant(tolua_S,"Log_Bless",GameLog::Log_Bless);
   tolua_constant(tolua_S,"Log_Quest",GameLog::Log_Quest);
   tolua_constant(tolua_S,"Log_ShopBuy",GameLog::Log_ShopBuy);
   tolua_constant(tolua_S,"Log_Activity2",GameLog::Log_Activity2);
   tolua_constant(tolua_S,"Log_Achieve",GameLog::Log_Achieve);
   tolua_constant(tolua_S,"Log_UseGift",GameLog::Log_UseGift);
   tolua_constant(tolua_S,"Log_UseBox",GameLog::Log_UseBox);
   tolua_constant(tolua_S,"Log_KillMonster",GameLog::Log_KillMonster);
   tolua_constant(tolua_S,"Log_ForgeItem",GameLog::Log_ForgeItem);
   tolua_constant(tolua_S,"Log_Mail",GameLog::Log_Mail);
   tolua_constant(tolua_S,"Log_Recover",GameLog::Log_Recover);
   tolua_constant(tolua_S,"Log_FirstLogin",GameLog::Log_FirstLogin);
   tolua_constant(tolua_S,"Log_TakeOn",GameLog::Log_TakeOn);
   tolua_constant(tolua_S,"Log_TakeOff",GameLog::Log_TakeOff);
   tolua_constant(tolua_S,"Log_ItemMerge",GameLog::Log_ItemMerge);
   tolua_constant(tolua_S,"Log_DeathDropItem",GameLog::Log_DeathDropItem);
   tolua_constant(tolua_S,"Log_CircleEx",GameLog::Log_CircleEx);
   tolua_constant(tolua_S,"Log_ChangeuseName",GameLog::Log_ChangeuseName);
   tolua_constant(tolua_S,"Log_UserItem",GameLog::Log_UserItem);
   tolua_constant(tolua_S,"Log_SelfDelItem",GameLog::Log_SelfDelItem);
   tolua_constant(tolua_S,"Log_SkillCostItem",GameLog::Log_SkillCostItem);
   tolua_constant(tolua_S,"Log_Activity10001",GameLog::Log_Activity10001);
   tolua_constant(tolua_S,"Log_Activity10010",GameLog::Log_Activity10010);
   tolua_constant(tolua_S,"Log_Activity10003",GameLog::Log_Activity10003);
   tolua_constant(tolua_S,"Log_Activity10004",GameLog::Log_Activity10004);
   tolua_constant(tolua_S,"Log_Activity10005",GameLog::Log_Activity10005);
   tolua_constant(tolua_S,"Log_Activity10006",GameLog::Log_Activity10006);
   tolua_constant(tolua_S,"Log_Activity9",GameLog::Log_Activity9);
   tolua_constant(tolua_S,"Log_Activity5",GameLog::Log_Activity5);
   tolua_constant(tolua_S,"Log_Activity13",GameLog::Log_Activity13);
   tolua_constant(tolua_S,"Log_Activity12",GameLog::Log_Activity12);
   tolua_constant(tolua_S,"Log_Activity11",GameLog::Log_Activity11);
   tolua_constant(tolua_S,"Log_Activity7",GameLog::Log_Activity7);
   tolua_constant(tolua_S,"Log_Activity3",GameLog::Log_Activity3);
   tolua_constant(tolua_S,"Log_Activity1",GameLog::Log_Activity1);
   tolua_constant(tolua_S,"Log_FlyShoestran",GameLog::Log_FlyShoestran);
   tolua_constant(tolua_S,"Log_Activity10012",GameLog::Log_Activity10012);
   tolua_constant(tolua_S,"Log_Activity14",GameLog::Log_Activity14);
   tolua_constant(tolua_S,"Log_Activity15",GameLog::Log_Activity15);
   tolua_constant(tolua_S,"Log_Fashion",GameLog::Log_Fashion);
   tolua_constant(tolua_S,"Log_NPCTelep",GameLog::Log_NPCTelep);
   tolua_constant(tolua_S,"Log_CleanRedName",GameLog::Log_CleanRedName);
   tolua_constant(tolua_S,"Log_MonthCard",GameLog::Log_MonthCard);
   tolua_constant(tolua_S,"Log_Medal",GameLog::Log_Medal);
   tolua_constant(tolua_S,"Log_MEDICINECard",GameLog::Log_MEDICINECard);
   tolua_constant(tolua_S,"Log_FreeCard",GameLog::Log_FreeCard);
   tolua_constant(tolua_S,"Log_ForeverCard",GameLog::Log_ForeverCard);
   tolua_constant(tolua_S,"Log_Refining",GameLog::Log_Refining);
   tolua_constant(tolua_S,"Log_Activity10015",GameLog::Log_Activity10015);
   tolua_constant(tolua_S,"Log_YBRecover",GameLog::Log_YBRecover);
   tolua_constant(tolua_S,"Log_UpCircle",GameLog::Log_UpCircle);
   tolua_constant(tolua_S,"Log_PaoDian",GameLog::Log_PaoDian);
   tolua_constant(tolua_S,"Log_UpStar",GameLog::Log_UpStar);
   tolua_constant(tolua_S,"Log_SBKaward",GameLog::Log_SBKaward);
   tolua_constant(tolua_S,"Log_Area",GameLog::Log_Area);
   tolua_constant(tolua_S,"Log_TeamKillMonster",GameLog::Log_TeamKillMonster);
   tolua_constant(tolua_S,"Log_BuyFrezy",GameLog::Log_BuyFrezy);
   tolua_constant(tolua_S,"Log_Activity16",GameLog::Log_Activity16);
   tolua_constant(tolua_S,"Log_ghost",GameLog::Log_ghost);
   tolua_constant(tolua_S,"Log_Call",GameLog::Log_Call);
   tolua_constant(tolua_S,"Log_Office",GameLog::Log_Office);
   tolua_constant(tolua_S,"Log_FourStarStrength",GameLog::Log_FourStarStrength);
   tolua_constant(tolua_S,"Log_CirtRing",GameLog::Log_CirtRing);
   tolua_constant(tolua_S,"Log_DizzyRing",GameLog::Log_DizzyRing);
   tolua_constant(tolua_S,"Log_ChgVocation",GameLog::Log_ChgVocation);
   tolua_constant(tolua_S,"Log_Bag2Deport",GameLog::Log_Bag2Deport);
   tolua_constant(tolua_S,"Log_Deport2Bag",GameLog::Log_Deport2Bag);
   tolua_constant(tolua_S,"Log_DeportRemoveItem",GameLog::Log_DeportRemoveItem);
   tolua_constant(tolua_S,"Log_DepotMerge",GameLog::Log_DepotMerge);
   tolua_constant(tolua_S,"Log_4366Login",GameLog::Log_4366Login);
   tolua_constant(tolua_S,"Log_4366Phone",GameLog::Log_4366Phone);
   tolua_constant(tolua_S,"Log_4366IdCard",GameLog::Log_4366IdCard);
   tolua_constant(tolua_S,"Log_4366ExeLogin",GameLog::Log_4366ExeLogin);
   tolua_constant(tolua_S,"Log_Activity10017",GameLog::Log_Activity10017);
   tolua_constant(tolua_S,"Log_QQhallLevel",GameLog::Log_QQhallLevel);
   tolua_constant(tolua_S,"Log_QQhallRegiste",GameLog::Log_QQhallRegiste);
   tolua_constant(tolua_S,"Log_QQhallActive",GameLog::Log_QQhallActive);
   tolua_constant(tolua_S,"Log_PcGift",GameLog::Log_PcGift);
   tolua_constant(tolua_S,"Log_QQBlueNewPlayer",GameLog::Log_QQBlueNewPlayer);
   tolua_constant(tolua_S,"Log_QQBlueDaily",GameLog::Log_QQBlueDaily);
   tolua_constant(tolua_S,"Log_QQBlueGrowUp",GameLog::Log_QQBlueGrowUp);
   tolua_constant(tolua_S,"Log_QQBlueLevel",GameLog::Log_QQBlueLevel);
   tolua_constant(tolua_S,"Log_Activity10019",GameLog::Log_Activity10019);
   tolua_constant(tolua_S,"Log_MoneyTree",GameLog::Log_MoneyTree);
   tolua_constant(tolua_S,"Log_UseVipCard",GameLog::Log_UseVipCard);
   tolua_constant(tolua_S,"Log_SoulWeapon",GameLog::Log_SoulWeapon);
   tolua_constant(tolua_S,"Log_TotalOnlineTime",GameLog::Log_TotalOnlineTime);
   tolua_constant(tolua_S,"Log_ActivityWMSAcross",GameLog::Log_ActivityWMSAcross);
   tolua_constant(tolua_S,"Log_Activity23",GameLog::Log_Activity23);
   tolua_constant(tolua_S,"Log_Activity10020",GameLog::Log_Activity10020);
   tolua_constant(tolua_S,"Log_Activity26",GameLog::Log_Activity26);
   tolua_constant(tolua_S,"Log_Activity10022",GameLog::Log_Activity10022);
   tolua_constant(tolua_S,"Log_Platform37",GameLog::Log_Platform37);
   tolua_constant(tolua_S,"Log_Platform7Game",GameLog::Log_Platform7Game);
   tolua_constant(tolua_S,"Log_PlatformQiDian",GameLog::Log_PlatformQiDian);
   tolua_constant(tolua_S,"Log_Activity10024",GameLog::Log_Activity10024);
   tolua_constant(tolua_S,"Log_Activity10027",GameLog::Log_Activity10027);
   tolua_constant(tolua_S,"Log_PlatformSoGou",GameLog::Log_PlatformSoGou);
   tolua_constant(tolua_S,"Log_Activity10028",GameLog::Log_Activity10028);
   tolua_constant(tolua_S,"Log_Activity10029",GameLog::Log_Activity10029);
   tolua_constant(tolua_S,"Log_Activity10030",GameLog::Log_Activity10030);
   tolua_constant(tolua_S,"Log_Activity10031",GameLog::Log_Activity10031);
   tolua_constant(tolua_S,"Log_Activity10032",GameLog::Log_Activity10032);
   tolua_constant(tolua_S,"Log_Activity10034",GameLog::Log_Activity10034);
   tolua_constant(tolua_S,"Log_Activity10035",GameLog::Log_Activity10035);
   tolua_constant(tolua_S,"Log_Activity10036",GameLog::Log_Activity10036);
   tolua_constant(tolua_S,"Log_Words",GameLog::Log_Words);
   tolua_constant(tolua_S,"Log_Activity10037",GameLog::Log_Activity10037);
   tolua_constant(tolua_S,"Log_Activity28",GameLog::Log_Activity28);
   tolua_constant(tolua_S,"Log_Max",GameLog::Log_Max);
   tolua_constant(tolua_S,"clTakeOnItem",GameLog::clTakeOnItem);
   tolua_constant(tolua_S,"clTakeOffItem",GameLog::clTakeOffItem);
   tolua_constant(tolua_S,"clUserItem",GameLog::clUserItem);
   tolua_constant(tolua_S,"clUserDestroyItem",GameLog::clUserDestroyItem);
   tolua_constant(tolua_S,"clBuyItem",GameLog::clBuyItem);
   tolua_constant(tolua_S,"clSellItem",GameLog::clSellItem);
   tolua_constant(tolua_S,"clTimeupItem",GameLog::clTimeupItem);
   tolua_constant(tolua_S,"clGMAddItem",GameLog::clGMAddItem);
   tolua_constant(tolua_S,"clWorldTalkItem",GameLog::clWorldTalkItem);
   tolua_constant(tolua_S,"clAchieveRewardItem",GameLog::clAchieveRewardItem);
   tolua_constant(tolua_S,"clQuestGiveItem",GameLog::clQuestGiveItem);
   tolua_constant(tolua_S,"clBuyStoreItem",GameLog::clBuyStoreItem);
   tolua_constant(tolua_S,"clGuildFr",GameLog::clGuildFr);
   tolua_constant(tolua_S,"clSkillTrainItem",GameLog::clSkillTrainItem);
   tolua_constant(tolua_S,"clEquipSplit",GameLog::clEquipSplit);
   tolua_constant(tolua_S,"clItemMerge",GameLog::clItemMerge);
   tolua_constant(tolua_S,"clDealLostIteam",GameLog::clDealLostIteam);
   tolua_constant(tolua_S,"clDealGetItem",GameLog::clDealGetItem);
   tolua_constant(tolua_S,"clBag2Deport",GameLog::clBag2Deport);
   tolua_constant(tolua_S,"clDeport2Bag",GameLog::clDeport2Bag);
   tolua_constant(tolua_S,"clDeportRemoveItem",GameLog::clDeportRemoveItem);
   tolua_constant(tolua_S,"clQuestLostItem",GameLog::clQuestLostItem);
   tolua_constant(tolua_S,"clServerGiveItem",GameLog::clServerGiveItem);
   tolua_constant(tolua_S,"clLeftSceneRemoveItem",GameLog::clLeftSceneRemoveItem);
   tolua_constant(tolua_S,"cl_25",GameLog::cl_25);
   tolua_constant(tolua_S,"clSkillLostItem",GameLog::clSkillLostItem);
   tolua_constant(tolua_S,"clDropItemGroup",GameLog::clDropItemGroup);
   tolua_constant(tolua_S,"clChangeuseName",GameLog::clChangeuseName);
   tolua_constant(tolua_S,"clGmAddMoney",GameLog::clGmAddMoney);
   tolua_constant(tolua_S,"clLearnSkillMoney",GameLog::clLearnSkillMoney);
   tolua_constant(tolua_S,"clChatMoney",GameLog::clChatMoney);
   tolua_constant(tolua_S,"clAchieveRewardMoney",GameLog::clAchieveRewardMoney);
   tolua_constant(tolua_S,"clQuestGiveMoney",GameLog::clQuestGiveMoney);
   tolua_constant(tolua_S,"clStoreBuyMoney",GameLog::clStoreBuyMoney);
   tolua_constant(tolua_S,"clEnlargeBag",GameLog::clEnlargeBag);
   tolua_constant(tolua_S,"clCreateGuildLostMoney",GameLog::clCreateGuildLostMoney);
   tolua_constant(tolua_S,"clWithdrawYuanBao",GameLog::clWithdrawYuanBao);
   tolua_constant(tolua_S,"clServerGiveMoney",GameLog::clServerGiveMoney);
   tolua_constant(tolua_S,"clUseEntrust",GameLog::clUseEntrust);
   tolua_constant(tolua_S,"clSkillDeMoney",GameLog::clSkillDeMoney);
   tolua_constant(tolua_S,"clBagDestroyMoney",GameLog::clBagDestroyMoney);
   tolua_constant(tolua_S,"cl_42",GameLog::cl_42);
   tolua_constant(tolua_S,"cl_43",GameLog::cl_43);
   tolua_constant(tolua_S,"cl_44",GameLog::cl_44);
   tolua_constant(tolua_S,"clConsumeFirstTimes",GameLog::clConsumeFirstTimes);
   tolua_constant(tolua_S,"clBatchUseItem",GameLog::clBatchUseItem);
   tolua_constant(tolua_S,"clQuestGiveExp",GameLog::clQuestGiveExp);
   tolua_constant(tolua_S,"clGmAddExp",GameLog::clGmAddExp);
   tolua_constant(tolua_S,"clKillMonsterExp",GameLog::clKillMonsterExp);
   tolua_constant(tolua_S,"clItemAddExp",GameLog::clItemAddExp);
   tolua_constant(tolua_S,"clEQuipPropertyStrong",GameLog::clEQuipPropertyStrong);
   tolua_constant(tolua_S,"clEQuipPropertyRandForge",GameLog::clEQuipPropertyRandForge);
   tolua_constant(tolua_S,"clEQuipPropertyInject",GameLog::clEQuipPropertyInject);
   tolua_constant(tolua_S,"clEQuipPropertyQuality",GameLog::clEQuipPropertyQuality);
   tolua_constant(tolua_S,"clEquipPropertyDurChange",GameLog::clEquipPropertyDurChange);
   tolua_constant(tolua_S,"clEquipPropertyMaxDurChange",GameLog::clEquipPropertyMaxDurChange);
   tolua_constant(tolua_S,"clEquipPropertyCountChange",GameLog::clEquipPropertyCountChange);
   tolua_constant(tolua_S,"clEquipPropertyBindChange",GameLog::clEquipPropertyBindChange);
   tolua_constant(tolua_S,"clEquipPropertyForge",GameLog::clEquipPropertyForge);
   tolua_constant(tolua_S,"clEquipPropertyLuck",GameLog::clEquipPropertyLuck);
   tolua_constant(tolua_S,"clAddQuest",GameLog::clAddQuest);
   tolua_constant(tolua_S,"clFinishQuest",GameLog::clFinishQuest);
   tolua_constant(tolua_S,"clGiveupQuest",GameLog::clGiveupQuest);
   tolua_constant(tolua_S,"clCreateGuild",GameLog::clCreateGuild);
   tolua_constant(tolua_S,"clDeleteGuild",GameLog::clDeleteGuild);
   tolua_constant(tolua_S,"clJoinGuild",GameLog::clJoinGuild);
   tolua_constant(tolua_S,"clExitGuild",GameLog::clExitGuild);
   tolua_constant(tolua_S,"clChangeGuildPos",GameLog::clChangeGuildPos);
   tolua_constant(tolua_S,"clGetGuildCoinAward",GameLog::clGetGuildCoinAward);
   tolua_constant(tolua_S,"clLevelUp",GameLog::clLevelUp);
   tolua_constant(tolua_S,"clLoginExp",GameLog::clLoginExp);
   tolua_constant(tolua_S,"clLogOutExp",GameLog::clLogOutExp);
   tolua_constant(tolua_S,"clPkActor",GameLog::clPkActor);
   tolua_constant(tolua_S,"clNewDayArrive",GameLog::clNewDayArrive);
   tolua_constant(tolua_S,"clMap",GameLog::clMap);
   tolua_constant(tolua_S,"clEnterFb",GameLog::clEnterFb);
   tolua_constant(tolua_S,"clExitFb",GameLog::clExitFb);
   tolua_constant(tolua_S,"clOpenFb",GameLog::clOpenFb);
   tolua_constant(tolua_S,"clHeroAdd",GameLog::clHeroAdd);
   tolua_constant(tolua_S,"clHeroRemove",GameLog::clHeroRemove);
   tolua_constant(tolua_S,"clHeroUpgrade",GameLog::clHeroUpgrade);
   tolua_constant(tolua_S,"clHeroTakeOnEquip",GameLog::clHeroTakeOnEquip);
   tolua_constant(tolua_S,"clHeroTakeOffEquip",GameLog::clHeroTakeOffEquip);
   tolua_constant(tolua_S,"clHeroLearnSkill",GameLog::clHeroLearnSkill);
   tolua_constant(tolua_S,"clHeroForgetSkill",GameLog::clHeroForgetSkill);
   tolua_constant(tolua_S,"clHeroChangeName",GameLog::clHeroChangeName);
   tolua_constant(tolua_S,"cl_88",GameLog::cl_88);
   tolua_constant(tolua_S,"cl_89",GameLog::cl_89);
   tolua_constant(tolua_S,"cl_90",GameLog::cl_90);
   tolua_constant(tolua_S,"clHeroSkillLevelUp",GameLog::clHeroSkillLevelUp);
   tolua_constant(tolua_S,"clHeroStageUp",GameLog::clHeroStageUp);
   tolua_constant(tolua_S,"cl_93",GameLog::cl_93);
   tolua_constant(tolua_S,"clStallBuyItem",GameLog::clStallBuyItem);
   tolua_constant(tolua_S,"clStallSellItem",GameLog::clStallSellItem);
   tolua_constant(tolua_S,"clStallBuyItemMoney",GameLog::clStallBuyItemMoney);
   tolua_constant(tolua_S,"clItemSpecSmith",GameLog::clItemSpecSmith);
   tolua_constant(tolua_S,"clCircleChange",GameLog::clCircleChange);
   tolua_constant(tolua_S,"clMonsterBeKilled",GameLog::clMonsterBeKilled);
   tolua_constant(tolua_S,"clStallStatistics",GameLog::clStallStatistics);
   tolua_constant(tolua_S,"clVocationChange",GameLog::clVocationChange);
   tolua_constant(tolua_S,"clSexChange",GameLog::clSexChange);
   tolua_constant(tolua_S,"clSpeedFinishQuest",GameLog::clSpeedFinishQuest);
   tolua_constant(tolua_S,"clDefendSbkGuild",GameLog::clDefendSbkGuild);
   tolua_constant(tolua_S,"clOutPutItemCount",GameLog::clOutPutItemCount);
   tolua_constant(tolua_S,"clFlushQuest",GameLog::clFlushQuest);
   tolua_constant(tolua_S,"clBookQuest",GameLog::clBookQuest);
   tolua_constant(tolua_S,"clAgainBookQuest",GameLog::clAgainBookQuest);
   tolua_constant(tolua_S,"clYbSpeedBook",GameLog::clYbSpeedBook);
   tolua_constant(tolua_S,"clBookQuest2Award",GameLog::clBookQuest2Award);
   tolua_constant(tolua_S,"clBookQuest3Award",GameLog::clBookQuest3Award);
   tolua_constant(tolua_S,"clLootDropBox",GameLog::clLootDropBox);
   tolua_constant(tolua_S,"clGMBackRemoveItem",GameLog::clGMBackRemoveItem);
   tolua_constant(tolua_S,"clGMBackRemoveMoney",GameLog::clGMBackRemoveMoney);
   tolua_constant(tolua_S,"clGiveSalary",GameLog::clGiveSalary);
   tolua_constant(tolua_S,"clDepotMoneyOpt",GameLog::clDepotMoneyOpt);
   tolua_constant(tolua_S,"clEquipSharp",GameLog::clEquipSharp);
   tolua_constant(tolua_S,"clSaveUseGmCmdToLog",GameLog::clSaveUseGmCmdToLog);
   tolua_constant(tolua_S,"clActorTotalConsume",GameLog::clActorTotalConsume);
   tolua_constant(tolua_S,"clKungfuAttactExp",GameLog::clKungfuAttactExp);
   tolua_constant(tolua_S,"clMailGetItem",GameLog::clMailGetItem);
   tolua_constant(tolua_S,"clBoss",GameLog::clBoss);
   tolua_constant(tolua_S,"clPupilToTeacherExp",GameLog::clPupilToTeacherExp);
   tolua_constant(tolua_S,"clExchangeAcheive",GameLog::clExchangeAcheive);
   tolua_constant(tolua_S,"clUseSpeedToolLog",GameLog::clUseSpeedToolLog);
   tolua_constant(tolua_S,"clUseSpeedToolSuspected",GameLog::clUseSpeedToolSuspected);
   tolua_constant(tolua_S,"clAchieveAwardOther",GameLog::clAchieveAwardOther);
   tolua_constant(tolua_S,"clSkillResultGiveAward",GameLog::clSkillResultGiveAward);
   tolua_constant(tolua_S,"clBuffAddExp",GameLog::clBuffAddExp);
   tolua_constant(tolua_S,"clCircleSoul",GameLog::clCircleSoul);
   tolua_constant(tolua_S,"clBufGetActivityExp",GameLog::clBufGetActivityExp);
   tolua_constant(tolua_S,"clGuildGx",GameLog::clGuildGx);
   tolua_constant(tolua_S,"clActorDepotMoney",GameLog::clActorDepotMoney);
   tolua_constant(tolua_S,"clSignCommonSbk",GameLog::clSignCommonSbk);
   tolua_constant(tolua_S,"clFubenCollectRemItem",GameLog::clFubenCollectRemItem);
   tolua_constant(tolua_S,"clEquipPropMove",GameLog::clEquipPropMove);
   tolua_constant(tolua_S,"clMoveEquipPropDel",GameLog::clMoveEquipPropDel);
   tolua_constant(tolua_S,"clMoveEquipPropAdd",GameLog::clMoveEquipPropAdd);
   tolua_constant(tolua_S,"clBuffAddMoney",GameLog::clBuffAddMoney);
   tolua_constant(tolua_S,"clScriptCreateDropItem",GameLog::clScriptCreateDropItem);
   tolua_constant(tolua_S,"clSendMail",GameLog::clSendMail);
   tolua_constant(tolua_S,"clDelMail",GameLog::clDelMail);
   tolua_constant(tolua_S,"clWorldLevelChange",GameLog::clWorldLevelChange);
   tolua_constant(tolua_S,"clAddNewTitle",GameLog::clAddNewTitle);
   tolua_constant(tolua_S,"clDelNewTitle",GameLog::clDelNewTitle);
   tolua_constant(tolua_S,"clAutoChangeLeader",GameLog::clAutoChangeLeader);
   tolua_constant(tolua_S,"clCoinChanged",GameLog::clCoinChanged);
   tolua_constant(tolua_S,"clNpcTradeRebuyItem",GameLog::clNpcTradeRebuyItem);
   tolua_constant(tolua_S,"clEqipRepair",GameLog::clEqipRepair);
   tolua_constant(tolua_S,"clDeathDropExp",GameLog::clDeathDropExp);
   tolua_constant(tolua_S,"clReliveConsume",GameLog::clReliveConsume);
   tolua_constant(tolua_S,"clAcceptRoleByMoney",GameLog::clAcceptRoleByMoney);
   tolua_constant(tolua_S,"clEnlargeDepot",GameLog::clEnlargeDepot);
   tolua_constant(tolua_S,"clSoldierSoulUnlock",GameLog::clSoldierSoulUnlock);
   tolua_constant(tolua_S,"clSoldierSoulLevelupSkill",GameLog::clSoldierSoulLevelupSkill);
   tolua_constant(tolua_S,"clSoldierSoulActStart",GameLog::clSoldierSoulActStart);
   tolua_constant(tolua_S,"clSoldierSoulTakeOn",GameLog::clSoldierSoulTakeOn);
   tolua_constant(tolua_S,"clSoldierSoulTakeOff",GameLog::clSoldierSoulTakeOff);
   tolua_constant(tolua_S,"clTrackActorFee",GameLog::clTrackActorFee);
   tolua_constant(tolua_S,"clEquipStar",GameLog::clEquipStar);
   tolua_constant(tolua_S,"clUseBackToCityItem",GameLog::clUseBackToCityItem);
   tolua_constant(tolua_S,"clUseSkillBook",GameLog::clUseSkillBook);
   tolua_constant(tolua_S,"clRedName",GameLog::clRedName);
   tolua_constant(tolua_S,"clCircleLevel",GameLog::clCircleLevel);
   tolua_constant(tolua_S,"clPersonBoss",GameLog::clPersonBoss);
   tolua_constant(tolua_S,"clEquipRecover",GameLog::clEquipRecover);
   tolua_constant(tolua_S,"clEquipComposite",GameLog::clEquipComposite);
   tolua_constant(tolua_S,"clOnNpcTeleport",GameLog::clOnNpcTeleport);
   tolua_constant(tolua_S,"clGuildDonateDelCoin",GameLog::clGuildDonateDelCoin);
   tolua_constant(tolua_S,"clGuildDonateDelItem",GameLog::clGuildDonateDelItem);
   tolua_constant(tolua_S,"clEquipPosStrongUpgrade",GameLog::clEquipPosStrongUpgrade);
   tolua_constant(tolua_S,"clCircleFuben",GameLog::clCircleFuben);
   tolua_constant(tolua_S,"clGuildTreeChargeDelItem",GameLog::clGuildTreeChargeDelItem);
   tolua_constant(tolua_S,"clGuildFuitGet",GameLog::clGuildFuitGet);
   tolua_constant(tolua_S,"cWingActivation",GameLog::cWingActivation);
   tolua_constant(tolua_S,"clGuildGetTaskAward",GameLog::clGuildGetTaskAward);
   tolua_constant(tolua_S,"clGuildGetBenefit",GameLog::clGuildGetBenefit);
   tolua_constant(tolua_S,"clUseExpItem",GameLog::clUseExpItem);
   tolua_constant(tolua_S,"cGuildSiegeGatherGetJadeSeal",GameLog::cGuildSiegeGatherGetJadeSeal);
   tolua_constant(tolua_S,"cGuildSiegeDeleteJadeSeal",GameLog::cGuildSiegeDeleteJadeSeal);
   tolua_constant(tolua_S,"cGuildGetCityPosWelfare",GameLog::cGuildGetCityPosWelfare);
   tolua_constant(tolua_S,"cGuildSiegeCallGuard",GameLog::cGuildSiegeCallGuard);
   tolua_constant(tolua_S,"cGuildSiegeStatueWorship",GameLog::cGuildSiegeStatueWorship);
   tolua_constant(tolua_S,"cGuildSiegeStatueGoldBlack",GameLog::cGuildSiegeStatueGoldBlack);
   tolua_constant(tolua_S,"crepairAllEquipItemFunc",GameLog::crepairAllEquipItemFunc);
   tolua_constant(tolua_S,"cGuildSiegeDropJadeSeal",GameLog::cGuildSiegeDropJadeSeal);
   tolua_constant(tolua_S,"clForce",GameLog::clForce);
   tolua_constant(tolua_S,"cUseInnerItem",GameLog::cUseInnerItem);
   tolua_constant(tolua_S,"clTeamFuben",GameLog::clTeamFuben);
   tolua_constant(tolua_S,"clGuildActSucc",GameLog::clGuildActSucc);
   tolua_constant(tolua_S,"clConsignmentSellItem",GameLog::clConsignmentSellItem);
   tolua_constant(tolua_S,"clConsignmentGetItemBack",GameLog::clConsignmentGetItemBack);
   tolua_constant(tolua_S,"clConsignmentBuyItem",GameLog::clConsignmentBuyItem);
   tolua_constant(tolua_S,"clConsignmentGetIncome",GameLog::clConsignmentGetIncome);
   tolua_constant(tolua_S,"clGetOnlineReward",GameLog::clGetOnlineReward);
   tolua_constant(tolua_S,"clOnCheckSignIn",GameLog::clOnCheckSignIn);
   tolua_constant(tolua_S,"clWorshMonarchAddExp",GameLog::clWorshMonarchAddExp);
   tolua_constant(tolua_S,"clLogOutExpSave",GameLog::clLogOutExpSave);
   tolua_constant(tolua_S,"clWorkDayAward",GameLog::clWorkDayAward);
   tolua_constant(tolua_S,"clOnAsyncOpResultFunc",GameLog::clOnAsyncOpResultFunc);
   tolua_constant(tolua_S,"clExploitExchangeExp",GameLog::clExploitExchangeExp);
   tolua_constant(tolua_S,"clExploitChangeLog",GameLog::clExploitChangeLog);
   tolua_constant(tolua_S,"clThings",GameLog::clThings);
   tolua_constant(tolua_S,"clProtectTuCityBegin",GameLog::clProtectTuCityBegin);
   tolua_constant(tolua_S,"clProtectTuCityEnd",GameLog::clProtectTuCityEnd);
   tolua_constant(tolua_S,"clRewardQuestReset",GameLog::clRewardQuestReset);
   tolua_constant(tolua_S,"clOpenServerEarYb",GameLog::clOpenServerEarYb);
   tolua_constant(tolua_S,"clResetRewardQuestDelItem",GameLog::clResetRewardQuestDelItem);
   tolua_constant(tolua_S,"clResetRewardQuestDelMoney",GameLog::clResetRewardQuestDelMoney);
   tolua_constant(tolua_S,"cl_215",GameLog::cl_215);
   tolua_constant(tolua_S,"clFinishRewardQuestDelMoney",GameLog::clFinishRewardQuestDelMoney);
   tolua_constant(tolua_S,"clItemMergeBindInfect",GameLog::clItemMergeBindInfect);
   tolua_constant(tolua_S,"clAddExpByExpBox",GameLog::clAddExpByExpBox);
   tolua_constant(tolua_S,"clUseExpBox",GameLog::clUseExpBox);
   tolua_constant(tolua_S,"clGetDailyChargeAward",GameLog::clGetDailyChargeAward);
   tolua_constant(tolua_S,"clUseExpJade",GameLog::clUseExpJade);
   tolua_constant(tolua_S,"clMonarchInspireCoin",GameLog::clMonarchInspireCoin);
   tolua_constant(tolua_S,"clMonarchInspireYuanBao",GameLog::clMonarchInspireYuanBao);
   tolua_constant(tolua_S,"clBloodyFlames",GameLog::clBloodyFlames);
   tolua_constant(tolua_S,"clSupplyBegin",GameLog::clSupplyBegin);
   tolua_constant(tolua_S,"clSupplyEnd",GameLog::clSupplyEnd);
   tolua_constant(tolua_S,"clEscort",GameLog::clEscort);
   tolua_constant(tolua_S,"clZhuMo",GameLog::clZhuMo);
   tolua_constant(tolua_S,"clRedPacketSend",GameLog::clRedPacketSend);
   tolua_constant(tolua_S,"clGrabRedPacketSuc",GameLog::clGrabRedPacketSuc);
   tolua_constant(tolua_S,"clLauncher",GameLog::clLauncher);
   tolua_constant(tolua_S,"clGetSevenGoodGift",GameLog::clGetSevenGoodGift);
   tolua_constant(tolua_S,"clGetTotalChargeGift",GameLog::clGetTotalChargeGift);
   tolua_constant(tolua_S,"clFirstChargeAward",GameLog::clFirstChargeAward);
   tolua_constant(tolua_S,"clGetGameBackCompensate",GameLog::clGetGameBackCompensate);
   tolua_constant(tolua_S,"clFlyingShoes",GameLog::clFlyingShoes);
   tolua_constant(tolua_S,"clPersonBossSweep",GameLog::clPersonBossSweep);
   tolua_constant(tolua_S,"cl_245",GameLog::cl_245);
   tolua_constant(tolua_S,"clOpenServerGift",GameLog::clOpenServerGift);
   tolua_constant(tolua_S,"clOpenSellBox",GameLog::clOpenSellBox);
   tolua_constant(tolua_S,"clExpRefine",GameLog::clExpRefine);
   tolua_constant(tolua_S,"clConsignmentShouting",GameLog::clConsignmentShouting);
   tolua_constant(tolua_S,"clExpCell",GameLog::clExpCell);
   tolua_constant(tolua_S,"clGetActivityAward",GameLog::clGetActivityAward);
   tolua_constant(tolua_S,"clMicronesia",GameLog::clMicronesia);
   tolua_constant(tolua_S,"clTeamPaTaPassAward",GameLog::clTeamPaTaPassAward);
   tolua_constant(tolua_S,"clBookQuest4Award",GameLog::clBookQuest4Award);
   tolua_constant(tolua_S,"clPersonPaTaPassAward",GameLog::clPersonPaTaPassAward);
   tolua_constant(tolua_S,"clOpenSellBoxItem1",GameLog::clOpenSellBoxItem1);
   tolua_constant(tolua_S,"clOpenSellBoxItem2",GameLog::clOpenSellBoxItem2);
   tolua_constant(tolua_S,"clOpenSellBoxItem3",GameLog::clOpenSellBoxItem3);
   tolua_constant(tolua_S,"clOpenSellBoxItem4",GameLog::clOpenSellBoxItem4);
   tolua_constant(tolua_S,"clOpenServerGiftItem1",GameLog::clOpenServerGiftItem1);
   tolua_constant(tolua_S,"clOpenServerGiftItem3",GameLog::clOpenServerGiftItem3);
   tolua_constant(tolua_S,"clOpenServerGiftItem4",GameLog::clOpenServerGiftItem4);
   tolua_constant(tolua_S,"clOpenServerGiftItem5",GameLog::clOpenServerGiftItem5);
   tolua_constant(tolua_S,"clBagToGuildDepot",GameLog::clBagToGuildDepot);
   tolua_constant(tolua_S,"clGuildDepotToBag",GameLog::clGuildDepotToBag);
   tolua_constant(tolua_S,"clGuildDepotDel",GameLog::clGuildDepotDel);
   tolua_constant(tolua_S,"clExchangeCirclSoulExp",GameLog::clExchangeCirclSoulExp);
   tolua_constant(tolua_S,"clExchangeWingPointExp",GameLog::clExchangeWingPointExp);
   tolua_constant(tolua_S,"clChallengeFBGetAward",GameLog::clChallengeFBGetAward);
   tolua_constant(tolua_S,"clChallengeFBGetAwardDelYB",GameLog::clChallengeFBGetAwardDelYB);
   tolua_constant(tolua_S,"clUseSkillBookByMoney",GameLog::clUseSkillBookByMoney);
   tolua_constant(tolua_S,"clOpenServerGetAward",GameLog::clOpenServerGetAward);
   tolua_constant(tolua_S,"clBossHomeEnter",GameLog::clBossHomeEnter);
   tolua_constant(tolua_S,"clRecommendedUpgrade",GameLog::clRecommendedUpgrade);
   tolua_constant(tolua_S,"clMoneyTree",GameLog::clMoneyTree);
   tolua_constant(tolua_S,"clOpenServerGiftItem6",GameLog::clOpenServerGiftItem6);
   tolua_constant(tolua_S,"clOpenServerGiftItem7",GameLog::clOpenServerGiftItem7);
   tolua_constant(tolua_S,"clOpenServerGiftItem8",GameLog::clOpenServerGiftItem8);
   tolua_constant(tolua_S,"clOpenServerGiftItem9",GameLog::clOpenServerGiftItem9);
   tolua_constant(tolua_S,"clAllChargeGiftAdd",GameLog::clAllChargeGiftAdd);
   tolua_constant(tolua_S,"clAllChargeGiftGet",GameLog::clAllChargeGiftGet);
   tolua_constant(tolua_S,"cl_284",GameLog::cl_284);
   tolua_constant(tolua_S,"cl_285",GameLog::cl_285);
   tolua_constant(tolua_S,"clUseJieBiaoBox",GameLog::clUseJieBiaoBox);
   tolua_constant(tolua_S,"clEQuipPropertyInscriptLevel",GameLog::clEQuipPropertyInscriptLevel);
   tolua_constant(tolua_S,"clEQuipPropertyLostStar",GameLog::clEQuipPropertyLostStar);
   tolua_constant(tolua_S,"clGodStoveGetItem",GameLog::clGodStoveGetItem);
   tolua_constant(tolua_S,"clGodStoveUpgradeItem",GameLog::clGodStoveUpgradeItem);
   tolua_constant(tolua_S,"clAddSkillExpDelItem",GameLog::clAddSkillExpDelItem);
   tolua_constant(tolua_S,"clAllDay",GameLog::clAllDay);
   tolua_constant(tolua_S,"clEquipStarAddRateFee",GameLog::clEquipStarAddRateFee);
   tolua_constant(tolua_S,"clEquipStarRecoverFee",GameLog::clEquipStarRecoverFee);
   tolua_constant(tolua_S,"clEquipStarTransferFee",GameLog::clEquipStarTransferFee);
   tolua_constant(tolua_S,"clEquipInscriptDelItem",GameLog::clEquipInscriptDelItem);
   tolua_constant(tolua_S,"clEquipInscriptFee",GameLog::clEquipInscriptFee);
   tolua_constant(tolua_S,"clEquipInscriptTransFee",GameLog::clEquipInscriptTransFee);
   tolua_constant(tolua_S,"clEquipInscriptTransDelItem",GameLog::clEquipInscriptTransDelItem);
   tolua_constant(tolua_S,"clEquipCompositeDelItem",GameLog::clEquipCompositeDelItem);
   tolua_constant(tolua_S,"clEquipCompositeAddItem",GameLog::clEquipCompositeAddItem);
   tolua_constant(tolua_S,"clBossjfExchange",GameLog::clBossjfExchange);
   tolua_constant(tolua_S,"clHeroExp",GameLog::clHeroExp);
   tolua_constant(tolua_S,"clFreshGameMystiaclShopDelItem",GameLog::clFreshGameMystiaclShopDelItem);
   tolua_constant(tolua_S,"clFreshGameMystiaclShopDelFee",GameLog::clFreshGameMystiaclShopDelFee);
   tolua_constant(tolua_S,"clBuyGameMystiaclShopItemNum",GameLog::clBuyGameMystiaclShopItemNum);
   tolua_constant(tolua_S,"clBuyGameMystiaclShopItemFee",GameLog::clBuyGameMystiaclShopItemFee);
   tolua_constant(tolua_S,"clMeritoriousAward",GameLog::clMeritoriousAward);
   tolua_constant(tolua_S,"clRestoreHpMp",GameLog::clRestoreHpMp);
   tolua_constant(tolua_S,"clCombatChallengeAward",GameLog::clCombatChallengeAward);
   tolua_constant(tolua_S,"clCombatRechargeAward",GameLog::clCombatRechargeAward);
   tolua_constant(tolua_S,"clMaterialFBEnterFee",GameLog::clMaterialFBEnterFee);
   tolua_constant(tolua_S,"clMaterialFBGetAwardFee",GameLog::clMaterialFBGetAwardFee);
   tolua_constant(tolua_S,"clMaterialFBGetAward",GameLog::clMaterialFBGetAward);
   tolua_constant(tolua_S,"clMaterialFBSweepFee",GameLog::clMaterialFBSweepFee);
   tolua_constant(tolua_S,"clMaterialFBSweepAward",GameLog::clMaterialFBSweepAward);
   tolua_constant(tolua_S,"clGoMaYa",GameLog::clGoMaYa);
   tolua_constant(tolua_S,"clYYPurpleDiamondAward",GameLog::clYYPurpleDiamondAward);
   tolua_constant(tolua_S,"clStoreBuyOp",GameLog::clStoreBuyOp);
   tolua_constant(tolua_S,"clGRBossAward",GameLog::clGRBossAward);
   tolua_constant(tolua_S,"clGRBossDoubleAward",GameLog::clGRBossDoubleAward);
   tolua_constant(tolua_S,"clBossMob",GameLog::clBossMob);
   tolua_constant(tolua_S,"clBossKilled",GameLog::clBossKilled);
   tolua_constant(tolua_S,"clBossTimeout",GameLog::clBossTimeout);
   tolua_constant(tolua_S,"clActivityRecord",GameLog::clActivityRecord);
   tolua_constant(tolua_S,"clHeroForce",GameLog::clHeroForce);
   tolua_constant(tolua_S,"clItemRedNameMedicalUse",GameLog::clItemRedNameMedicalUse);
   tolua_constant(tolua_S,"clOpenServerThemeSendAward",GameLog::clOpenServerThemeSendAward);
   tolua_constant(tolua_S,"clDailyChargeResetRank",GameLog::clDailyChargeResetRank);
   tolua_constant(tolua_S,"clGuildDepotPutIn",GameLog::clGuildDepotPutIn);
   tolua_constant(tolua_S,"clGuildDepotGetOut",GameLog::clGuildDepotGetOut);
   tolua_constant(tolua_S,"clGuildDepotCheck",GameLog::clGuildDepotCheck);
   tolua_constant(tolua_S,"clLockBossEnterConsume",GameLog::clLockBossEnterConsume);
   tolua_constant(tolua_S,"clGuildNest",GameLog::clGuildNest);
   tolua_constant(tolua_S,"clNightFighting",GameLog::clNightFighting);
   tolua_constant(tolua_S,"clRollItem",GameLog::clRollItem);
   tolua_constant(tolua_S,"clHeroSystemPack",GameLog::clHeroSystemPack);
   tolua_constant(tolua_S,"clEquipIdentifySlotUnlock",GameLog::clEquipIdentifySlotUnlock);
   tolua_constant(tolua_S,"clEquipIdentify",GameLog::clEquipIdentify);
   tolua_constant(tolua_S,"clEquipIdentifyUnlockSlotFee",GameLog::clEquipIdentifyUnlockSlotFee);
   tolua_constant(tolua_S,"clEquipIdentifyFee",GameLog::clEquipIdentifyFee);
   tolua_constant(tolua_S,"clEquipIdentifySlotLockFee",GameLog::clEquipIdentifySlotLockFee);
   tolua_constant(tolua_S,"clEquipIdentifyTransferFee",GameLog::clEquipIdentifyTransferFee);
   tolua_constant(tolua_S,"clChatAutoShutUp",GameLog::clChatAutoShutUp);
   tolua_constant(tolua_S,"clGuildBidRank",GameLog::clGuildBidRank);
   tolua_constant(tolua_S,"clGuildChangeCoin",GameLog::clGuildChangeCoin);
   tolua_constant(tolua_S,"clPackItem",GameLog::clPackItem);
   tolua_constant(tolua_S,"clDayMatch",GameLog::clDayMatch);
   tolua_constant(tolua_S,"clgetYYGiftAward",GameLog::clgetYYGiftAward);
   tolua_constant(tolua_S,"clComboServer",GameLog::clComboServer);
   tolua_constant(tolua_S,"clOpenServerBoss",GameLog::clOpenServerBoss);
   tolua_constant(tolua_S,"clOpenServerGiftItem10",GameLog::clOpenServerGiftItem10);
   tolua_constant(tolua_S,"clOpenServerGiftItem11",GameLog::clOpenServerGiftItem11);
   tolua_constant(tolua_S,"clOpenServerGiftItem12",GameLog::clOpenServerGiftItem12);
   tolua_constant(tolua_S,"clGroupBuy",GameLog::clGroupBuy);
   tolua_constant(tolua_S,"clRoleFuben",GameLog::clRoleFuben);
   tolua_constant(tolua_S,"clFirstLogin",GameLog::clFirstLogin);
   tolua_constant(tolua_S,"cNpcPersongift",GameLog::cNpcPersongift);
   tolua_constant(tolua_S,"cNpcBigTreasure",GameLog::cNpcBigTreasure);
   tolua_constant(tolua_S,"clAddExpbyPaoDian",GameLog::clAddExpbyPaoDian);
   tolua_constant(tolua_S,"clChargeYuanbao",GameLog::clChargeYuanbao);
   tolua_constant(tolua_S,"clAllchargeBonus",GameLog::clAllchargeBonus);
   tolua_constant(tolua_S,"clTehuilibaoAtv",GameLog::clTehuilibaoAtv);
   tolua_constant(tolua_S,"clShouchongAtv",GameLog::clShouchongAtv);
   tolua_constant(tolua_S,"clDaKaActivity",GameLog::clDaKaActivity);
   tolua_constant(tolua_S,"clDengLuJiJingAtv",GameLog::clDengLuJiJingAtv);
   tolua_constant(tolua_S,"clBuyDengLuJiJingAtv",GameLog::clBuyDengLuJiJingAtv);
   tolua_constant(tolua_S,"clKillMonsterItem",GameLog::clKillMonsterItem);
   tolua_constant(tolua_S,"cl_501",GameLog::cl_501);
   tolua_constant(tolua_S,"clDealTransferMoney",GameLog::clDealTransferMoney);
   tolua_constant(tolua_S,"clDealTransYuanbao",GameLog::clDealTransYuanbao);
   tolua_constant(tolua_S,"clGetYbFirstTimes",GameLog::clGetYbFirstTimes);
   tolua_constant(tolua_S,"clKilledByMonster",GameLog::clKilledByMonster);
   tolua_constant(tolua_S,"clStallSellItemMoney",GameLog::clStallSellItemMoney);
   tolua_constant(tolua_S,"clDeathDropItem",GameLog::clDeathDropItem);
   tolua_constant(tolua_S,"clOnlineTime",GameLog::clOnlineTime);
   tolua_constant(tolua_S,"clAddItem",GameLog::clAddItem);
   tolua_constant(tolua_S,"clEXchangeCoin",GameLog::clEXchangeCoin);
   tolua_constant(tolua_S,"clComPoseItem",GameLog::clComPoseItem);
   tolua_constant(tolua_S,"clForgetem",GameLog::clForgetem);
   tolua_constant(tolua_S,"clConsumeSource",GameLog::clConsumeSource);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CQuestData","CQuestData","",NULL);
  tolua_beginmodule(tolua_S,"CQuestData");
   tolua_constant(tolua_S,"qsAuto",CQuestData::qsAuto);
   tolua_constant(tolua_S,"qsCustom",CQuestData::qsCustom);
   tolua_constant(tolua_S,"qecSucc",CQuestData::qecSucc);
   tolua_constant(tolua_S,"qecNoQuest",CQuestData::qecNoQuest);
   tolua_constant(tolua_S,"qecCanNotFinish",CQuestData::qecCanNotFinish);
   tolua_constant(tolua_S,"qecGetAward",CQuestData::qecGetAward);
   tolua_constant(tolua_S,"qecGetAwardPara",CQuestData::qecGetAwardPara);
   tolua_constant(tolua_S,"qecNotGiveUp",CQuestData::qecNotGiveUp);
   tolua_constant(tolua_S,"qecNoQuestItem",CQuestData::qecNoQuestItem);
   tolua_constant(tolua_S,"qecDoing",CQuestData::qecDoing);
   tolua_constant(tolua_S,"qecNewCond",CQuestData::qecNewCond);
   tolua_constant(tolua_S,"qecMainFinish",CQuestData::qecMainFinish);
   tolua_constant(tolua_S,"qecRepeatMax",CQuestData::qecRepeatMax);
   tolua_constant(tolua_S,"qecInterval",CQuestData::qecInterval);
   tolua_constant(tolua_S,"qecParent",CQuestData::qecParent);
   tolua_constant(tolua_S,"qecExcludeTree",CQuestData::qecExcludeTree);
   tolua_constant(tolua_S,"qecSkill",CQuestData::qecSkill);
   tolua_constant(tolua_S,"qecNotAutoCompleteQuest",CQuestData::qecNotAutoCompleteQuest);
   tolua_constant(tolua_S,"qecQuestFull",CQuestData::qecQuestFull);
   tolua_constant(tolua_S,"qecErr",CQuestData::qecErr);
   tolua_constant(tolua_S,"qtMonster",CQuestData::qtMonster);
   tolua_constant(tolua_S,"qtEquip",CQuestData::qtEquip);
   tolua_constant(tolua_S,"qtLevel",CQuestData::qtLevel);
   tolua_constant(tolua_S,"qtRecover",CQuestData::qtRecover);
   tolua_constant(tolua_S,"qtcircle",CQuestData::qtcircle);
   tolua_constant(tolua_S,"qtSkillLv",CQuestData::qtSkillLv);
   tolua_constant(tolua_S,"qtFuben",CQuestData::qtFuben);
   tolua_constant(tolua_S,"qtBless",CQuestData::qtBless);
   tolua_constant(tolua_S,"qtCompose",CQuestData::qtCompose);
   tolua_constant(tolua_S,"qtEquipItem",CQuestData::qtEquipItem);
   tolua_constant(tolua_S,"qtGetItem",CQuestData::qtGetItem);
   tolua_constant(tolua_S,"qcLevel",CQuestData::qcLevel);
   tolua_constant(tolua_S,"qcGuildLevel",CQuestData::qcGuildLevel);
   tolua_constant(tolua_S,"qcJob",CQuestData::qcJob);
   tolua_constant(tolua_S,"qcMenPai",CQuestData::qcMenPai);
   tolua_constant(tolua_S,"qcSceneId",CQuestData::qcSceneId);
   tolua_constant(tolua_S,"qcKill",CQuestData::qcKill);
   tolua_constant(tolua_S,"qcPreQuest",CQuestData::qcPreQuest);
   tolua_constant(tolua_S,"qcItem",CQuestData::qcItem);
   tolua_constant(tolua_S,"qcItemCount",CQuestData::qcItemCount);
   tolua_constant(tolua_S,"qcUserItem",CQuestData::qcUserItem);
   tolua_constant(tolua_S,"qcMulMp",CQuestData::qcMulMp);
   tolua_constant(tolua_S,"qcMulParent",CQuestData::qcMulParent);
   tolua_constant(tolua_S,"qcSex",CQuestData::qcSex);
   tolua_constant(tolua_S,"qcPreDoing",CQuestData::qcPreDoing);
   tolua_constant(tolua_S,"qcCircle",CQuestData::qcCircle);
   tolua_constant(tolua_S,"qcLevelSection",CQuestData::qcLevelSection);
   tolua_constant(tolua_S,"qcCircleSection",CQuestData::qcCircleSection);
   tolua_constant(tolua_S,"qcOpenServerDay",CQuestData::qcOpenServerDay);
   tolua_constant(tolua_S,"qcMeritorious",CQuestData::qcMeritorious);
   tolua_constant(tolua_S,"qcAchieveComplete",CQuestData::qcAchieveComplete);
   tolua_constant(tolua_S,"qcOpenDay",CQuestData::qcOpenDay);
   tolua_constant(tolua_S,"qcMaxConition",CQuestData::qcMaxConition);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"LuaSocket","LuaSocket","",NULL);
  tolua_beginmodule(tolua_S,"LuaSocket");
   tolua_function(tolua_S,"NewSocket",tolua_server_LuaSocket_NewSocket00);
   tolua_function(tolua_S,"Release",tolua_server_LuaSocket_Release00);
   tolua_function(tolua_S,"GetHostByName",tolua_server_LuaSocket_GetHostByName00);
   tolua_function(tolua_S,"send",tolua_server_LuaSocket_send00);
   tolua_function(tolua_S,"connect",tolua_server_LuaSocket_connect00);
   tolua_function(tolua_S,"connect2",tolua_server_LuaSocket_connect200);
   tolua_function(tolua_S,"setSendTimeout",tolua_server_LuaSocket_setSendTimeout00);
   tolua_function(tolua_S,"setRecvTimeout",tolua_server_LuaSocket_setRecvTimeout00);
   tolua_function(tolua_S,"readline",tolua_server_LuaSocket_readline00);
   tolua_function(tolua_S,"readall",tolua_server_LuaSocket_readall00);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 int luaopen_server (lua_State* tolua_S) {
 return tolua_server_open(tolua_S);
};
#endif

